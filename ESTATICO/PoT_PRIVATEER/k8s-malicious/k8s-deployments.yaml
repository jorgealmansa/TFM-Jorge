apiVersion: apps/v1
kind: Deployment
metadata:
  name: host1
  namespace: scenario
spec:
  replicas: 1
  selector:
    matchLabels:
      app: host1
  template:
    metadata:
      labels:
        app: host1
      annotations:
        k8s.v1.cni.cncf.io/networks: |
          [
            {
              "name": "h1-ingress-net",
              "interface": "net1",
              "ips": [ "10.1.1.3/24" ],
              "gateway": "10.1.1.2", 
              "mac": "02:42:0a:01:01:03"
            }
          ]
    spec:
      containers:
      - name: host1
        image: jorgealmansa/scapy:latest
        securityContext:
          capabilities:
            add: ["NET_ADMIN"]
        command:
          - /bin/sh
          - -c
          - |
            # Desactiva offloads en la interfaz principal
            ethtool -K eth0 tx off sg off tso off
            # Ajustar permisos y ejecutar el script
            chmod +x /home/p4/pot/docker/run.sh
            /home/p4/pot/docker/run.sh host 1
        volumeMounts:
        - mountPath: /home/p4/pot
          name: pot-volume
        - mountPath: /home/p4/pot/docker/run.sh
          name: pot-run-config
          subPath: run.sh
          
      volumes:
      - name: pot-volume
        hostPath:
          path: /home/cgtid5/PoT_PRIVATEER
          type: Directory
      - name: pot-run-config
        configMap:
          name: pot-run-config
          defaultMode: 0755
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: host2
  namespace: scenario
spec:
  replicas: 1
  selector:
    matchLabels:
      app: host2
  template:
    metadata:
      labels:
        app: host2
      annotations:
        k8s.v1.cni.cncf.io/networks: |
          [
            {
              "name": "egress-h2-net",
              "interface": "net1",
              "ips": [ "10.1.2.3/24" ],
              "gateway": "10.1.2.2",
              "mac": "02:42:0a:01:02:03"
            }
          ]
    spec:
      containers:
      - name: host2
        image: jorgealmansa/scapy:latest
        securityContext:
          capabilities:
            add: ["NET_ADMIN"]
        command:
          - /bin/sh
          - -c
          - |
            ethtool -K eth0 tx off sg off tso off
            chmod +x /home/p4/pot/docker/run.sh
            /home/p4/pot/docker/run.sh host 2
        volumeMounts:
        - mountPath: /home/p4/pot
          name: pot-volume
        - mountPath: /home/p4/pot/docker/run.sh
          name: pot-run-config
          subPath: run.sh
          
      volumes:
      - name: pot-volume
        hostPath:
          path: /home/cgtid5/PoT_PRIVATEER
          type: Directory
      - name: pot-run-config
        configMap:
          name: pot-run-config
          defaultMode: 0755
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingressnode
  namespace: scenario
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingressnode
  template:
    metadata:
      labels:
        app: ingressnode
      annotations:
        k8s.v1.cni.cncf.io/networks: |
          [
            {
              "name": "h1-ingress-net",
              "interface": "net1",
              "ips": [ "10.1.1.2/24" ],
              "mac": "02:42:0a:01:01:02"
            },
            {
              "name": "ingress-middle1-net",
              "interface": "net2",
              "ips": [ "10.0.1.3/24" ],
              "mac": "02:42:0a:00:01:03"
            },
            {
              "name": "controller-net",
              "interface": "net3",
              "ips": [ "10.0.0.11/24" ],
              "mac": "02:42:0a:00:00:0b"
            }
          ]
    spec:
      containers:
      - name: ingressnode
        image: jorgealmansa/p4custom-kafka:latest
        securityContext:
          privileged: true
        command:
          - /bin/sh
          - -c
          - |
            
            chmod +x /home/p4/pot/docker/run.sh
            /home/p4/pot/docker/run.sh 11
        volumeMounts:
        - mountPath: /home/p4/pot
          name: pot-volume
        - mountPath: /home/p4/pot/docker/run.sh
          name: pot-run-config
          subPath: run.sh
          
      volumes:
      - name: pot-volume
        hostPath:
          path: /home/cgtid5/PoT_PRIVATEER
          type: Directory
      - name: pot-run-config
        configMap:
          name: pot-run-config
          defaultMode: 0755
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: middlenode-1
  namespace: scenario
spec:
  replicas: 1
  selector:
    matchLabels:
      app: middlenode-1
  template:
    metadata:
      labels:
        app: middlenode-1
      annotations:
        k8s.v1.cni.cncf.io/networks: |
          [
            {
              "name": "ingress-middle1-net",
              "interface": "net1",
              "ips": [ "10.0.1.2/24" ],
              "mac": "02:42:0a:00:01:02"
            },
            {
              "name": "middle1-middle2-net",
              "interface": "net2",
              "ips": [ "10.0.2.3/24" ],
              "mac": "02:42:0a:00:02:03"
            },
            {
              "name": "controller-net",
              "interface": "net3",
              "ips": [ "10.0.0.12/24" ],
              "mac": "02:42:0a:00:00:0c"
            },
            {
              "name": "middle1-zmalicious",
              "interface": "net4",
              "ips": [ "10.0.0.12/24" ],
              "mac": "02:42:0a:0a:00:64"
            }
          ]
    spec:
      containers:
      - name: middlenode-1
        image: jorgealmansa/p4custom-kafka:latest
        securityContext:
          privileged: true
        command:
          - /bin/sh
          - -c
          - |
            
            chmod +x /home/p4/pot/docker/run.sh
            /home/p4/pot/docker/run.sh 12
        volumeMounts:
        - mountPath: /home/p4/pot
          name: pot-volume
        - mountPath: /home/p4/pot/docker/run.sh
          name: pot-run-config
          subPath: run.sh
          
      volumes:
      - name: pot-volume
        hostPath:
          path: /home/cgtid5/PoT_PRIVATEER
          type: Directory
      - name: pot-run-config
        configMap:
          name: pot-run-config
          defaultMode: 0755
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: middlenode-2
  namespace: scenario
spec:
  replicas: 1
  selector:
    matchLabels:
      app: middlenode-2
  template:
    metadata:
      labels:
        app: middlenode-2
      annotations:
        k8s.v1.cni.cncf.io/networks: |
          [
            {
              "name": "middle1-middle2-net",
              "interface": "net1",
              "ips": [ "10.0.2.2/24" ],
              "mac": "02:42:0a:00:02:02"
            },
            {
              "name": "middle2-egress-net",
              "interface": "net2",
              "ips": [ "10.0.3.3/24" ],
              "mac": "02:42:0a:00:03:03"
            },
            {
              "name": "controller-net",
              "interface": "net3",
              "ips": [ "10.0.0.13/24" ],
              "mac": "02:42:0a:00:00:0d"
            }
          ]
    spec:
      containers:
      - name: middlenode-2
        image: jorgealmansa/p4custom-kafka:latest
        securityContext:
          privileged: true
        command:
          - /bin/sh
          - -c
          - |
            
            chmod +x /home/p4/pot/docker/run.sh
            /home/p4/pot/docker/run.sh 13
        volumeMounts:
        - mountPath: /home/p4/pot
          name: pot-volume
        - mountPath: /home/p4/pot/docker/run.sh
          name: pot-run-config
          subPath: run.sh
          
      volumes:
      - name: pot-volume
        hostPath:
          path: /home/cgtid5/PoT_PRIVATEER
          type: Directory
      - name: pot-run-config
        configMap:
          name: pot-run-config
          defaultMode: 0755
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: egressnode
  namespace: scenario
spec:
  replicas: 1
  selector:
    matchLabels:
      app: egressnode
  template:
    metadata:
      labels:
        app: egressnode
      annotations:
        k8s.v1.cni.cncf.io/networks: |
          [
            {
              "name": "middle2-egress-net",
              "interface": "net1",
              "ips": [ "10.0.3.2/24" ],
              "mac": "02:42:0a:00:03:02"
            },
            {
              "name": "egress-h2-net",
              "interface": "net2",
              "ips": [ "10.1.2.2/24" ],
              "mac": "02:42:0a:01:02:02"
            },
            {
              "name": "controller-net",
              "interface": "net3",
              "ips": [ "10.0.0.14/24" ],
              "mac": "02:42:0a:00:00:0e"
            },
            {
              "name": "zmalicious-egress",
              "interface": "net4",
              "ips": [ "10.11.0.100/24" ],
              "mac": "02:42:0a:0b:00:64"
            }
            
          ]
    spec:
      containers:
      - name: egressnode
        image: jorgealmansa/p4custom-kafka:latest
        securityContext:
          privileged: true
        command:
          - /bin/sh
          - -c
          - |
            
            sudo chmod +x /home/p4/pot/docker/run.sh
            sudo /home/p4/pot/docker/run.sh 14
        volumeMounts:
        - mountPath: /home/p4/pot
          name: pot-volume
        - mountPath: /home/p4/pot/docker/run.sh
          name: pot-run-config
          subPath: run.sh
          
      volumes:
      - name: pot-volume
        hostPath:
          path: /home/cgtid5/PoT_PRIVATEER
          type: Directory
      - name: pot-run-config
        configMap:
          name: pot-run-config
          defaultMode: 0755
---
# ServiceAccount para el controlador
apiVersion: v1
kind: ServiceAccount
metadata:
  name: controller-sa
  namespace: scenario
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: controller-role
rules:
  # Para ver Pods en el namespace scenario:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]

  # --- NUEVO: para que Kopf no falle en la discovery de CRDs:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch"]

  # --- NUEVO: para poder listar namespaces, que Kopf también consulta:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list", "watch"]
---
# RoleBinding para asignar el Role al ServiceAccount
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: controller-role-binding
  namespace: scenario
subjects:
  - kind: ServiceAccount
    name: controller-sa
    namespace: scenario
roleRef:
  kind: ClusterRole
  name: controller-role
  apiGroup: rbac.authorization.k8s.io
---
# Deployment del controlador con el ServiceAccount asociado
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller
  namespace: scenario
spec:
  replicas: 1
  selector:
    matchLabels:
      app: controller
  template:
    metadata:
      labels:
        app: controller
      annotations:
        k8s.v1.cni.cncf.io/networks: |
          [
            {
              "name": "controller-net",
              "interface": "net1",
              "ips": [ "10.0.0.10/24" ],
              "mac": "02:42:0a:00:00:0a"
            },
            {
              "name": "kafka-net",
              "interface": "net2",
              "ips": [ "10.2.1.10/24" ],
              "mac": "02:42:0a:02:01:0a"
            }
          ]
    spec:
      serviceAccountName: controller-sa  # Asignar el ServiceAccount al controlador
      containers:
      - name: controller
        image: jorgealmansa/p4custom-kafka:latest
        securityContext:
          privileged: true
        command:
          - /bin/sh
          - -c
          - |
            sudo sysctl -w net.ipv4.ip_forward=1
            sudo ip route add 192.168.49.0/24 via 10.244.0.1 dev eth0
            chmod +x /home/p4/pot/docker/run.sh
            /home/p4/pot/docker/run.sh controller 4
        volumeMounts:
        - mountPath: /home/p4/pot
          name: pot-volume
          readOnly: false
        - mountPath: /home/p4/pot/docker/run.sh
          name: pot-run-config
          subPath: run.sh
          readOnly: false
      - name: operator
        image: jorgealmansa/p4custom-kafka:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            sleep 30
            # Ejecutar el operador en modo "standalone"
            cp controller/switch.py /home/p4/tutorials/utils/p4runtime_lib/switch.py
            echo "Copia"
            kopf run --standalone controller/operator.py --namespace scenario
        volumeMounts:
        - name: operator-code
          mountPath: /home/p4/pot
          readOnly: false

      volumes:
      - name: pot-volume
        hostPath:
          path: /home/cgtid5/PoT_PRIVATEER
          type: Directory
      - name: pot-run-config
        configMap:
          name: pot-run-config
          defaultMode: 0755
      - name: operator-code
        hostPath:
          path: /home/cgtid5/PoT_PRIVATEER
          type: Directory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: scenario
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
      annotations:
        k8s.v1.cni.cncf.io/networks: |
          [
            {
              "name": "kafka-net",
              "interface": "net1",
              "ips": [ "10.2.1.3/24" ]
            }
          ]
    spec:
      containers:
      - name: kafka
        image: bashj79/kafka-kraft
        ports:
        - containerPort: 9092
          name: plaintext
        - containerPort: 9093
          name: controller
        env:
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
        - name: KAFKA_PROCESS_ROLES
          value: "broker,controller"
        - name: KAFKA_NODE_ID
          value: "1"
        - name: KAFKA_CONTROLLER_QUORUM_VOTERS
          value: "1@10.2.1.3:9093"
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://10.2.1.3:9092"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: evilnode
  namespace: scenario
spec:
  replicas: 1
  selector:
    matchLabels:
      app: evilnode
  template:
    metadata:
      labels:
        app: evilnode
      annotations:
        k8s.v1.cni.cncf.io/networks: |
          [
            {
              "name": "middle1-zmalicious",
              "interface": "net1",
              "ips": [ "10.10.0.101/24" ],
              "mac": "02:42:0a:0a:00:65"
            },
            {
              "name": "zmalicious-egress",
              "interface": "net2",
              "ips": [ "10.11.0.101/24" ],
              "mac": "02:42:0a:0b:00:65"
            }
          ]
    spec:
      containers:
      - name: evil-node
        image: jorgealmansa/p4custom-kafka:latest
        securityContext:
          privileged: true
        command:
          - /bin/sh
          - -c
          - |
            chmod +x /home/p4/pot/docker/run.sh
            /home/p4/pot/docker/run.sh evil
        volumeMounts:
        - mountPath: /home/p4/pot
          name: pot-volume
        - mountPath: /home/p4/pot/docker/run.sh
          name: pot-run-config
          subPath: run.sh
      volumes:
      - name: pot-volume
        hostPath:
          path: /home/cgtid5/PoT_PRIVATEER
          type: Directory
      - name: pot-run-config
        configMap:
          name: pot-run-config
          defaultMode: 0755

