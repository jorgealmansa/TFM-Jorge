apiVersion: v1
kind: ConfigMap
metadata:
  name: pot-run-config
  namespace: scenario
data:
  run.sh: |
    #!/bin/sh

    if [ $1 = "host" ]; then
        ethtool -K eth0 tx off sg off tso off
        if [ $2 = "1" ]; then
            # Rutas para host1
            ip route add 10.1.2.0/24 via 10.1.1.2
        else
            # Rutas para host2
            ip route add 10.1.1.0/24 via 10.1.2.2
        fi
    elif [ $1 = "controller" ]; then
        sudo pip3 install confluent_kafka
        sudo parameters_generation/gen_keys.sh $2
        sudo chmod 777 keys/ca.crt
        sudo cp controller/switch.py /home/p4/tutorials/utils/p4runtime_lib/switch.py
        sudo influxd &
        sleep 20
        influx -execute "CREATE DATABASE int_telemetry_db"
        p4c-bm2-ss --p4v 16 --p4runtime-files p4/pot.p4.p4info.txt -o p4/pot.json p4/pot.p4
        sudo python3 controller/runtimev2.py --p4info p4/pot.p4.p4info.txt --bmv2-json p4/pot.json --ssl
        sleep 20
        sudo python3 controller/collector_kafka.py -c $2 &
    elif [ $1 = "evil" ]; then
        sudo ip route add 10.1.2.0/24 via 10.11.0.100
        sudo ip route add 10.1.1.0/24 via 10.10.0.100
    else
        sleep 10
        sudo sysctl -w net.ipv4.ip_forward=0
        sudo chmod 777 keys/server_$1.crt
        sudo simple_switch_grpc \
          -i 1@net1 -i 2@net2 -i 3@net3 -i 4@net4 \
          --no-p4 \
          --log-file logs/$1 \
          -- \
            --grpc-server-ssl \
            --grpc-server-cacert keys/ca.crt \
            --grpc-server-cert keys/server_$1.crt \
            --grpc-server-key keys/server_$1.key \
            --grpc-server-with-client-auth &

        
    fi

    tail -f /dev/null
