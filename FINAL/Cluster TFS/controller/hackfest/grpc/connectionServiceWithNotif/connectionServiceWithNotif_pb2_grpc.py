# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import connectionServiceWithNotif_pb2 as connectionServiceWithNotif__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ConnectionServiceWithNotifStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateConnection = channel.unary_unary(
                '/connection.ConnectionServiceWithNotif/CreateConnection',
                request_serializer=connectionServiceWithNotif__pb2.Connection.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ListConnection = channel.unary_unary(
                '/connection.ConnectionServiceWithNotif/ListConnection',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=connectionServiceWithNotif__pb2.ConnectionList.FromString,
                )
        self.GetBer = channel.unary_stream(
                '/connection.ConnectionServiceWithNotif/GetBer',
                request_serializer=connectionServiceWithNotif__pb2.Connection.SerializeToString,
                response_deserializer=connectionServiceWithNotif__pb2.Ber.FromString,
                )


class ConnectionServiceWithNotifServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateConnection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConnection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConnectionServiceWithNotifServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateConnection,
                    request_deserializer=connectionServiceWithNotif__pb2.Connection.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConnection,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=connectionServiceWithNotif__pb2.ConnectionList.SerializeToString,
            ),
            'GetBer': grpc.unary_stream_rpc_method_handler(
                    servicer.GetBer,
                    request_deserializer=connectionServiceWithNotif__pb2.Connection.FromString,
                    response_serializer=connectionServiceWithNotif__pb2.Ber.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'connection.ConnectionServiceWithNotif', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ConnectionServiceWithNotif(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connection.ConnectionServiceWithNotif/CreateConnection',
            connectionServiceWithNotif__pb2.Connection.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connection.ConnectionServiceWithNotif/ListConnection',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            connectionServiceWithNotif__pb2.ConnectionList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/connection.ConnectionServiceWithNotif/GetBer',
            connectionServiceWithNotif__pb2.Connection.SerializeToString,
            connectionServiceWithNotif__pb2.Ber.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
