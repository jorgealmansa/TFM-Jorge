# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server.models.tapi_common_administrative_state import TapiCommonAdministrativeState  # noqa: F401,E501
from tapi_server.models.tapi_common_lifecycle_state import TapiCommonLifecycleState  # noqa: F401,E501
from tapi_server.models.tapi_common_operational_state import TapiCommonOperationalState  # noqa: F401,E501
from tapi_server import util


class TapiCommonAdminStatePac(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, operational_state: TapiCommonOperationalState=None, lifecycle_state: TapiCommonLifecycleState=None, administrative_state: TapiCommonAdministrativeState=None):  # noqa: E501
        """TapiCommonAdminStatePac - a model defined in Swagger

        :param operational_state: The operational_state of this TapiCommonAdminStatePac.  # noqa: E501
        :type operational_state: TapiCommonOperationalState
        :param lifecycle_state: The lifecycle_state of this TapiCommonAdminStatePac.  # noqa: E501
        :type lifecycle_state: TapiCommonLifecycleState
        :param administrative_state: The administrative_state of this TapiCommonAdminStatePac.  # noqa: E501
        :type administrative_state: TapiCommonAdministrativeState
        """
        self.swagger_types = {
            'operational_state': TapiCommonOperationalState,
            'lifecycle_state': TapiCommonLifecycleState,
            'administrative_state': TapiCommonAdministrativeState
        }

        self.attribute_map = {
            'operational_state': 'operational-state',
            'lifecycle_state': 'lifecycle-state',
            'administrative_state': 'administrative-state'
        }
        self._operational_state = operational_state
        self._lifecycle_state = lifecycle_state
        self._administrative_state = administrative_state

    @classmethod
    def from_dict(cls, dikt) -> 'TapiCommonAdminStatePac':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.common.AdminStatePac of this TapiCommonAdminStatePac.  # noqa: E501
        :rtype: TapiCommonAdminStatePac
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operational_state(self) -> TapiCommonOperationalState:
        """Gets the operational_state of this TapiCommonAdminStatePac.


        :return: The operational_state of this TapiCommonAdminStatePac.
        :rtype: TapiCommonOperationalState
        """
        return self._operational_state

    @operational_state.setter
    def operational_state(self, operational_state: TapiCommonOperationalState):
        """Sets the operational_state of this TapiCommonAdminStatePac.


        :param operational_state: The operational_state of this TapiCommonAdminStatePac.
        :type operational_state: TapiCommonOperationalState
        """

        self._operational_state = operational_state

    @property
    def lifecycle_state(self) -> TapiCommonLifecycleState:
        """Gets the lifecycle_state of this TapiCommonAdminStatePac.


        :return: The lifecycle_state of this TapiCommonAdminStatePac.
        :rtype: TapiCommonLifecycleState
        """
        return self._lifecycle_state

    @lifecycle_state.setter
    def lifecycle_state(self, lifecycle_state: TapiCommonLifecycleState):
        """Sets the lifecycle_state of this TapiCommonAdminStatePac.


        :param lifecycle_state: The lifecycle_state of this TapiCommonAdminStatePac.
        :type lifecycle_state: TapiCommonLifecycleState
        """

        self._lifecycle_state = lifecycle_state

    @property
    def administrative_state(self) -> TapiCommonAdministrativeState:
        """Gets the administrative_state of this TapiCommonAdminStatePac.


        :return: The administrative_state of this TapiCommonAdminStatePac.
        :rtype: TapiCommonAdministrativeState
        """
        return self._administrative_state

    @administrative_state.setter
    def administrative_state(self, administrative_state: TapiCommonAdministrativeState):
        """Sets the administrative_state of this TapiCommonAdminStatePac.


        :param administrative_state: The administrative_state of this TapiCommonAdminStatePac.
        :type administrative_state: TapiCommonAdministrativeState
        """

        self._administrative_state = administrative_state
