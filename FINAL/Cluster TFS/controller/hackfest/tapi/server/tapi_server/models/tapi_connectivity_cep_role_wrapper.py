# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server.models.tapi_connectivity_cep_role import TapiConnectivityCepRole  # noqa: F401,E501
from tapi_server import util


class TapiConnectivityCepRoleWrapper(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, cep_role: TapiConnectivityCepRole=None):  # noqa: E501
        """TapiConnectivityCepRoleWrapper - a model defined in Swagger

        :param cep_role: The cep_role of this TapiConnectivityCepRoleWrapper.  # noqa: E501
        :type cep_role: TapiConnectivityCepRole
        """
        self.swagger_types = {
            'cep_role': TapiConnectivityCepRole
        }

        self.attribute_map = {
            'cep_role': 'cep-role'
        }
        self._cep_role = cep_role

    @classmethod
    def from_dict(cls, dikt) -> 'TapiConnectivityCepRoleWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.connectivity.CepRoleWrapper of this TapiConnectivityCepRoleWrapper.  # noqa: E501
        :rtype: TapiConnectivityCepRoleWrapper
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cep_role(self) -> TapiConnectivityCepRole:
        """Gets the cep_role of this TapiConnectivityCepRoleWrapper.


        :return: The cep_role of this TapiConnectivityCepRoleWrapper.
        :rtype: TapiConnectivityCepRole
        """
        return self._cep_role

    @cep_role.setter
    def cep_role(self, cep_role: TapiConnectivityCepRole):
        """Sets the cep_role of this TapiConnectivityCepRoleWrapper.


        :param cep_role: The cep_role of this TapiConnectivityCepRoleWrapper.
        :type cep_role: TapiConnectivityCepRole
        """

        self._cep_role = cep_role
