# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server.models.tapi_connectivity_connectivity_service_ref import TapiConnectivityConnectivityServiceRef  # noqa: F401,E501
from tapi_server import util


class TapiConnectivityConnectivityServiceRefWrapper(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, coroute_inclusion: TapiConnectivityConnectivityServiceRef=None):  # noqa: E501
        """TapiConnectivityConnectivityServiceRefWrapper - a model defined in Swagger

        :param coroute_inclusion: The coroute_inclusion of this TapiConnectivityConnectivityServiceRefWrapper.  # noqa: E501
        :type coroute_inclusion: TapiConnectivityConnectivityServiceRef
        """
        self.swagger_types = {
            'coroute_inclusion': TapiConnectivityConnectivityServiceRef
        }

        self.attribute_map = {
            'coroute_inclusion': 'coroute-inclusion'
        }
        self._coroute_inclusion = coroute_inclusion

    @classmethod
    def from_dict(cls, dikt) -> 'TapiConnectivityConnectivityServiceRefWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.connectivity.ConnectivityServiceRefWrapper of this TapiConnectivityConnectivityServiceRefWrapper.  # noqa: E501
        :rtype: TapiConnectivityConnectivityServiceRefWrapper
        """
        return util.deserialize_model(dikt, cls)

    @property
    def coroute_inclusion(self) -> TapiConnectivityConnectivityServiceRef:
        """Gets the coroute_inclusion of this TapiConnectivityConnectivityServiceRefWrapper.


        :return: The coroute_inclusion of this TapiConnectivityConnectivityServiceRefWrapper.
        :rtype: TapiConnectivityConnectivityServiceRef
        """
        return self._coroute_inclusion

    @coroute_inclusion.setter
    def coroute_inclusion(self, coroute_inclusion: TapiConnectivityConnectivityServiceRef):
        """Sets the coroute_inclusion of this TapiConnectivityConnectivityServiceRefWrapper.


        :param coroute_inclusion: The coroute_inclusion of this TapiConnectivityConnectivityServiceRefWrapper.
        :type coroute_inclusion: TapiConnectivityConnectivityServiceRef
        """

        self._coroute_inclusion = coroute_inclusion
