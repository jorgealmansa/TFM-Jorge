# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server.models.tapi_connectivity_route import TapiConnectivityRoute  # noqa: F401,E501
from tapi_server import util


class TapiConnectivityRouteWrapper(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, route: TapiConnectivityRoute=None):  # noqa: E501
        """TapiConnectivityRouteWrapper - a model defined in Swagger

        :param route: The route of this TapiConnectivityRouteWrapper.  # noqa: E501
        :type route: TapiConnectivityRoute
        """
        self.swagger_types = {
            'route': TapiConnectivityRoute
        }

        self.attribute_map = {
            'route': 'route'
        }
        self._route = route

    @classmethod
    def from_dict(cls, dikt) -> 'TapiConnectivityRouteWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.connectivity.RouteWrapper of this TapiConnectivityRouteWrapper.  # noqa: E501
        :rtype: TapiConnectivityRouteWrapper
        """
        return util.deserialize_model(dikt, cls)

    @property
    def route(self) -> TapiConnectivityRoute:
        """Gets the route of this TapiConnectivityRouteWrapper.


        :return: The route of this TapiConnectivityRouteWrapper.
        :rtype: TapiConnectivityRoute
        """
        return self._route

    @route.setter
    def route(self, route: TapiConnectivityRoute):
        """Sets the route of this TapiConnectivityRouteWrapper.


        :param route: The route of this TapiConnectivityRouteWrapper.
        :type route: TapiConnectivityRoute
        """

        self._route = route
