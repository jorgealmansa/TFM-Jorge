# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server.models.tapi_path_computation_path_computation_context import TapiPathComputationPathComputationContext  # noqa: F401,E501
from tapi_server import util


class TapiPathComputationContextAugmentation2(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, path_computation_context: TapiPathComputationPathComputationContext=None):  # noqa: E501
        """TapiPathComputationContextAugmentation2 - a model defined in Swagger

        :param path_computation_context: The path_computation_context of this TapiPathComputationContextAugmentation2.  # noqa: E501
        :type path_computation_context: TapiPathComputationPathComputationContext
        """
        self.swagger_types = {
            'path_computation_context': TapiPathComputationPathComputationContext
        }

        self.attribute_map = {
            'path_computation_context': 'path-computation-context'
        }
        self._path_computation_context = path_computation_context

    @classmethod
    def from_dict(cls, dikt) -> 'TapiPathComputationContextAugmentation2':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.path.computation.ContextAugmentation2 of this TapiPathComputationContextAugmentation2.  # noqa: E501
        :rtype: TapiPathComputationContextAugmentation2
        """
        return util.deserialize_model(dikt, cls)

    @property
    def path_computation_context(self) -> TapiPathComputationPathComputationContext:
        """Gets the path_computation_context of this TapiPathComputationContextAugmentation2.


        :return: The path_computation_context of this TapiPathComputationContextAugmentation2.
        :rtype: TapiPathComputationPathComputationContext
        """
        return self._path_computation_context

    @path_computation_context.setter
    def path_computation_context(self, path_computation_context: TapiPathComputationPathComputationContext):
        """Sets the path_computation_context of this TapiPathComputationContextAugmentation2.


        :param path_computation_context: The path_computation_context of this TapiPathComputationContextAugmentation2.
        :type path_computation_context: TapiPathComputationPathComputationContext
        """

        self._path_computation_context = path_computation_context
