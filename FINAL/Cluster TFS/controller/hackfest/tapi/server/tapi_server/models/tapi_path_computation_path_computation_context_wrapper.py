# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server.models.tapi_path_computation_path_computation_context import TapiPathComputationPathComputationContext  # noqa: F401,E501
from tapi_server import util


class TapiPathComputationPathComputationContextWrapper(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, tapi_path_computationpath_computation_context: TapiPathComputationPathComputationContext=None):  # noqa: E501
        """TapiPathComputationPathComputationContextWrapper - a model defined in Swagger

        :param tapi_path_computationpath_computation_context: The tapi_path_computationpath_computation_context of this TapiPathComputationPathComputationContextWrapper.  # noqa: E501
        :type tapi_path_computationpath_computation_context: TapiPathComputationPathComputationContext
        """
        self.swagger_types = {
            'tapi_path_computationpath_computation_context': TapiPathComputationPathComputationContext
        }

        self.attribute_map = {
            'tapi_path_computationpath_computation_context': 'tapi-path-computation:path-computation-context'
        }
        self._tapi_path_computationpath_computation_context = tapi_path_computationpath_computation_context

    @classmethod
    def from_dict(cls, dikt) -> 'TapiPathComputationPathComputationContextWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.path.computation.PathComputationContextWrapper of this TapiPathComputationPathComputationContextWrapper.  # noqa: E501
        :rtype: TapiPathComputationPathComputationContextWrapper
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tapi_path_computationpath_computation_context(self) -> TapiPathComputationPathComputationContext:
        """Gets the tapi_path_computationpath_computation_context of this TapiPathComputationPathComputationContextWrapper.


        :return: The tapi_path_computationpath_computation_context of this TapiPathComputationPathComputationContextWrapper.
        :rtype: TapiPathComputationPathComputationContext
        """
        return self._tapi_path_computationpath_computation_context

    @tapi_path_computationpath_computation_context.setter
    def tapi_path_computationpath_computation_context(self, tapi_path_computationpath_computation_context: TapiPathComputationPathComputationContext):
        """Sets the tapi_path_computationpath_computation_context of this TapiPathComputationPathComputationContextWrapper.


        :param tapi_path_computationpath_computation_context: The tapi_path_computationpath_computation_context of this TapiPathComputationPathComputationContextWrapper.
        :type tapi_path_computationpath_computation_context: TapiPathComputationPathComputationContext
        """

        self._tapi_path_computationpath_computation_context = tapi_path_computationpath_computation_context
