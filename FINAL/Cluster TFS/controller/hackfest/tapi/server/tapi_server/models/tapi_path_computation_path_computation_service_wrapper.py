# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server.models.tapi_path_computation_path_computation_service import TapiPathComputationPathComputationService  # noqa: F401,E501
from tapi_server import util


class TapiPathComputationPathComputationServiceWrapper(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, path_comp_service: TapiPathComputationPathComputationService=None):  # noqa: E501
        """TapiPathComputationPathComputationServiceWrapper - a model defined in Swagger

        :param path_comp_service: The path_comp_service of this TapiPathComputationPathComputationServiceWrapper.  # noqa: E501
        :type path_comp_service: TapiPathComputationPathComputationService
        """
        self.swagger_types = {
            'path_comp_service': TapiPathComputationPathComputationService
        }

        self.attribute_map = {
            'path_comp_service': 'path-comp-service'
        }
        self._path_comp_service = path_comp_service

    @classmethod
    def from_dict(cls, dikt) -> 'TapiPathComputationPathComputationServiceWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.path.computation.PathComputationServiceWrapper of this TapiPathComputationPathComputationServiceWrapper.  # noqa: E501
        :rtype: TapiPathComputationPathComputationServiceWrapper
        """
        return util.deserialize_model(dikt, cls)

    @property
    def path_comp_service(self) -> TapiPathComputationPathComputationService:
        """Gets the path_comp_service of this TapiPathComputationPathComputationServiceWrapper.


        :return: The path_comp_service of this TapiPathComputationPathComputationServiceWrapper.
        :rtype: TapiPathComputationPathComputationService
        """
        return self._path_comp_service

    @path_comp_service.setter
    def path_comp_service(self, path_comp_service: TapiPathComputationPathComputationService):
        """Sets the path_comp_service of this TapiPathComputationPathComputationServiceWrapper.


        :param path_comp_service: The path_comp_service of this TapiPathComputationPathComputationServiceWrapper.
        :type path_comp_service: TapiPathComputationPathComputationService
        """

        self._path_comp_service = path_comp_service
