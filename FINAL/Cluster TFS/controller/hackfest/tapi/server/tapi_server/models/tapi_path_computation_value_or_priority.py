# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server import util


class TapiPathComputationValueOrPriority(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, priority: int=None, value: int=None):  # noqa: E501
        """TapiPathComputationValueOrPriority - a model defined in Swagger

        :param priority: The priority of this TapiPathComputationValueOrPriority.  # noqa: E501
        :type priority: int
        :param value: The value of this TapiPathComputationValueOrPriority.  # noqa: E501
        :type value: int
        """
        self.swagger_types = {
            'priority': int,
            'value': int
        }

        self.attribute_map = {
            'priority': 'priority',
            'value': 'value'
        }
        self._priority = priority
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'TapiPathComputationValueOrPriority':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.path.computation.ValueOrPriority of this TapiPathComputationValueOrPriority.  # noqa: E501
        :rtype: TapiPathComputationValueOrPriority
        """
        return util.deserialize_model(dikt, cls)

    @property
    def priority(self) -> int:
        """Gets the priority of this TapiPathComputationValueOrPriority.

        none  # noqa: E501

        :return: The priority of this TapiPathComputationValueOrPriority.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority: int):
        """Sets the priority of this TapiPathComputationValueOrPriority.

        none  # noqa: E501

        :param priority: The priority of this TapiPathComputationValueOrPriority.
        :type priority: int
        """

        self._priority = priority

    @property
    def value(self) -> int:
        """Gets the value of this TapiPathComputationValueOrPriority.

        none  # noqa: E501

        :return: The value of this TapiPathComputationValueOrPriority.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value: int):
        """Sets the value of this TapiPathComputationValueOrPriority.

        none  # noqa: E501

        :param value: The value of this TapiPathComputationValueOrPriority.
        :type value: int
        """

        self._value = value
