# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from tapi_server.models.base_model_ import Model
from tapi_server.models.tapi_topology_connection_spec_reference import TapiTopologyConnectionSpecReference  # noqa: F401,E501
from tapi_server import util


class TapiTopologyConnectionSpecReferenceWrapper(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, connection_spec_reference: TapiTopologyConnectionSpecReference=None):  # noqa: E501
        """TapiTopologyConnectionSpecReferenceWrapper - a model defined in Swagger

        :param connection_spec_reference: The connection_spec_reference of this TapiTopologyConnectionSpecReferenceWrapper.  # noqa: E501
        :type connection_spec_reference: TapiTopologyConnectionSpecReference
        """
        self.swagger_types = {
            'connection_spec_reference': TapiTopologyConnectionSpecReference
        }

        self.attribute_map = {
            'connection_spec_reference': 'connection-spec-reference'
        }
        self._connection_spec_reference = connection_spec_reference

    @classmethod
    def from_dict(cls, dikt) -> 'TapiTopologyConnectionSpecReferenceWrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tapi.topology.ConnectionSpecReferenceWrapper of this TapiTopologyConnectionSpecReferenceWrapper.  # noqa: E501
        :rtype: TapiTopologyConnectionSpecReferenceWrapper
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_spec_reference(self) -> TapiTopologyConnectionSpecReference:
        """Gets the connection_spec_reference of this TapiTopologyConnectionSpecReferenceWrapper.


        :return: The connection_spec_reference of this TapiTopologyConnectionSpecReferenceWrapper.
        :rtype: TapiTopologyConnectionSpecReference
        """
        return self._connection_spec_reference

    @connection_spec_reference.setter
    def connection_spec_reference(self, connection_spec_reference: TapiTopologyConnectionSpecReference):
        """Sets the connection_spec_reference of this TapiTopologyConnectionSpecReferenceWrapper.


        :param connection_spec_reference: The connection_spec_reference of this TapiTopologyConnectionSpecReferenceWrapper.
        :type connection_spec_reference: TapiTopologyConnectionSpecReference
        """

        self._connection_spec_reference = connection_spec_reference
