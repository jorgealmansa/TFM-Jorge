// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: policy.proto
package policy;

public final class Policy {

    private Policy() {
    }

    public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
    }

    /**
     * Protobuf enum {@code policy.PolicyRuleStateEnum}
     */
    public enum PolicyRuleStateEnum implements com.google.protobuf.ProtocolMessageEnum {

        /**
         * <pre>
         * Undefined rule state
         * </pre>
         *
         * <code>POLICY_UNDEFINED = 0;</code>
         */
        POLICY_UNDEFINED(0),
        /**
         * <pre>
         * Rule failed
         * </pre>
         *
         * <code>POLICY_FAILED = 1;</code>
         */
        POLICY_FAILED(1),
        /**
         * <pre>
         * Rule is just inserted
         * </pre>
         *
         * <code>POLICY_INSERTED = 2;</code>
         */
        POLICY_INSERTED(2),
        /**
         * <pre>
         * Rule content is correct
         * </pre>
         *
         * <code>POLICY_VALIDATED = 3;</code>
         */
        POLICY_VALIDATED(3),
        /**
         * <pre>
         * Rule subscribed to Monitoring
         * </pre>
         *
         * <code>POLICY_PROVISIONED = 4;</code>
         */
        POLICY_PROVISIONED(4),
        /**
         * <pre>
         * Rule is currently active (alarm is just thrown by Monitoring)
         * </pre>
         *
         * <code>POLICY_ACTIVE = 5;</code>
         */
        POLICY_ACTIVE(5),
        /**
         * <pre>
         * Rule action is successfully enforced
         * </pre>
         *
         * <code>POLICY_ENFORCED = 6;</code>
         */
        POLICY_ENFORCED(6),
        /**
         * <pre>
         * The applied rule action did not work as expected
         * </pre>
         *
         * <code>POLICY_INEFFECTIVE = 7;</code>
         */
        POLICY_INEFFECTIVE(7),
        /**
         * <pre>
         * The applied rule action did work as expected
         * </pre>
         *
         * <code>POLICY_EFFECTIVE = 8;</code>
         */
        POLICY_EFFECTIVE(8),
        /**
         * <pre>
         * Operator requires a policy to change
         * </pre>
         *
         * <code>POLICY_UPDATED = 9;</code>
         */
        POLICY_UPDATED(9),
        /**
         * <pre>
         * Operator requires to remove a policy
         * </pre>
         *
         * <code>POLICY_REMOVED = 10;</code>
         */
        POLICY_REMOVED(10),
        UNRECOGNIZED(-1);

        /**
         * <pre>
         * Undefined rule state
         * </pre>
         *
         * <code>POLICY_UNDEFINED = 0;</code>
         */
        public static final int POLICY_UNDEFINED_VALUE = 0;

        /**
         * <pre>
         * Rule failed
         * </pre>
         *
         * <code>POLICY_FAILED = 1;</code>
         */
        public static final int POLICY_FAILED_VALUE = 1;

        /**
         * <pre>
         * Rule is just inserted
         * </pre>
         *
         * <code>POLICY_INSERTED = 2;</code>
         */
        public static final int POLICY_INSERTED_VALUE = 2;

        /**
         * <pre>
         * Rule content is correct
         * </pre>
         *
         * <code>POLICY_VALIDATED = 3;</code>
         */
        public static final int POLICY_VALIDATED_VALUE = 3;

        /**
         * <pre>
         * Rule subscribed to Monitoring
         * </pre>
         *
         * <code>POLICY_PROVISIONED = 4;</code>
         */
        public static final int POLICY_PROVISIONED_VALUE = 4;

        /**
         * <pre>
         * Rule is currently active (alarm is just thrown by Monitoring)
         * </pre>
         *
         * <code>POLICY_ACTIVE = 5;</code>
         */
        public static final int POLICY_ACTIVE_VALUE = 5;

        /**
         * <pre>
         * Rule action is successfully enforced
         * </pre>
         *
         * <code>POLICY_ENFORCED = 6;</code>
         */
        public static final int POLICY_ENFORCED_VALUE = 6;

        /**
         * <pre>
         * The applied rule action did not work as expected
         * </pre>
         *
         * <code>POLICY_INEFFECTIVE = 7;</code>
         */
        public static final int POLICY_INEFFECTIVE_VALUE = 7;

        /**
         * <pre>
         * The applied rule action did work as expected
         * </pre>
         *
         * <code>POLICY_EFFECTIVE = 8;</code>
         */
        public static final int POLICY_EFFECTIVE_VALUE = 8;

        /**
         * <pre>
         * Operator requires a policy to change
         * </pre>
         *
         * <code>POLICY_UPDATED = 9;</code>
         */
        public static final int POLICY_UPDATED_VALUE = 9;

        /**
         * <pre>
         * Operator requires to remove a policy
         * </pre>
         *
         * <code>POLICY_REMOVED = 10;</code>
         */
        public static final int POLICY_REMOVED_VALUE = 10;

        public final int getNumber() {
            if (this == UNRECOGNIZED) {
                throw new java.lang.IllegalArgumentException("Can't get the number of an unknown enum value.");
            }
            return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static PolicyRuleStateEnum valueOf(int value) {
            return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static PolicyRuleStateEnum forNumber(int value) {
            switch(value) {
                case 0:
                    return POLICY_UNDEFINED;
                case 1:
                    return POLICY_FAILED;
                case 2:
                    return POLICY_INSERTED;
                case 3:
                    return POLICY_VALIDATED;
                case 4:
                    return POLICY_PROVISIONED;
                case 5:
                    return POLICY_ACTIVE;
                case 6:
                    return POLICY_ENFORCED;
                case 7:
                    return POLICY_INEFFECTIVE;
                case 8:
                    return POLICY_EFFECTIVE;
                case 9:
                    return POLICY_UPDATED;
                case 10:
                    return POLICY_REMOVED;
                default:
                    return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<PolicyRuleStateEnum> internalGetValueMap() {
            return internalValueMap;
        }

        private static final com.google.protobuf.Internal.EnumLiteMap<PolicyRuleStateEnum> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<PolicyRuleStateEnum>() {

            public PolicyRuleStateEnum findValueByNumber(int number) {
                return PolicyRuleStateEnum.forNumber(number);
            }
        };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
            if (this == UNRECOGNIZED) {
                throw new java.lang.IllegalStateException("Can't get the descriptor of an unrecognized enum value.");
            }
            return getDescriptor().getValues().get(ordinal());
        }

        public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
            return policy.Policy.getDescriptor().getEnumTypes().get(0);
        }

        private static final PolicyRuleStateEnum[] VALUES = values();

        public static PolicyRuleStateEnum valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private PolicyRuleStateEnum(int value) {
            this.value = value;
        }
    }

    public interface PolicyRuleIdOrBuilder extends // @@protoc_insertion_point(interface_extends:policy.PolicyRuleId)
    com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.context.Uuid uuid = 1;</code>
         * @return Whether the uuid field is set.
         */
        boolean hasUuid();

        /**
         * <code>.context.Uuid uuid = 1;</code>
         * @return The uuid.
         */
        context.ContextOuterClass.Uuid getUuid();

        /**
         * <code>.context.Uuid uuid = 1;</code>
         */
        context.ContextOuterClass.UuidOrBuilder getUuidOrBuilder();
    }

    /**
     * Protobuf type {@code policy.PolicyRuleId}
     */
    public static final class PolicyRuleId extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:policy.PolicyRuleId)
    PolicyRuleIdOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use PolicyRuleId.newBuilder() to construct.
        private PolicyRuleId(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private PolicyRuleId() {
        }

        @java.lang.Override
        @SuppressWarnings({ "unused" })
        protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
            return new PolicyRuleId();
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return policy.Policy.internal_static_policy_PolicyRuleId_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return policy.Policy.internal_static_policy_PolicyRuleId_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRuleId.class, policy.Policy.PolicyRuleId.Builder.class);
        }

        public static final int UUID_FIELD_NUMBER = 1;

        private context.ContextOuterClass.Uuid uuid_;

        /**
         * <code>.context.Uuid uuid = 1;</code>
         * @return Whether the uuid field is set.
         */
        @java.lang.Override
        public boolean hasUuid() {
            return uuid_ != null;
        }

        /**
         * <code>.context.Uuid uuid = 1;</code>
         * @return The uuid.
         */
        @java.lang.Override
        public context.ContextOuterClass.Uuid getUuid() {
            return uuid_ == null ? context.ContextOuterClass.Uuid.getDefaultInstance() : uuid_;
        }

        /**
         * <code>.context.Uuid uuid = 1;</code>
         */
        @java.lang.Override
        public context.ContextOuterClass.UuidOrBuilder getUuidOrBuilder() {
            return uuid_ == null ? context.ContextOuterClass.Uuid.getDefaultInstance() : uuid_;
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            if (uuid_ != null) {
                output.writeMessage(1, getUuid());
            }
            getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1)
                return size;
            size = 0;
            if (uuid_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getUuid());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof policy.Policy.PolicyRuleId)) {
                return super.equals(obj);
            }
            policy.Policy.PolicyRuleId other = (policy.Policy.PolicyRuleId) obj;
            if (hasUuid() != other.hasUuid())
                return false;
            if (hasUuid()) {
                if (!getUuid().equals(other.getUuid()))
                    return false;
            }
            if (!getUnknownFields().equals(other.getUnknownFields()))
                return false;
            return true;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasUuid()) {
                hash = (37 * hash) + UUID_FIELD_NUMBER;
                hash = (53 * hash) + getUuid().hashCode();
            }
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static policy.Policy.PolicyRuleId parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleId parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleId parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleId parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleId parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleId parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleId parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleId parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleId parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleId parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleId parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleId parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(policy.Policy.PolicyRuleId prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code policy.PolicyRuleId}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:policy.PolicyRuleId)
        policy.Policy.PolicyRuleIdOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return policy.Policy.internal_static_policy_PolicyRuleId_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return policy.Policy.internal_static_policy_PolicyRuleId_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRuleId.class, policy.Policy.PolicyRuleId.Builder.class);
            }

            // Construct using policy.Policy.PolicyRuleId.newBuilder()
            private Builder() {
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                bitField0_ = 0;
                uuid_ = null;
                if (uuidBuilder_ != null) {
                    uuidBuilder_.dispose();
                    uuidBuilder_ = null;
                }
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return policy.Policy.internal_static_policy_PolicyRuleId_descriptor;
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleId getDefaultInstanceForType() {
                return policy.Policy.PolicyRuleId.getDefaultInstance();
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleId build() {
                policy.Policy.PolicyRuleId result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleId buildPartial() {
                policy.Policy.PolicyRuleId result = new policy.Policy.PolicyRuleId(this);
                if (bitField0_ != 0) {
                    buildPartial0(result);
                }
                onBuilt();
                return result;
            }

            private void buildPartial0(policy.Policy.PolicyRuleId result) {
                int from_bitField0_ = bitField0_;
                if (((from_bitField0_ & 0x00000001) != 0)) {
                    result.uuid_ = uuidBuilder_ == null ? uuid_ : uuidBuilder_.build();
                }
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof policy.Policy.PolicyRuleId) {
                    return mergeFrom((policy.Policy.PolicyRuleId) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(policy.Policy.PolicyRuleId other) {
                if (other == policy.Policy.PolicyRuleId.getDefaultInstance())
                    return this;
                if (other.hasUuid()) {
                    mergeUuid(other.getUuid());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    input.readMessage(getUuidFieldBuilder().getBuilder(), extensionRegistry);
                                    bitField0_ |= 0x00000001;
                                    break;
                                }
                            // case 10
                            default:
                                {
                                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                                        // was an endgroup tag
                                        done = true;
                                    }
                                    break;
                                }
                        }
                        // switch (tag)
                    }
                    // while (!done)
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.unwrapIOException();
                } finally {
                    onChanged();
                }
                // finally
                return this;
            }

            private int bitField0_;

            private context.ContextOuterClass.Uuid uuid_;

            private com.google.protobuf.SingleFieldBuilderV3<context.ContextOuterClass.Uuid, context.ContextOuterClass.Uuid.Builder, context.ContextOuterClass.UuidOrBuilder> uuidBuilder_;

            /**
             * <code>.context.Uuid uuid = 1;</code>
             * @return Whether the uuid field is set.
             */
            public boolean hasUuid() {
                return ((bitField0_ & 0x00000001) != 0);
            }

            /**
             * <code>.context.Uuid uuid = 1;</code>
             * @return The uuid.
             */
            public context.ContextOuterClass.Uuid getUuid() {
                if (uuidBuilder_ == null) {
                    return uuid_ == null ? context.ContextOuterClass.Uuid.getDefaultInstance() : uuid_;
                } else {
                    return uuidBuilder_.getMessage();
                }
            }

            /**
             * <code>.context.Uuid uuid = 1;</code>
             */
            public Builder setUuid(context.ContextOuterClass.Uuid value) {
                if (uuidBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    uuid_ = value;
                } else {
                    uuidBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <code>.context.Uuid uuid = 1;</code>
             */
            public Builder setUuid(context.ContextOuterClass.Uuid.Builder builderForValue) {
                if (uuidBuilder_ == null) {
                    uuid_ = builderForValue.build();
                } else {
                    uuidBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <code>.context.Uuid uuid = 1;</code>
             */
            public Builder mergeUuid(context.ContextOuterClass.Uuid value) {
                if (uuidBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) != 0) && uuid_ != null && uuid_ != context.ContextOuterClass.Uuid.getDefaultInstance()) {
                        getUuidBuilder().mergeFrom(value);
                    } else {
                        uuid_ = value;
                    }
                } else {
                    uuidBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <code>.context.Uuid uuid = 1;</code>
             */
            public Builder clearUuid() {
                bitField0_ = (bitField0_ & ~0x00000001);
                uuid_ = null;
                if (uuidBuilder_ != null) {
                    uuidBuilder_.dispose();
                    uuidBuilder_ = null;
                }
                onChanged();
                return this;
            }

            /**
             * <code>.context.Uuid uuid = 1;</code>
             */
            public context.ContextOuterClass.Uuid.Builder getUuidBuilder() {
                bitField0_ |= 0x00000001;
                onChanged();
                return getUuidFieldBuilder().getBuilder();
            }

            /**
             * <code>.context.Uuid uuid = 1;</code>
             */
            public context.ContextOuterClass.UuidOrBuilder getUuidOrBuilder() {
                if (uuidBuilder_ != null) {
                    return uuidBuilder_.getMessageOrBuilder();
                } else {
                    return uuid_ == null ? context.ContextOuterClass.Uuid.getDefaultInstance() : uuid_;
                }
            }

            /**
             * <code>.context.Uuid uuid = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<context.ContextOuterClass.Uuid, context.ContextOuterClass.Uuid.Builder, context.ContextOuterClass.UuidOrBuilder> getUuidFieldBuilder() {
                if (uuidBuilder_ == null) {
                    uuidBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<context.ContextOuterClass.Uuid, context.ContextOuterClass.Uuid.Builder, context.ContextOuterClass.UuidOrBuilder>(getUuid(), getParentForChildren(), isClean());
                    uuid_ = null;
                }
                return uuidBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }
            // @@protoc_insertion_point(builder_scope:policy.PolicyRuleId)
        }

        // @@protoc_insertion_point(class_scope:policy.PolicyRuleId)
        private static final policy.Policy.PolicyRuleId DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new policy.Policy.PolicyRuleId();
        }

        public static policy.Policy.PolicyRuleId getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<PolicyRuleId> PARSER = new com.google.protobuf.AbstractParser<PolicyRuleId>() {

            @java.lang.Override
            public PolicyRuleId parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                Builder builder = newBuilder();
                try {
                    builder.mergeFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(builder.buildPartial());
                } catch (com.google.protobuf.UninitializedMessageException e) {
                    throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(builder.buildPartial());
                }
                return builder.buildPartial();
            }
        };

        public static com.google.protobuf.Parser<PolicyRuleId> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PolicyRuleId> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public policy.Policy.PolicyRuleId getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface PolicyRuleStateOrBuilder extends // @@protoc_insertion_point(interface_extends:policy.PolicyRuleState)
    com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.policy.PolicyRuleStateEnum policyRuleState = 1;</code>
         * @return The enum numeric value on the wire for policyRuleState.
         */
        int getPolicyRuleStateValue();

        /**
         * <code>.policy.PolicyRuleStateEnum policyRuleState = 1;</code>
         * @return The policyRuleState.
         */
        policy.Policy.PolicyRuleStateEnum getPolicyRuleState();

        /**
         * <code>string policyRuleStateMessage = 2;</code>
         * @return The policyRuleStateMessage.
         */
        java.lang.String getPolicyRuleStateMessage();

        /**
         * <code>string policyRuleStateMessage = 2;</code>
         * @return The bytes for policyRuleStateMessage.
         */
        com.google.protobuf.ByteString getPolicyRuleStateMessageBytes();
    }

    /**
     * Protobuf type {@code policy.PolicyRuleState}
     */
    public static final class PolicyRuleState extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:policy.PolicyRuleState)
    PolicyRuleStateOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use PolicyRuleState.newBuilder() to construct.
        private PolicyRuleState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private PolicyRuleState() {
            policyRuleState_ = 0;
            policyRuleStateMessage_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({ "unused" })
        protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
            return new PolicyRuleState();
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return policy.Policy.internal_static_policy_PolicyRuleState_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return policy.Policy.internal_static_policy_PolicyRuleState_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRuleState.class, policy.Policy.PolicyRuleState.Builder.class);
        }

        public static final int POLICYRULESTATE_FIELD_NUMBER = 1;

        private int policyRuleState_ = 0;

        /**
         * <code>.policy.PolicyRuleStateEnum policyRuleState = 1;</code>
         * @return The enum numeric value on the wire for policyRuleState.
         */
        @java.lang.Override
        public int getPolicyRuleStateValue() {
            return policyRuleState_;
        }

        /**
         * <code>.policy.PolicyRuleStateEnum policyRuleState = 1;</code>
         * @return The policyRuleState.
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleStateEnum getPolicyRuleState() {
            policy.Policy.PolicyRuleStateEnum result = policy.Policy.PolicyRuleStateEnum.forNumber(policyRuleState_);
            return result == null ? policy.Policy.PolicyRuleStateEnum.UNRECOGNIZED : result;
        }

        public static final int POLICYRULESTATEMESSAGE_FIELD_NUMBER = 2;

        @SuppressWarnings("serial")
        private volatile java.lang.Object policyRuleStateMessage_ = "";

        /**
         * <code>string policyRuleStateMessage = 2;</code>
         * @return The policyRuleStateMessage.
         */
        @java.lang.Override
        public java.lang.String getPolicyRuleStateMessage() {
            java.lang.Object ref = policyRuleStateMessage_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                policyRuleStateMessage_ = s;
                return s;
            }
        }

        /**
         * <code>string policyRuleStateMessage = 2;</code>
         * @return The bytes for policyRuleStateMessage.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getPolicyRuleStateMessageBytes() {
            java.lang.Object ref = policyRuleStateMessage_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                policyRuleStateMessage_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            if (policyRuleState_ != policy.Policy.PolicyRuleStateEnum.POLICY_UNDEFINED.getNumber()) {
                output.writeEnum(1, policyRuleState_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(policyRuleStateMessage_)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, policyRuleStateMessage_);
            }
            getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1)
                return size;
            size = 0;
            if (policyRuleState_ != policy.Policy.PolicyRuleStateEnum.POLICY_UNDEFINED.getNumber()) {
                size += com.google.protobuf.CodedOutputStream.computeEnumSize(1, policyRuleState_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(policyRuleStateMessage_)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, policyRuleStateMessage_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof policy.Policy.PolicyRuleState)) {
                return super.equals(obj);
            }
            policy.Policy.PolicyRuleState other = (policy.Policy.PolicyRuleState) obj;
            if (policyRuleState_ != other.policyRuleState_)
                return false;
            if (!getPolicyRuleStateMessage().equals(other.getPolicyRuleStateMessage()))
                return false;
            if (!getUnknownFields().equals(other.getUnknownFields()))
                return false;
            return true;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + POLICYRULESTATE_FIELD_NUMBER;
            hash = (53 * hash) + policyRuleState_;
            hash = (37 * hash) + POLICYRULESTATEMESSAGE_FIELD_NUMBER;
            hash = (53 * hash) + getPolicyRuleStateMessage().hashCode();
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static policy.Policy.PolicyRuleState parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleState parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleState parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleState parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleState parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleState parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleState parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleState parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleState parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleState parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleState parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleState parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(policy.Policy.PolicyRuleState prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code policy.PolicyRuleState}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:policy.PolicyRuleState)
        policy.Policy.PolicyRuleStateOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return policy.Policy.internal_static_policy_PolicyRuleState_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return policy.Policy.internal_static_policy_PolicyRuleState_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRuleState.class, policy.Policy.PolicyRuleState.Builder.class);
            }

            // Construct using policy.Policy.PolicyRuleState.newBuilder()
            private Builder() {
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                bitField0_ = 0;
                policyRuleState_ = 0;
                policyRuleStateMessage_ = "";
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return policy.Policy.internal_static_policy_PolicyRuleState_descriptor;
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleState getDefaultInstanceForType() {
                return policy.Policy.PolicyRuleState.getDefaultInstance();
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleState build() {
                policy.Policy.PolicyRuleState result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleState buildPartial() {
                policy.Policy.PolicyRuleState result = new policy.Policy.PolicyRuleState(this);
                if (bitField0_ != 0) {
                    buildPartial0(result);
                }
                onBuilt();
                return result;
            }

            private void buildPartial0(policy.Policy.PolicyRuleState result) {
                int from_bitField0_ = bitField0_;
                if (((from_bitField0_ & 0x00000001) != 0)) {
                    result.policyRuleState_ = policyRuleState_;
                }
                if (((from_bitField0_ & 0x00000002) != 0)) {
                    result.policyRuleStateMessage_ = policyRuleStateMessage_;
                }
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof policy.Policy.PolicyRuleState) {
                    return mergeFrom((policy.Policy.PolicyRuleState) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(policy.Policy.PolicyRuleState other) {
                if (other == policy.Policy.PolicyRuleState.getDefaultInstance())
                    return this;
                if (other.policyRuleState_ != 0) {
                    setPolicyRuleStateValue(other.getPolicyRuleStateValue());
                }
                if (!other.getPolicyRuleStateMessage().isEmpty()) {
                    policyRuleStateMessage_ = other.policyRuleStateMessage_;
                    bitField0_ |= 0x00000002;
                    onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 8:
                                {
                                    policyRuleState_ = input.readEnum();
                                    bitField0_ |= 0x00000001;
                                    break;
                                }
                            // case 8
                            case 18:
                                {
                                    policyRuleStateMessage_ = input.readStringRequireUtf8();
                                    bitField0_ |= 0x00000002;
                                    break;
                                }
                            // case 18
                            default:
                                {
                                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                                        // was an endgroup tag
                                        done = true;
                                    }
                                    break;
                                }
                        }
                        // switch (tag)
                    }
                    // while (!done)
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.unwrapIOException();
                } finally {
                    onChanged();
                }
                // finally
                return this;
            }

            private int bitField0_;

            private int policyRuleState_ = 0;

            /**
             * <code>.policy.PolicyRuleStateEnum policyRuleState = 1;</code>
             * @return The enum numeric value on the wire for policyRuleState.
             */
            @java.lang.Override
            public int getPolicyRuleStateValue() {
                return policyRuleState_;
            }

            /**
             * <code>.policy.PolicyRuleStateEnum policyRuleState = 1;</code>
             * @param value The enum numeric value on the wire for policyRuleState to set.
             * @return This builder for chaining.
             */
            public Builder setPolicyRuleStateValue(int value) {
                policyRuleState_ = value;
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <code>.policy.PolicyRuleStateEnum policyRuleState = 1;</code>
             * @return The policyRuleState.
             */
            @java.lang.Override
            public policy.Policy.PolicyRuleStateEnum getPolicyRuleState() {
                policy.Policy.PolicyRuleStateEnum result = policy.Policy.PolicyRuleStateEnum.forNumber(policyRuleState_);
                return result == null ? policy.Policy.PolicyRuleStateEnum.UNRECOGNIZED : result;
            }

            /**
             * <code>.policy.PolicyRuleStateEnum policyRuleState = 1;</code>
             * @param value The policyRuleState to set.
             * @return This builder for chaining.
             */
            public Builder setPolicyRuleState(policy.Policy.PolicyRuleStateEnum value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                policyRuleState_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <code>.policy.PolicyRuleStateEnum policyRuleState = 1;</code>
             * @return This builder for chaining.
             */
            public Builder clearPolicyRuleState() {
                bitField0_ = (bitField0_ & ~0x00000001);
                policyRuleState_ = 0;
                onChanged();
                return this;
            }

            private java.lang.Object policyRuleStateMessage_ = "";

            /**
             * <code>string policyRuleStateMessage = 2;</code>
             * @return The policyRuleStateMessage.
             */
            public java.lang.String getPolicyRuleStateMessage() {
                java.lang.Object ref = policyRuleStateMessage_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    policyRuleStateMessage_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>string policyRuleStateMessage = 2;</code>
             * @return The bytes for policyRuleStateMessage.
             */
            public com.google.protobuf.ByteString getPolicyRuleStateMessageBytes() {
                java.lang.Object ref = policyRuleStateMessage_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    policyRuleStateMessage_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string policyRuleStateMessage = 2;</code>
             * @param value The policyRuleStateMessage to set.
             * @return This builder for chaining.
             */
            public Builder setPolicyRuleStateMessage(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                policyRuleStateMessage_ = value;
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            /**
             * <code>string policyRuleStateMessage = 2;</code>
             * @return This builder for chaining.
             */
            public Builder clearPolicyRuleStateMessage() {
                policyRuleStateMessage_ = getDefaultInstance().getPolicyRuleStateMessage();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            /**
             * <code>string policyRuleStateMessage = 2;</code>
             * @param value The bytes for policyRuleStateMessage to set.
             * @return This builder for chaining.
             */
            public Builder setPolicyRuleStateMessageBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                policyRuleStateMessage_ = value;
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }
            // @@protoc_insertion_point(builder_scope:policy.PolicyRuleState)
        }

        // @@protoc_insertion_point(class_scope:policy.PolicyRuleState)
        private static final policy.Policy.PolicyRuleState DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new policy.Policy.PolicyRuleState();
        }

        public static policy.Policy.PolicyRuleState getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<PolicyRuleState> PARSER = new com.google.protobuf.AbstractParser<PolicyRuleState>() {

            @java.lang.Override
            public PolicyRuleState parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                Builder builder = newBuilder();
                try {
                    builder.mergeFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(builder.buildPartial());
                } catch (com.google.protobuf.UninitializedMessageException e) {
                    throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(builder.buildPartial());
                }
                return builder.buildPartial();
            }
        };

        public static com.google.protobuf.Parser<PolicyRuleState> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PolicyRuleState> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public policy.Policy.PolicyRuleState getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface PolicyRuleBasicOrBuilder extends // @@protoc_insertion_point(interface_extends:policy.PolicyRuleBasic)
    com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.policy.PolicyRuleId policyRuleId = 1;</code>
         * @return Whether the policyRuleId field is set.
         */
        boolean hasPolicyRuleId();

        /**
         * <code>.policy.PolicyRuleId policyRuleId = 1;</code>
         * @return The policyRuleId.
         */
        policy.Policy.PolicyRuleId getPolicyRuleId();

        /**
         * <code>.policy.PolicyRuleId policyRuleId = 1;</code>
         */
        policy.Policy.PolicyRuleIdOrBuilder getPolicyRuleIdOrBuilder();

        /**
         *  <pre>
         * policy.proto:58:12: Explicit 'optional' labels are disallowed in the Proto3 syntax. To define 'optional' fields in Proto3, simply remove the 'optional' label, as fields are 'optional' by default.
         *  </pre>
         *
         *  <code>.policy.PolicyRuleState policyRuleState = 2;</code>
         *  @return Whether the policyRuleState field is set.
         */
        boolean hasPolicyRuleState();

        /**
         *  <pre>
         * policy.proto:58:12: Explicit 'optional' labels are disallowed in the Proto3 syntax. To define 'optional' fields in Proto3, simply remove the 'optional' label, as fields are 'optional' by default.
         *  </pre>
         *
         *  <code>.policy.PolicyRuleState policyRuleState = 2;</code>
         *  @return The policyRuleState.
         */
        policy.Policy.PolicyRuleState getPolicyRuleState();

        /**
         *  <pre>
         * policy.proto:58:12: Explicit 'optional' labels are disallowed in the Proto3 syntax. To define 'optional' fields in Proto3, simply remove the 'optional' label, as fields are 'optional' by default.
         *  </pre>
         *
         *  <code>.policy.PolicyRuleState policyRuleState = 2;</code>
         */
        policy.Policy.PolicyRuleStateOrBuilder getPolicyRuleStateOrBuilder();

        /**
         * <code>uint32 priority = 3;</code>
         * @return The priority.
         */
        int getPriority();

        /**
         * <pre>
         * Event-Condition-Action (ECA) model
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
         */
        java.util.List<policy.PolicyCondition.PolicyRuleCondition> getConditionListList();

        /**
         * <pre>
         * Event-Condition-Action (ECA) model
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
         */
        policy.PolicyCondition.PolicyRuleCondition getConditionList(int index);

        /**
         * <pre>
         * Event-Condition-Action (ECA) model
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
         */
        int getConditionListCount();

        /**
         * <pre>
         * Event-Condition-Action (ECA) model
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
         */
        java.util.List<? extends policy.PolicyCondition.PolicyRuleConditionOrBuilder> getConditionListOrBuilderList();

        /**
         * <pre>
         * Event-Condition-Action (ECA) model
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
         */
        policy.PolicyCondition.PolicyRuleConditionOrBuilder getConditionListOrBuilder(int index);

        /**
         * <pre>
         * Evaluation operator to be used
         * </pre>
         *
         * <code>.policy.BooleanOperator booleanOperator = 5;</code>
         * @return The enum numeric value on the wire for booleanOperator.
         */
        int getBooleanOperatorValue();

        /**
         * <pre>
         * Evaluation operator to be used
         * </pre>
         *
         * <code>.policy.BooleanOperator booleanOperator = 5;</code>
         * @return The booleanOperator.
         */
        policy.PolicyCondition.BooleanOperator getBooleanOperator();

        /**
         * <pre>
         * One or more actions should be applied
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
         */
        java.util.List<policy.PolicyAction.PolicyRuleAction> getActionListList();

        /**
         * <pre>
         * One or more actions should be applied
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
         */
        policy.PolicyAction.PolicyRuleAction getActionList(int index);

        /**
         * <pre>
         * One or more actions should be applied
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
         */
        int getActionListCount();

        /**
         * <pre>
         * One or more actions should be applied
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
         */
        java.util.List<? extends policy.PolicyAction.PolicyRuleActionOrBuilder> getActionListOrBuilderList();

        /**
         * <pre>
         * One or more actions should be applied
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
         */
        policy.PolicyAction.PolicyRuleActionOrBuilder getActionListOrBuilder(int index);
    }

    /**
     * <pre>
     * Basic policy rule attributes
     * </pre>
     *
     * Protobuf type {@code policy.PolicyRuleBasic}
     */
    public static final class PolicyRuleBasic extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:policy.PolicyRuleBasic)
    PolicyRuleBasicOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use PolicyRuleBasic.newBuilder() to construct.
        private PolicyRuleBasic(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private PolicyRuleBasic() {
            conditionList_ = java.util.Collections.emptyList();
            booleanOperator_ = 0;
            actionList_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({ "unused" })
        protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
            return new PolicyRuleBasic();
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return policy.Policy.internal_static_policy_PolicyRuleBasic_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return policy.Policy.internal_static_policy_PolicyRuleBasic_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRuleBasic.class, policy.Policy.PolicyRuleBasic.Builder.class);
        }

        public static final int POLICYRULEID_FIELD_NUMBER = 1;

        private policy.Policy.PolicyRuleId policyRuleId_;

        /**
         * <code>.policy.PolicyRuleId policyRuleId = 1;</code>
         * @return Whether the policyRuleId field is set.
         */
        @java.lang.Override
        public boolean hasPolicyRuleId() {
            return policyRuleId_ != null;
        }

        /**
         * <code>.policy.PolicyRuleId policyRuleId = 1;</code>
         * @return The policyRuleId.
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleId getPolicyRuleId() {
            return policyRuleId_ == null ? policy.Policy.PolicyRuleId.getDefaultInstance() : policyRuleId_;
        }

        /**
         * <code>.policy.PolicyRuleId policyRuleId = 1;</code>
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleIdOrBuilder getPolicyRuleIdOrBuilder() {
            return policyRuleId_ == null ? policy.Policy.PolicyRuleId.getDefaultInstance() : policyRuleId_;
        }

        public static final int POLICYRULESTATE_FIELD_NUMBER = 2;

        private policy.Policy.PolicyRuleState policyRuleState_;

        /**
         *  <pre>
         * policy.proto:58:12: Explicit 'optional' labels are disallowed in the Proto3 syntax. To define 'optional' fields in Proto3, simply remove the 'optional' label, as fields are 'optional' by default.
         *  </pre>
         *
         *  <code>.policy.PolicyRuleState policyRuleState = 2;</code>
         *  @return Whether the policyRuleState field is set.
         */
        @java.lang.Override
        public boolean hasPolicyRuleState() {
            return policyRuleState_ != null;
        }

        /**
         *  <pre>
         * policy.proto:58:12: Explicit 'optional' labels are disallowed in the Proto3 syntax. To define 'optional' fields in Proto3, simply remove the 'optional' label, as fields are 'optional' by default.
         *  </pre>
         *
         *  <code>.policy.PolicyRuleState policyRuleState = 2;</code>
         *  @return The policyRuleState.
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleState getPolicyRuleState() {
            return policyRuleState_ == null ? policy.Policy.PolicyRuleState.getDefaultInstance() : policyRuleState_;
        }

        /**
         *  <pre>
         * policy.proto:58:12: Explicit 'optional' labels are disallowed in the Proto3 syntax. To define 'optional' fields in Proto3, simply remove the 'optional' label, as fields are 'optional' by default.
         *  </pre>
         *
         *  <code>.policy.PolicyRuleState policyRuleState = 2;</code>
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleStateOrBuilder getPolicyRuleStateOrBuilder() {
            return policyRuleState_ == null ? policy.Policy.PolicyRuleState.getDefaultInstance() : policyRuleState_;
        }

        public static final int PRIORITY_FIELD_NUMBER = 3;

        private int priority_ = 0;

        /**
         * <code>uint32 priority = 3;</code>
         * @return The priority.
         */
        @java.lang.Override
        public int getPriority() {
            return priority_;
        }

        public static final int CONDITIONLIST_FIELD_NUMBER = 4;

        @SuppressWarnings("serial")
        private java.util.List<policy.PolicyCondition.PolicyRuleCondition> conditionList_;

        /**
         * <pre>
         * Event-Condition-Action (ECA) model
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
         */
        @java.lang.Override
        public java.util.List<policy.PolicyCondition.PolicyRuleCondition> getConditionListList() {
            return conditionList_;
        }

        /**
         * <pre>
         * Event-Condition-Action (ECA) model
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
         */
        @java.lang.Override
        public java.util.List<? extends policy.PolicyCondition.PolicyRuleConditionOrBuilder> getConditionListOrBuilderList() {
            return conditionList_;
        }

        /**
         * <pre>
         * Event-Condition-Action (ECA) model
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
         */
        @java.lang.Override
        public int getConditionListCount() {
            return conditionList_.size();
        }

        /**
         * <pre>
         * Event-Condition-Action (ECA) model
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
         */
        @java.lang.Override
        public policy.PolicyCondition.PolicyRuleCondition getConditionList(int index) {
            return conditionList_.get(index);
        }

        /**
         * <pre>
         * Event-Condition-Action (ECA) model
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
         */
        @java.lang.Override
        public policy.PolicyCondition.PolicyRuleConditionOrBuilder getConditionListOrBuilder(int index) {
            return conditionList_.get(index);
        }

        public static final int BOOLEANOPERATOR_FIELD_NUMBER = 5;

        private int booleanOperator_ = 0;

        /**
         * <pre>
         * Evaluation operator to be used
         * </pre>
         *
         * <code>.policy.BooleanOperator booleanOperator = 5;</code>
         * @return The enum numeric value on the wire for booleanOperator.
         */
        @java.lang.Override
        public int getBooleanOperatorValue() {
            return booleanOperator_;
        }

        /**
         * <pre>
         * Evaluation operator to be used
         * </pre>
         *
         * <code>.policy.BooleanOperator booleanOperator = 5;</code>
         * @return The booleanOperator.
         */
        @java.lang.Override
        public policy.PolicyCondition.BooleanOperator getBooleanOperator() {
            policy.PolicyCondition.BooleanOperator result = policy.PolicyCondition.BooleanOperator.forNumber(booleanOperator_);
            return result == null ? policy.PolicyCondition.BooleanOperator.UNRECOGNIZED : result;
        }

        public static final int ACTIONLIST_FIELD_NUMBER = 6;

        @SuppressWarnings("serial")
        private java.util.List<policy.PolicyAction.PolicyRuleAction> actionList_;

        /**
         * <pre>
         * One or more actions should be applied
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
         */
        @java.lang.Override
        public java.util.List<policy.PolicyAction.PolicyRuleAction> getActionListList() {
            return actionList_;
        }

        /**
         * <pre>
         * One or more actions should be applied
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
         */
        @java.lang.Override
        public java.util.List<? extends policy.PolicyAction.PolicyRuleActionOrBuilder> getActionListOrBuilderList() {
            return actionList_;
        }

        /**
         * <pre>
         * One or more actions should be applied
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
         */
        @java.lang.Override
        public int getActionListCount() {
            return actionList_.size();
        }

        /**
         * <pre>
         * One or more actions should be applied
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
         */
        @java.lang.Override
        public policy.PolicyAction.PolicyRuleAction getActionList(int index) {
            return actionList_.get(index);
        }

        /**
         * <pre>
         * One or more actions should be applied
         * </pre>
         *
         * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
         */
        @java.lang.Override
        public policy.PolicyAction.PolicyRuleActionOrBuilder getActionListOrBuilder(int index) {
            return actionList_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            if (policyRuleId_ != null) {
                output.writeMessage(1, getPolicyRuleId());
            }
            if (policyRuleState_ != null) {
                output.writeMessage(2, getPolicyRuleState());
            }
            if (priority_ != 0) {
                output.writeUInt32(3, priority_);
            }
            for (int i = 0; i < conditionList_.size(); i++) {
                output.writeMessage(4, conditionList_.get(i));
            }
            if (booleanOperator_ != policy.PolicyCondition.BooleanOperator.POLICYRULE_CONDITION_BOOLEAN_UNDEFINED.getNumber()) {
                output.writeEnum(5, booleanOperator_);
            }
            for (int i = 0; i < actionList_.size(); i++) {
                output.writeMessage(6, actionList_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1)
                return size;
            size = 0;
            if (policyRuleId_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getPolicyRuleId());
            }
            if (policyRuleState_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getPolicyRuleState());
            }
            if (priority_ != 0) {
                size += com.google.protobuf.CodedOutputStream.computeUInt32Size(3, priority_);
            }
            for (int i = 0; i < conditionList_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, conditionList_.get(i));
            }
            if (booleanOperator_ != policy.PolicyCondition.BooleanOperator.POLICYRULE_CONDITION_BOOLEAN_UNDEFINED.getNumber()) {
                size += com.google.protobuf.CodedOutputStream.computeEnumSize(5, booleanOperator_);
            }
            for (int i = 0; i < actionList_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, actionList_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof policy.Policy.PolicyRuleBasic)) {
                return super.equals(obj);
            }
            policy.Policy.PolicyRuleBasic other = (policy.Policy.PolicyRuleBasic) obj;
            if (hasPolicyRuleId() != other.hasPolicyRuleId())
                return false;
            if (hasPolicyRuleId()) {
                if (!getPolicyRuleId().equals(other.getPolicyRuleId()))
                    return false;
            }
            if (hasPolicyRuleState() != other.hasPolicyRuleState())
                return false;
            if (hasPolicyRuleState()) {
                if (!getPolicyRuleState().equals(other.getPolicyRuleState()))
                    return false;
            }
            if (getPriority() != other.getPriority())
                return false;
            if (!getConditionListList().equals(other.getConditionListList()))
                return false;
            if (booleanOperator_ != other.booleanOperator_)
                return false;
            if (!getActionListList().equals(other.getActionListList()))
                return false;
            if (!getUnknownFields().equals(other.getUnknownFields()))
                return false;
            return true;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasPolicyRuleId()) {
                hash = (37 * hash) + POLICYRULEID_FIELD_NUMBER;
                hash = (53 * hash) + getPolicyRuleId().hashCode();
            }
            if (hasPolicyRuleState()) {
                hash = (37 * hash) + POLICYRULESTATE_FIELD_NUMBER;
                hash = (53 * hash) + getPolicyRuleState().hashCode();
            }
            hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
            hash = (53 * hash) + getPriority();
            if (getConditionListCount() > 0) {
                hash = (37 * hash) + CONDITIONLIST_FIELD_NUMBER;
                hash = (53 * hash) + getConditionListList().hashCode();
            }
            hash = (37 * hash) + BOOLEANOPERATOR_FIELD_NUMBER;
            hash = (53 * hash) + booleanOperator_;
            if (getActionListCount() > 0) {
                hash = (37 * hash) + ACTIONLIST_FIELD_NUMBER;
                hash = (53 * hash) + getActionListList().hashCode();
            }
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static policy.Policy.PolicyRuleBasic parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleBasic parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleBasic parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleBasic parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleBasic parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleBasic parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleBasic parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleBasic parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleBasic parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleBasic parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleBasic parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleBasic parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(policy.Policy.PolicyRuleBasic prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * Basic policy rule attributes
         * </pre>
         *
         * Protobuf type {@code policy.PolicyRuleBasic}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:policy.PolicyRuleBasic)
        policy.Policy.PolicyRuleBasicOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return policy.Policy.internal_static_policy_PolicyRuleBasic_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return policy.Policy.internal_static_policy_PolicyRuleBasic_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRuleBasic.class, policy.Policy.PolicyRuleBasic.Builder.class);
            }

            // Construct using policy.Policy.PolicyRuleBasic.newBuilder()
            private Builder() {
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                bitField0_ = 0;
                policyRuleId_ = null;
                if (policyRuleIdBuilder_ != null) {
                    policyRuleIdBuilder_.dispose();
                    policyRuleIdBuilder_ = null;
                }
                policyRuleState_ = null;
                if (policyRuleStateBuilder_ != null) {
                    policyRuleStateBuilder_.dispose();
                    policyRuleStateBuilder_ = null;
                }
                priority_ = 0;
                if (conditionListBuilder_ == null) {
                    conditionList_ = java.util.Collections.emptyList();
                } else {
                    conditionList_ = null;
                    conditionListBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000008);
                booleanOperator_ = 0;
                if (actionListBuilder_ == null) {
                    actionList_ = java.util.Collections.emptyList();
                } else {
                    actionList_ = null;
                    actionListBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000020);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return policy.Policy.internal_static_policy_PolicyRuleBasic_descriptor;
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleBasic getDefaultInstanceForType() {
                return policy.Policy.PolicyRuleBasic.getDefaultInstance();
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleBasic build() {
                policy.Policy.PolicyRuleBasic result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleBasic buildPartial() {
                policy.Policy.PolicyRuleBasic result = new policy.Policy.PolicyRuleBasic(this);
                buildPartialRepeatedFields(result);
                if (bitField0_ != 0) {
                    buildPartial0(result);
                }
                onBuilt();
                return result;
            }

            private void buildPartialRepeatedFields(policy.Policy.PolicyRuleBasic result) {
                if (conditionListBuilder_ == null) {
                    if (((bitField0_ & 0x00000008) != 0)) {
                        conditionList_ = java.util.Collections.unmodifiableList(conditionList_);
                        bitField0_ = (bitField0_ & ~0x00000008);
                    }
                    result.conditionList_ = conditionList_;
                } else {
                    result.conditionList_ = conditionListBuilder_.build();
                }
                if (actionListBuilder_ == null) {
                    if (((bitField0_ & 0x00000020) != 0)) {
                        actionList_ = java.util.Collections.unmodifiableList(actionList_);
                        bitField0_ = (bitField0_ & ~0x00000020);
                    }
                    result.actionList_ = actionList_;
                } else {
                    result.actionList_ = actionListBuilder_.build();
                }
            }

            private void buildPartial0(policy.Policy.PolicyRuleBasic result) {
                int from_bitField0_ = bitField0_;
                if (((from_bitField0_ & 0x00000001) != 0)) {
                    result.policyRuleId_ = policyRuleIdBuilder_ == null ? policyRuleId_ : policyRuleIdBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000002) != 0)) {
                    result.policyRuleState_ = policyRuleStateBuilder_ == null ? policyRuleState_ : policyRuleStateBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000004) != 0)) {
                    result.priority_ = priority_;
                }
                if (((from_bitField0_ & 0x00000010) != 0)) {
                    result.booleanOperator_ = booleanOperator_;
                }
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof policy.Policy.PolicyRuleBasic) {
                    return mergeFrom((policy.Policy.PolicyRuleBasic) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(policy.Policy.PolicyRuleBasic other) {
                if (other == policy.Policy.PolicyRuleBasic.getDefaultInstance())
                    return this;
                if (other.hasPolicyRuleId()) {
                    mergePolicyRuleId(other.getPolicyRuleId());
                }
                if (other.hasPolicyRuleState()) {
                    mergePolicyRuleState(other.getPolicyRuleState());
                }
                if (other.getPriority() != 0) {
                    setPriority(other.getPriority());
                }
                if (conditionListBuilder_ == null) {
                    if (!other.conditionList_.isEmpty()) {
                        if (conditionList_.isEmpty()) {
                            conditionList_ = other.conditionList_;
                            bitField0_ = (bitField0_ & ~0x00000008);
                        } else {
                            ensureConditionListIsMutable();
                            conditionList_.addAll(other.conditionList_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.conditionList_.isEmpty()) {
                        if (conditionListBuilder_.isEmpty()) {
                            conditionListBuilder_.dispose();
                            conditionListBuilder_ = null;
                            conditionList_ = other.conditionList_;
                            bitField0_ = (bitField0_ & ~0x00000008);
                            conditionListBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getConditionListFieldBuilder() : null;
                        } else {
                            conditionListBuilder_.addAllMessages(other.conditionList_);
                        }
                    }
                }
                if (other.booleanOperator_ != 0) {
                    setBooleanOperatorValue(other.getBooleanOperatorValue());
                }
                if (actionListBuilder_ == null) {
                    if (!other.actionList_.isEmpty()) {
                        if (actionList_.isEmpty()) {
                            actionList_ = other.actionList_;
                            bitField0_ = (bitField0_ & ~0x00000020);
                        } else {
                            ensureActionListIsMutable();
                            actionList_.addAll(other.actionList_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.actionList_.isEmpty()) {
                        if (actionListBuilder_.isEmpty()) {
                            actionListBuilder_.dispose();
                            actionListBuilder_ = null;
                            actionList_ = other.actionList_;
                            bitField0_ = (bitField0_ & ~0x00000020);
                            actionListBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getActionListFieldBuilder() : null;
                        } else {
                            actionListBuilder_.addAllMessages(other.actionList_);
                        }
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    input.readMessage(getPolicyRuleIdFieldBuilder().getBuilder(), extensionRegistry);
                                    bitField0_ |= 0x00000001;
                                    break;
                                }
                            // case 10
                            case 18:
                                {
                                    input.readMessage(getPolicyRuleStateFieldBuilder().getBuilder(), extensionRegistry);
                                    bitField0_ |= 0x00000002;
                                    break;
                                }
                            // case 18
                            case 24:
                                {
                                    priority_ = input.readUInt32();
                                    bitField0_ |= 0x00000004;
                                    break;
                                }
                            // case 24
                            case 34:
                                {
                                    policy.PolicyCondition.PolicyRuleCondition m = input.readMessage(policy.PolicyCondition.PolicyRuleCondition.parser(), extensionRegistry);
                                    if (conditionListBuilder_ == null) {
                                        ensureConditionListIsMutable();
                                        conditionList_.add(m);
                                    } else {
                                        conditionListBuilder_.addMessage(m);
                                    }
                                    break;
                                }
                            // case 34
                            case 40:
                                {
                                    booleanOperator_ = input.readEnum();
                                    bitField0_ |= 0x00000010;
                                    break;
                                }
                            // case 40
                            case 50:
                                {
                                    policy.PolicyAction.PolicyRuleAction m = input.readMessage(policy.PolicyAction.PolicyRuleAction.parser(), extensionRegistry);
                                    if (actionListBuilder_ == null) {
                                        ensureActionListIsMutable();
                                        actionList_.add(m);
                                    } else {
                                        actionListBuilder_.addMessage(m);
                                    }
                                    break;
                                }
                            // case 50
                            default:
                                {
                                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                                        // was an endgroup tag
                                        done = true;
                                    }
                                    break;
                                }
                        }
                        // switch (tag)
                    }
                    // while (!done)
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.unwrapIOException();
                } finally {
                    onChanged();
                }
                // finally
                return this;
            }

            private int bitField0_;

            private policy.Policy.PolicyRuleId policyRuleId_;

            private com.google.protobuf.SingleFieldBuilderV3<policy.Policy.PolicyRuleId, policy.Policy.PolicyRuleId.Builder, policy.Policy.PolicyRuleIdOrBuilder> policyRuleIdBuilder_;

            /**
             * <code>.policy.PolicyRuleId policyRuleId = 1;</code>
             * @return Whether the policyRuleId field is set.
             */
            public boolean hasPolicyRuleId() {
                return ((bitField0_ & 0x00000001) != 0);
            }

            /**
             * <code>.policy.PolicyRuleId policyRuleId = 1;</code>
             * @return The policyRuleId.
             */
            public policy.Policy.PolicyRuleId getPolicyRuleId() {
                if (policyRuleIdBuilder_ == null) {
                    return policyRuleId_ == null ? policy.Policy.PolicyRuleId.getDefaultInstance() : policyRuleId_;
                } else {
                    return policyRuleIdBuilder_.getMessage();
                }
            }

            /**
             * <code>.policy.PolicyRuleId policyRuleId = 1;</code>
             */
            public Builder setPolicyRuleId(policy.Policy.PolicyRuleId value) {
                if (policyRuleIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    policyRuleId_ = value;
                } else {
                    policyRuleIdBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <code>.policy.PolicyRuleId policyRuleId = 1;</code>
             */
            public Builder setPolicyRuleId(policy.Policy.PolicyRuleId.Builder builderForValue) {
                if (policyRuleIdBuilder_ == null) {
                    policyRuleId_ = builderForValue.build();
                } else {
                    policyRuleIdBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <code>.policy.PolicyRuleId policyRuleId = 1;</code>
             */
            public Builder mergePolicyRuleId(policy.Policy.PolicyRuleId value) {
                if (policyRuleIdBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) != 0) && policyRuleId_ != null && policyRuleId_ != policy.Policy.PolicyRuleId.getDefaultInstance()) {
                        getPolicyRuleIdBuilder().mergeFrom(value);
                    } else {
                        policyRuleId_ = value;
                    }
                } else {
                    policyRuleIdBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <code>.policy.PolicyRuleId policyRuleId = 1;</code>
             */
            public Builder clearPolicyRuleId() {
                bitField0_ = (bitField0_ & ~0x00000001);
                policyRuleId_ = null;
                if (policyRuleIdBuilder_ != null) {
                    policyRuleIdBuilder_.dispose();
                    policyRuleIdBuilder_ = null;
                }
                onChanged();
                return this;
            }

            /**
             * <code>.policy.PolicyRuleId policyRuleId = 1;</code>
             */
            public policy.Policy.PolicyRuleId.Builder getPolicyRuleIdBuilder() {
                bitField0_ |= 0x00000001;
                onChanged();
                return getPolicyRuleIdFieldBuilder().getBuilder();
            }

            /**
             * <code>.policy.PolicyRuleId policyRuleId = 1;</code>
             */
            public policy.Policy.PolicyRuleIdOrBuilder getPolicyRuleIdOrBuilder() {
                if (policyRuleIdBuilder_ != null) {
                    return policyRuleIdBuilder_.getMessageOrBuilder();
                } else {
                    return policyRuleId_ == null ? policy.Policy.PolicyRuleId.getDefaultInstance() : policyRuleId_;
                }
            }

            /**
             * <code>.policy.PolicyRuleId policyRuleId = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<policy.Policy.PolicyRuleId, policy.Policy.PolicyRuleId.Builder, policy.Policy.PolicyRuleIdOrBuilder> getPolicyRuleIdFieldBuilder() {
                if (policyRuleIdBuilder_ == null) {
                    policyRuleIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<policy.Policy.PolicyRuleId, policy.Policy.PolicyRuleId.Builder, policy.Policy.PolicyRuleIdOrBuilder>(getPolicyRuleId(), getParentForChildren(), isClean());
                    policyRuleId_ = null;
                }
                return policyRuleIdBuilder_;
            }

            private policy.Policy.PolicyRuleState policyRuleState_;

            private com.google.protobuf.SingleFieldBuilderV3<policy.Policy.PolicyRuleState, policy.Policy.PolicyRuleState.Builder, policy.Policy.PolicyRuleStateOrBuilder> policyRuleStateBuilder_;

            /**
             *  <pre>
             * policy.proto:58:12: Explicit 'optional' labels are disallowed in the Proto3 syntax. To define 'optional' fields in Proto3, simply remove the 'optional' label, as fields are 'optional' by default.
             *  </pre>
             *
             *  <code>.policy.PolicyRuleState policyRuleState = 2;</code>
             *  @return Whether the policyRuleState field is set.
             */
            public boolean hasPolicyRuleState() {
                return ((bitField0_ & 0x00000002) != 0);
            }

            /**
             *  <pre>
             * policy.proto:58:12: Explicit 'optional' labels are disallowed in the Proto3 syntax. To define 'optional' fields in Proto3, simply remove the 'optional' label, as fields are 'optional' by default.
             *  </pre>
             *
             *  <code>.policy.PolicyRuleState policyRuleState = 2;</code>
             *  @return The policyRuleState.
             */
            public policy.Policy.PolicyRuleState getPolicyRuleState() {
                if (policyRuleStateBuilder_ == null) {
                    return policyRuleState_ == null ? policy.Policy.PolicyRuleState.getDefaultInstance() : policyRuleState_;
                } else {
                    return policyRuleStateBuilder_.getMessage();
                }
            }

            /**
             *  <pre>
             * policy.proto:58:12: Explicit 'optional' labels are disallowed in the Proto3 syntax. To define 'optional' fields in Proto3, simply remove the 'optional' label, as fields are 'optional' by default.
             *  </pre>
             *
             *  <code>.policy.PolicyRuleState policyRuleState = 2;</code>
             */
            public Builder setPolicyRuleState(policy.Policy.PolicyRuleState value) {
                if (policyRuleStateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    policyRuleState_ = value;
                } else {
                    policyRuleStateBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            /**
             *  <pre>
             * policy.proto:58:12: Explicit 'optional' labels are disallowed in the Proto3 syntax. To define 'optional' fields in Proto3, simply remove the 'optional' label, as fields are 'optional' by default.
             *  </pre>
             *
             *  <code>.policy.PolicyRuleState policyRuleState = 2;</code>
             */
            public Builder setPolicyRuleState(policy.Policy.PolicyRuleState.Builder builderForValue) {
                if (policyRuleStateBuilder_ == null) {
                    policyRuleState_ = builderForValue.build();
                } else {
                    policyRuleStateBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            /**
             *  <pre>
             * policy.proto:58:12: Explicit 'optional' labels are disallowed in the Proto3 syntax. To define 'optional' fields in Proto3, simply remove the 'optional' label, as fields are 'optional' by default.
             *  </pre>
             *
             *  <code>.policy.PolicyRuleState policyRuleState = 2;</code>
             */
            public Builder mergePolicyRuleState(policy.Policy.PolicyRuleState value) {
                if (policyRuleStateBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) != 0) && policyRuleState_ != null && policyRuleState_ != policy.Policy.PolicyRuleState.getDefaultInstance()) {
                        getPolicyRuleStateBuilder().mergeFrom(value);
                    } else {
                        policyRuleState_ = value;
                    }
                } else {
                    policyRuleStateBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            /**
             *  <pre>
             * policy.proto:58:12: Explicit 'optional' labels are disallowed in the Proto3 syntax. To define 'optional' fields in Proto3, simply remove the 'optional' label, as fields are 'optional' by default.
             *  </pre>
             *
             *  <code>.policy.PolicyRuleState policyRuleState = 2;</code>
             */
            public Builder clearPolicyRuleState() {
                bitField0_ = (bitField0_ & ~0x00000002);
                policyRuleState_ = null;
                if (policyRuleStateBuilder_ != null) {
                    policyRuleStateBuilder_.dispose();
                    policyRuleStateBuilder_ = null;
                }
                onChanged();
                return this;
            }

            /**
             *  <pre>
             * policy.proto:58:12: Explicit 'optional' labels are disallowed in the Proto3 syntax. To define 'optional' fields in Proto3, simply remove the 'optional' label, as fields are 'optional' by default.
             *  </pre>
             *
             *  <code>.policy.PolicyRuleState policyRuleState = 2;</code>
             */
            public policy.Policy.PolicyRuleState.Builder getPolicyRuleStateBuilder() {
                bitField0_ |= 0x00000002;
                onChanged();
                return getPolicyRuleStateFieldBuilder().getBuilder();
            }

            /**
             *  <pre>
             * policy.proto:58:12: Explicit 'optional' labels are disallowed in the Proto3 syntax. To define 'optional' fields in Proto3, simply remove the 'optional' label, as fields are 'optional' by default.
             *  </pre>
             *
             *  <code>.policy.PolicyRuleState policyRuleState = 2;</code>
             */
            public policy.Policy.PolicyRuleStateOrBuilder getPolicyRuleStateOrBuilder() {
                if (policyRuleStateBuilder_ != null) {
                    return policyRuleStateBuilder_.getMessageOrBuilder();
                } else {
                    return policyRuleState_ == null ? policy.Policy.PolicyRuleState.getDefaultInstance() : policyRuleState_;
                }
            }

            /**
             *  <pre>
             * policy.proto:58:12: Explicit 'optional' labels are disallowed in the Proto3 syntax. To define 'optional' fields in Proto3, simply remove the 'optional' label, as fields are 'optional' by default.
             *  </pre>
             *
             *  <code>.policy.PolicyRuleState policyRuleState = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<policy.Policy.PolicyRuleState, policy.Policy.PolicyRuleState.Builder, policy.Policy.PolicyRuleStateOrBuilder> getPolicyRuleStateFieldBuilder() {
                if (policyRuleStateBuilder_ == null) {
                    policyRuleStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<policy.Policy.PolicyRuleState, policy.Policy.PolicyRuleState.Builder, policy.Policy.PolicyRuleStateOrBuilder>(getPolicyRuleState(), getParentForChildren(), isClean());
                    policyRuleState_ = null;
                }
                return policyRuleStateBuilder_;
            }

            private int priority_;

            /**
             * <code>uint32 priority = 3;</code>
             * @return The priority.
             */
            @java.lang.Override
            public int getPriority() {
                return priority_;
            }

            /**
             * <code>uint32 priority = 3;</code>
             * @param value The priority to set.
             * @return This builder for chaining.
             */
            public Builder setPriority(int value) {
                priority_ = value;
                bitField0_ |= 0x00000004;
                onChanged();
                return this;
            }

            /**
             * <code>uint32 priority = 3;</code>
             * @return This builder for chaining.
             */
            public Builder clearPriority() {
                bitField0_ = (bitField0_ & ~0x00000004);
                priority_ = 0;
                onChanged();
                return this;
            }

            private java.util.List<policy.PolicyCondition.PolicyRuleCondition> conditionList_ = java.util.Collections.emptyList();

            private void ensureConditionListIsMutable() {
                if (!((bitField0_ & 0x00000008) != 0)) {
                    conditionList_ = new java.util.ArrayList<policy.PolicyCondition.PolicyRuleCondition>(conditionList_);
                    bitField0_ |= 0x00000008;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<policy.PolicyCondition.PolicyRuleCondition, policy.PolicyCondition.PolicyRuleCondition.Builder, policy.PolicyCondition.PolicyRuleConditionOrBuilder> conditionListBuilder_;

            /**
             * <pre>
             * Event-Condition-Action (ECA) model
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
             */
            public java.util.List<policy.PolicyCondition.PolicyRuleCondition> getConditionListList() {
                if (conditionListBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(conditionList_);
                } else {
                    return conditionListBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * Event-Condition-Action (ECA) model
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
             */
            public int getConditionListCount() {
                if (conditionListBuilder_ == null) {
                    return conditionList_.size();
                } else {
                    return conditionListBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * Event-Condition-Action (ECA) model
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
             */
            public policy.PolicyCondition.PolicyRuleCondition getConditionList(int index) {
                if (conditionListBuilder_ == null) {
                    return conditionList_.get(index);
                } else {
                    return conditionListBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * Event-Condition-Action (ECA) model
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
             */
            public Builder setConditionList(int index, policy.PolicyCondition.PolicyRuleCondition value) {
                if (conditionListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureConditionListIsMutable();
                    conditionList_.set(index, value);
                    onChanged();
                } else {
                    conditionListBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * Event-Condition-Action (ECA) model
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
             */
            public Builder setConditionList(int index, policy.PolicyCondition.PolicyRuleCondition.Builder builderForValue) {
                if (conditionListBuilder_ == null) {
                    ensureConditionListIsMutable();
                    conditionList_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    conditionListBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * Event-Condition-Action (ECA) model
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
             */
            public Builder addConditionList(policy.PolicyCondition.PolicyRuleCondition value) {
                if (conditionListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureConditionListIsMutable();
                    conditionList_.add(value);
                    onChanged();
                } else {
                    conditionListBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * Event-Condition-Action (ECA) model
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
             */
            public Builder addConditionList(int index, policy.PolicyCondition.PolicyRuleCondition value) {
                if (conditionListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureConditionListIsMutable();
                    conditionList_.add(index, value);
                    onChanged();
                } else {
                    conditionListBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * Event-Condition-Action (ECA) model
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
             */
            public Builder addConditionList(policy.PolicyCondition.PolicyRuleCondition.Builder builderForValue) {
                if (conditionListBuilder_ == null) {
                    ensureConditionListIsMutable();
                    conditionList_.add(builderForValue.build());
                    onChanged();
                } else {
                    conditionListBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * Event-Condition-Action (ECA) model
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
             */
            public Builder addConditionList(int index, policy.PolicyCondition.PolicyRuleCondition.Builder builderForValue) {
                if (conditionListBuilder_ == null) {
                    ensureConditionListIsMutable();
                    conditionList_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    conditionListBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * Event-Condition-Action (ECA) model
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
             */
            public Builder addAllConditionList(java.lang.Iterable<? extends policy.PolicyCondition.PolicyRuleCondition> values) {
                if (conditionListBuilder_ == null) {
                    ensureConditionListIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, conditionList_);
                    onChanged();
                } else {
                    conditionListBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * Event-Condition-Action (ECA) model
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
             */
            public Builder clearConditionList() {
                if (conditionListBuilder_ == null) {
                    conditionList_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000008);
                    onChanged();
                } else {
                    conditionListBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * Event-Condition-Action (ECA) model
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
             */
            public Builder removeConditionList(int index) {
                if (conditionListBuilder_ == null) {
                    ensureConditionListIsMutable();
                    conditionList_.remove(index);
                    onChanged();
                } else {
                    conditionListBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * Event-Condition-Action (ECA) model
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
             */
            public policy.PolicyCondition.PolicyRuleCondition.Builder getConditionListBuilder(int index) {
                return getConditionListFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * Event-Condition-Action (ECA) model
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
             */
            public policy.PolicyCondition.PolicyRuleConditionOrBuilder getConditionListOrBuilder(int index) {
                if (conditionListBuilder_ == null) {
                    return conditionList_.get(index);
                } else {
                    return conditionListBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * Event-Condition-Action (ECA) model
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
             */
            public java.util.List<? extends policy.PolicyCondition.PolicyRuleConditionOrBuilder> getConditionListOrBuilderList() {
                if (conditionListBuilder_ != null) {
                    return conditionListBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(conditionList_);
                }
            }

            /**
             * <pre>
             * Event-Condition-Action (ECA) model
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
             */
            public policy.PolicyCondition.PolicyRuleCondition.Builder addConditionListBuilder() {
                return getConditionListFieldBuilder().addBuilder(policy.PolicyCondition.PolicyRuleCondition.getDefaultInstance());
            }

            /**
             * <pre>
             * Event-Condition-Action (ECA) model
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
             */
            public policy.PolicyCondition.PolicyRuleCondition.Builder addConditionListBuilder(int index) {
                return getConditionListFieldBuilder().addBuilder(index, policy.PolicyCondition.PolicyRuleCondition.getDefaultInstance());
            }

            /**
             * <pre>
             * Event-Condition-Action (ECA) model
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleCondition conditionList = 4;</code>
             */
            public java.util.List<policy.PolicyCondition.PolicyRuleCondition.Builder> getConditionListBuilderList() {
                return getConditionListFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<policy.PolicyCondition.PolicyRuleCondition, policy.PolicyCondition.PolicyRuleCondition.Builder, policy.PolicyCondition.PolicyRuleConditionOrBuilder> getConditionListFieldBuilder() {
                if (conditionListBuilder_ == null) {
                    conditionListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<policy.PolicyCondition.PolicyRuleCondition, policy.PolicyCondition.PolicyRuleCondition.Builder, policy.PolicyCondition.PolicyRuleConditionOrBuilder>(conditionList_, ((bitField0_ & 0x00000008) != 0), getParentForChildren(), isClean());
                    conditionList_ = null;
                }
                return conditionListBuilder_;
            }

            private int booleanOperator_ = 0;

            /**
             * <pre>
             * Evaluation operator to be used
             * </pre>
             *
             * <code>.policy.BooleanOperator booleanOperator = 5;</code>
             * @return The enum numeric value on the wire for booleanOperator.
             */
            @java.lang.Override
            public int getBooleanOperatorValue() {
                return booleanOperator_;
            }

            /**
             * <pre>
             * Evaluation operator to be used
             * </pre>
             *
             * <code>.policy.BooleanOperator booleanOperator = 5;</code>
             * @param value The enum numeric value on the wire for booleanOperator to set.
             * @return This builder for chaining.
             */
            public Builder setBooleanOperatorValue(int value) {
                booleanOperator_ = value;
                bitField0_ |= 0x00000010;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Evaluation operator to be used
             * </pre>
             *
             * <code>.policy.BooleanOperator booleanOperator = 5;</code>
             * @return The booleanOperator.
             */
            @java.lang.Override
            public policy.PolicyCondition.BooleanOperator getBooleanOperator() {
                policy.PolicyCondition.BooleanOperator result = policy.PolicyCondition.BooleanOperator.forNumber(booleanOperator_);
                return result == null ? policy.PolicyCondition.BooleanOperator.UNRECOGNIZED : result;
            }

            /**
             * <pre>
             * Evaluation operator to be used
             * </pre>
             *
             * <code>.policy.BooleanOperator booleanOperator = 5;</code>
             * @param value The booleanOperator to set.
             * @return This builder for chaining.
             */
            public Builder setBooleanOperator(policy.PolicyCondition.BooleanOperator value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000010;
                booleanOperator_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Evaluation operator to be used
             * </pre>
             *
             * <code>.policy.BooleanOperator booleanOperator = 5;</code>
             * @return This builder for chaining.
             */
            public Builder clearBooleanOperator() {
                bitField0_ = (bitField0_ & ~0x00000010);
                booleanOperator_ = 0;
                onChanged();
                return this;
            }

            private java.util.List<policy.PolicyAction.PolicyRuleAction> actionList_ = java.util.Collections.emptyList();

            private void ensureActionListIsMutable() {
                if (!((bitField0_ & 0x00000020) != 0)) {
                    actionList_ = new java.util.ArrayList<policy.PolicyAction.PolicyRuleAction>(actionList_);
                    bitField0_ |= 0x00000020;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<policy.PolicyAction.PolicyRuleAction, policy.PolicyAction.PolicyRuleAction.Builder, policy.PolicyAction.PolicyRuleActionOrBuilder> actionListBuilder_;

            /**
             * <pre>
             * One or more actions should be applied
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
             */
            public java.util.List<policy.PolicyAction.PolicyRuleAction> getActionListList() {
                if (actionListBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(actionList_);
                } else {
                    return actionListBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * One or more actions should be applied
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
             */
            public int getActionListCount() {
                if (actionListBuilder_ == null) {
                    return actionList_.size();
                } else {
                    return actionListBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * One or more actions should be applied
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
             */
            public policy.PolicyAction.PolicyRuleAction getActionList(int index) {
                if (actionListBuilder_ == null) {
                    return actionList_.get(index);
                } else {
                    return actionListBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * One or more actions should be applied
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
             */
            public Builder setActionList(int index, policy.PolicyAction.PolicyRuleAction value) {
                if (actionListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureActionListIsMutable();
                    actionList_.set(index, value);
                    onChanged();
                } else {
                    actionListBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * One or more actions should be applied
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
             */
            public Builder setActionList(int index, policy.PolicyAction.PolicyRuleAction.Builder builderForValue) {
                if (actionListBuilder_ == null) {
                    ensureActionListIsMutable();
                    actionList_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    actionListBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * One or more actions should be applied
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
             */
            public Builder addActionList(policy.PolicyAction.PolicyRuleAction value) {
                if (actionListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureActionListIsMutable();
                    actionList_.add(value);
                    onChanged();
                } else {
                    actionListBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * One or more actions should be applied
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
             */
            public Builder addActionList(int index, policy.PolicyAction.PolicyRuleAction value) {
                if (actionListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureActionListIsMutable();
                    actionList_.add(index, value);
                    onChanged();
                } else {
                    actionListBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * One or more actions should be applied
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
             */
            public Builder addActionList(policy.PolicyAction.PolicyRuleAction.Builder builderForValue) {
                if (actionListBuilder_ == null) {
                    ensureActionListIsMutable();
                    actionList_.add(builderForValue.build());
                    onChanged();
                } else {
                    actionListBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * One or more actions should be applied
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
             */
            public Builder addActionList(int index, policy.PolicyAction.PolicyRuleAction.Builder builderForValue) {
                if (actionListBuilder_ == null) {
                    ensureActionListIsMutable();
                    actionList_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    actionListBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * One or more actions should be applied
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
             */
            public Builder addAllActionList(java.lang.Iterable<? extends policy.PolicyAction.PolicyRuleAction> values) {
                if (actionListBuilder_ == null) {
                    ensureActionListIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, actionList_);
                    onChanged();
                } else {
                    actionListBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * One or more actions should be applied
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
             */
            public Builder clearActionList() {
                if (actionListBuilder_ == null) {
                    actionList_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000020);
                    onChanged();
                } else {
                    actionListBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * One or more actions should be applied
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
             */
            public Builder removeActionList(int index) {
                if (actionListBuilder_ == null) {
                    ensureActionListIsMutable();
                    actionList_.remove(index);
                    onChanged();
                } else {
                    actionListBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * One or more actions should be applied
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
             */
            public policy.PolicyAction.PolicyRuleAction.Builder getActionListBuilder(int index) {
                return getActionListFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * One or more actions should be applied
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
             */
            public policy.PolicyAction.PolicyRuleActionOrBuilder getActionListOrBuilder(int index) {
                if (actionListBuilder_ == null) {
                    return actionList_.get(index);
                } else {
                    return actionListBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * One or more actions should be applied
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
             */
            public java.util.List<? extends policy.PolicyAction.PolicyRuleActionOrBuilder> getActionListOrBuilderList() {
                if (actionListBuilder_ != null) {
                    return actionListBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(actionList_);
                }
            }

            /**
             * <pre>
             * One or more actions should be applied
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
             */
            public policy.PolicyAction.PolicyRuleAction.Builder addActionListBuilder() {
                return getActionListFieldBuilder().addBuilder(policy.PolicyAction.PolicyRuleAction.getDefaultInstance());
            }

            /**
             * <pre>
             * One or more actions should be applied
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
             */
            public policy.PolicyAction.PolicyRuleAction.Builder addActionListBuilder(int index) {
                return getActionListFieldBuilder().addBuilder(index, policy.PolicyAction.PolicyRuleAction.getDefaultInstance());
            }

            /**
             * <pre>
             * One or more actions should be applied
             * </pre>
             *
             * <code>repeated .policy.PolicyRuleAction actionList = 6;</code>
             */
            public java.util.List<policy.PolicyAction.PolicyRuleAction.Builder> getActionListBuilderList() {
                return getActionListFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<policy.PolicyAction.PolicyRuleAction, policy.PolicyAction.PolicyRuleAction.Builder, policy.PolicyAction.PolicyRuleActionOrBuilder> getActionListFieldBuilder() {
                if (actionListBuilder_ == null) {
                    actionListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<policy.PolicyAction.PolicyRuleAction, policy.PolicyAction.PolicyRuleAction.Builder, policy.PolicyAction.PolicyRuleActionOrBuilder>(actionList_, ((bitField0_ & 0x00000020) != 0), getParentForChildren(), isClean());
                    actionList_ = null;
                }
                return actionListBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }
            // @@protoc_insertion_point(builder_scope:policy.PolicyRuleBasic)
        }

        // @@protoc_insertion_point(class_scope:policy.PolicyRuleBasic)
        private static final policy.Policy.PolicyRuleBasic DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new policy.Policy.PolicyRuleBasic();
        }

        public static policy.Policy.PolicyRuleBasic getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<PolicyRuleBasic> PARSER = new com.google.protobuf.AbstractParser<PolicyRuleBasic>() {

            @java.lang.Override
            public PolicyRuleBasic parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                Builder builder = newBuilder();
                try {
                    builder.mergeFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(builder.buildPartial());
                } catch (com.google.protobuf.UninitializedMessageException e) {
                    throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(builder.buildPartial());
                }
                return builder.buildPartial();
            }
        };

        public static com.google.protobuf.Parser<PolicyRuleBasic> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PolicyRuleBasic> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public policy.Policy.PolicyRuleBasic getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface PolicyRuleServiceOrBuilder extends // @@protoc_insertion_point(interface_extends:policy.PolicyRuleService)
    com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Basic policy rule attributes
         * </pre>
         *
         * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
         * @return Whether the policyRuleBasic field is set.
         */
        boolean hasPolicyRuleBasic();

        /**
         * <pre>
         * Basic policy rule attributes
         * </pre>
         *
         * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
         * @return The policyRuleBasic.
         */
        policy.Policy.PolicyRuleBasic getPolicyRuleBasic();

        /**
         * <pre>
         * Basic policy rule attributes
         * </pre>
         *
         * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
         */
        policy.Policy.PolicyRuleBasicOrBuilder getPolicyRuleBasicOrBuilder();

        /**
         * <pre>
         * Affected service and (some of) its device(s)
         * </pre>
         *
         * <code>.context.ServiceId serviceId = 2;</code>
         * @return Whether the serviceId field is set.
         */
        boolean hasServiceId();

        /**
         * <pre>
         * Affected service and (some of) its device(s)
         * </pre>
         *
         * <code>.context.ServiceId serviceId = 2;</code>
         * @return The serviceId.
         */
        context.ContextOuterClass.ServiceId getServiceId();

        /**
         * <pre>
         * Affected service and (some of) its device(s)
         * </pre>
         *
         * <code>.context.ServiceId serviceId = 2;</code>
         */
        context.ContextOuterClass.ServiceIdOrBuilder getServiceIdOrBuilder();

        /**
         * <pre>
         * List of devices this service is traversing (not exhaustive)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 3;</code>
         */
        java.util.List<context.ContextOuterClass.DeviceId> getDeviceListList();

        /**
         * <pre>
         * List of devices this service is traversing (not exhaustive)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 3;</code>
         */
        context.ContextOuterClass.DeviceId getDeviceList(int index);

        /**
         * <pre>
         * List of devices this service is traversing (not exhaustive)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 3;</code>
         */
        int getDeviceListCount();

        /**
         * <pre>
         * List of devices this service is traversing (not exhaustive)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 3;</code>
         */
        java.util.List<? extends context.ContextOuterClass.DeviceIdOrBuilder> getDeviceListOrBuilderList();

        /**
         * <pre>
         * List of devices this service is traversing (not exhaustive)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 3;</code>
         */
        context.ContextOuterClass.DeviceIdOrBuilder getDeviceListOrBuilder(int index);
    }

    /**
     * <pre>
     * Service-oriented policy rule
     * </pre>
     *
     * Protobuf type {@code policy.PolicyRuleService}
     */
    public static final class PolicyRuleService extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:policy.PolicyRuleService)
    PolicyRuleServiceOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use PolicyRuleService.newBuilder() to construct.
        private PolicyRuleService(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private PolicyRuleService() {
            deviceList_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({ "unused" })
        protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
            return new PolicyRuleService();
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return policy.Policy.internal_static_policy_PolicyRuleService_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return policy.Policy.internal_static_policy_PolicyRuleService_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRuleService.class, policy.Policy.PolicyRuleService.Builder.class);
        }

        public static final int POLICYRULEBASIC_FIELD_NUMBER = 1;

        private policy.Policy.PolicyRuleBasic policyRuleBasic_;

        /**
         * <pre>
         * Basic policy rule attributes
         * </pre>
         *
         * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
         * @return Whether the policyRuleBasic field is set.
         */
        @java.lang.Override
        public boolean hasPolicyRuleBasic() {
            return policyRuleBasic_ != null;
        }

        /**
         * <pre>
         * Basic policy rule attributes
         * </pre>
         *
         * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
         * @return The policyRuleBasic.
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleBasic getPolicyRuleBasic() {
            return policyRuleBasic_ == null ? policy.Policy.PolicyRuleBasic.getDefaultInstance() : policyRuleBasic_;
        }

        /**
         * <pre>
         * Basic policy rule attributes
         * </pre>
         *
         * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleBasicOrBuilder getPolicyRuleBasicOrBuilder() {
            return policyRuleBasic_ == null ? policy.Policy.PolicyRuleBasic.getDefaultInstance() : policyRuleBasic_;
        }

        public static final int SERVICEID_FIELD_NUMBER = 2;

        private context.ContextOuterClass.ServiceId serviceId_;

        /**
         * <pre>
         * Affected service and (some of) its device(s)
         * </pre>
         *
         * <code>.context.ServiceId serviceId = 2;</code>
         * @return Whether the serviceId field is set.
         */
        @java.lang.Override
        public boolean hasServiceId() {
            return serviceId_ != null;
        }

        /**
         * <pre>
         * Affected service and (some of) its device(s)
         * </pre>
         *
         * <code>.context.ServiceId serviceId = 2;</code>
         * @return The serviceId.
         */
        @java.lang.Override
        public context.ContextOuterClass.ServiceId getServiceId() {
            return serviceId_ == null ? context.ContextOuterClass.ServiceId.getDefaultInstance() : serviceId_;
        }

        /**
         * <pre>
         * Affected service and (some of) its device(s)
         * </pre>
         *
         * <code>.context.ServiceId serviceId = 2;</code>
         */
        @java.lang.Override
        public context.ContextOuterClass.ServiceIdOrBuilder getServiceIdOrBuilder() {
            return serviceId_ == null ? context.ContextOuterClass.ServiceId.getDefaultInstance() : serviceId_;
        }

        public static final int DEVICELIST_FIELD_NUMBER = 3;

        @SuppressWarnings("serial")
        private java.util.List<context.ContextOuterClass.DeviceId> deviceList_;

        /**
         * <pre>
         * List of devices this service is traversing (not exhaustive)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 3;</code>
         */
        @java.lang.Override
        public java.util.List<context.ContextOuterClass.DeviceId> getDeviceListList() {
            return deviceList_;
        }

        /**
         * <pre>
         * List of devices this service is traversing (not exhaustive)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 3;</code>
         */
        @java.lang.Override
        public java.util.List<? extends context.ContextOuterClass.DeviceIdOrBuilder> getDeviceListOrBuilderList() {
            return deviceList_;
        }

        /**
         * <pre>
         * List of devices this service is traversing (not exhaustive)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 3;</code>
         */
        @java.lang.Override
        public int getDeviceListCount() {
            return deviceList_.size();
        }

        /**
         * <pre>
         * List of devices this service is traversing (not exhaustive)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 3;</code>
         */
        @java.lang.Override
        public context.ContextOuterClass.DeviceId getDeviceList(int index) {
            return deviceList_.get(index);
        }

        /**
         * <pre>
         * List of devices this service is traversing (not exhaustive)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 3;</code>
         */
        @java.lang.Override
        public context.ContextOuterClass.DeviceIdOrBuilder getDeviceListOrBuilder(int index) {
            return deviceList_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            if (policyRuleBasic_ != null) {
                output.writeMessage(1, getPolicyRuleBasic());
            }
            if (serviceId_ != null) {
                output.writeMessage(2, getServiceId());
            }
            for (int i = 0; i < deviceList_.size(); i++) {
                output.writeMessage(3, deviceList_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1)
                return size;
            size = 0;
            if (policyRuleBasic_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getPolicyRuleBasic());
            }
            if (serviceId_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getServiceId());
            }
            for (int i = 0; i < deviceList_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, deviceList_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof policy.Policy.PolicyRuleService)) {
                return super.equals(obj);
            }
            policy.Policy.PolicyRuleService other = (policy.Policy.PolicyRuleService) obj;
            if (hasPolicyRuleBasic() != other.hasPolicyRuleBasic())
                return false;
            if (hasPolicyRuleBasic()) {
                if (!getPolicyRuleBasic().equals(other.getPolicyRuleBasic()))
                    return false;
            }
            if (hasServiceId() != other.hasServiceId())
                return false;
            if (hasServiceId()) {
                if (!getServiceId().equals(other.getServiceId()))
                    return false;
            }
            if (!getDeviceListList().equals(other.getDeviceListList()))
                return false;
            if (!getUnknownFields().equals(other.getUnknownFields()))
                return false;
            return true;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasPolicyRuleBasic()) {
                hash = (37 * hash) + POLICYRULEBASIC_FIELD_NUMBER;
                hash = (53 * hash) + getPolicyRuleBasic().hashCode();
            }
            if (hasServiceId()) {
                hash = (37 * hash) + SERVICEID_FIELD_NUMBER;
                hash = (53 * hash) + getServiceId().hashCode();
            }
            if (getDeviceListCount() > 0) {
                hash = (37 * hash) + DEVICELIST_FIELD_NUMBER;
                hash = (53 * hash) + getDeviceListList().hashCode();
            }
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static policy.Policy.PolicyRuleService parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleService parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleService parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleService parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleService parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleService parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleService parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleService parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleService parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleService parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleService parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleService parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(policy.Policy.PolicyRuleService prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * Service-oriented policy rule
         * </pre>
         *
         * Protobuf type {@code policy.PolicyRuleService}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:policy.PolicyRuleService)
        policy.Policy.PolicyRuleServiceOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return policy.Policy.internal_static_policy_PolicyRuleService_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return policy.Policy.internal_static_policy_PolicyRuleService_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRuleService.class, policy.Policy.PolicyRuleService.Builder.class);
            }

            // Construct using policy.Policy.PolicyRuleService.newBuilder()
            private Builder() {
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                bitField0_ = 0;
                policyRuleBasic_ = null;
                if (policyRuleBasicBuilder_ != null) {
                    policyRuleBasicBuilder_.dispose();
                    policyRuleBasicBuilder_ = null;
                }
                serviceId_ = null;
                if (serviceIdBuilder_ != null) {
                    serviceIdBuilder_.dispose();
                    serviceIdBuilder_ = null;
                }
                if (deviceListBuilder_ == null) {
                    deviceList_ = java.util.Collections.emptyList();
                } else {
                    deviceList_ = null;
                    deviceListBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return policy.Policy.internal_static_policy_PolicyRuleService_descriptor;
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleService getDefaultInstanceForType() {
                return policy.Policy.PolicyRuleService.getDefaultInstance();
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleService build() {
                policy.Policy.PolicyRuleService result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleService buildPartial() {
                policy.Policy.PolicyRuleService result = new policy.Policy.PolicyRuleService(this);
                buildPartialRepeatedFields(result);
                if (bitField0_ != 0) {
                    buildPartial0(result);
                }
                onBuilt();
                return result;
            }

            private void buildPartialRepeatedFields(policy.Policy.PolicyRuleService result) {
                if (deviceListBuilder_ == null) {
                    if (((bitField0_ & 0x00000004) != 0)) {
                        deviceList_ = java.util.Collections.unmodifiableList(deviceList_);
                        bitField0_ = (bitField0_ & ~0x00000004);
                    }
                    result.deviceList_ = deviceList_;
                } else {
                    result.deviceList_ = deviceListBuilder_.build();
                }
            }

            private void buildPartial0(policy.Policy.PolicyRuleService result) {
                int from_bitField0_ = bitField0_;
                if (((from_bitField0_ & 0x00000001) != 0)) {
                    result.policyRuleBasic_ = policyRuleBasicBuilder_ == null ? policyRuleBasic_ : policyRuleBasicBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000002) != 0)) {
                    result.serviceId_ = serviceIdBuilder_ == null ? serviceId_ : serviceIdBuilder_.build();
                }
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof policy.Policy.PolicyRuleService) {
                    return mergeFrom((policy.Policy.PolicyRuleService) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(policy.Policy.PolicyRuleService other) {
                if (other == policy.Policy.PolicyRuleService.getDefaultInstance())
                    return this;
                if (other.hasPolicyRuleBasic()) {
                    mergePolicyRuleBasic(other.getPolicyRuleBasic());
                }
                if (other.hasServiceId()) {
                    mergeServiceId(other.getServiceId());
                }
                if (deviceListBuilder_ == null) {
                    if (!other.deviceList_.isEmpty()) {
                        if (deviceList_.isEmpty()) {
                            deviceList_ = other.deviceList_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                        } else {
                            ensureDeviceListIsMutable();
                            deviceList_.addAll(other.deviceList_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.deviceList_.isEmpty()) {
                        if (deviceListBuilder_.isEmpty()) {
                            deviceListBuilder_.dispose();
                            deviceListBuilder_ = null;
                            deviceList_ = other.deviceList_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                            deviceListBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getDeviceListFieldBuilder() : null;
                        } else {
                            deviceListBuilder_.addAllMessages(other.deviceList_);
                        }
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    input.readMessage(getPolicyRuleBasicFieldBuilder().getBuilder(), extensionRegistry);
                                    bitField0_ |= 0x00000001;
                                    break;
                                }
                            // case 10
                            case 18:
                                {
                                    input.readMessage(getServiceIdFieldBuilder().getBuilder(), extensionRegistry);
                                    bitField0_ |= 0x00000002;
                                    break;
                                }
                            // case 18
                            case 26:
                                {
                                    context.ContextOuterClass.DeviceId m = input.readMessage(context.ContextOuterClass.DeviceId.parser(), extensionRegistry);
                                    if (deviceListBuilder_ == null) {
                                        ensureDeviceListIsMutable();
                                        deviceList_.add(m);
                                    } else {
                                        deviceListBuilder_.addMessage(m);
                                    }
                                    break;
                                }
                            // case 26
                            default:
                                {
                                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                                        // was an endgroup tag
                                        done = true;
                                    }
                                    break;
                                }
                        }
                        // switch (tag)
                    }
                    // while (!done)
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.unwrapIOException();
                } finally {
                    onChanged();
                }
                // finally
                return this;
            }

            private int bitField0_;

            private policy.Policy.PolicyRuleBasic policyRuleBasic_;

            private com.google.protobuf.SingleFieldBuilderV3<policy.Policy.PolicyRuleBasic, policy.Policy.PolicyRuleBasic.Builder, policy.Policy.PolicyRuleBasicOrBuilder> policyRuleBasicBuilder_;

            /**
             * <pre>
             * Basic policy rule attributes
             * </pre>
             *
             * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
             * @return Whether the policyRuleBasic field is set.
             */
            public boolean hasPolicyRuleBasic() {
                return ((bitField0_ & 0x00000001) != 0);
            }

            /**
             * <pre>
             * Basic policy rule attributes
             * </pre>
             *
             * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
             * @return The policyRuleBasic.
             */
            public policy.Policy.PolicyRuleBasic getPolicyRuleBasic() {
                if (policyRuleBasicBuilder_ == null) {
                    return policyRuleBasic_ == null ? policy.Policy.PolicyRuleBasic.getDefaultInstance() : policyRuleBasic_;
                } else {
                    return policyRuleBasicBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Basic policy rule attributes
             * </pre>
             *
             * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
             */
            public Builder setPolicyRuleBasic(policy.Policy.PolicyRuleBasic value) {
                if (policyRuleBasicBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    policyRuleBasic_ = value;
                } else {
                    policyRuleBasicBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Basic policy rule attributes
             * </pre>
             *
             * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
             */
            public Builder setPolicyRuleBasic(policy.Policy.PolicyRuleBasic.Builder builderForValue) {
                if (policyRuleBasicBuilder_ == null) {
                    policyRuleBasic_ = builderForValue.build();
                } else {
                    policyRuleBasicBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Basic policy rule attributes
             * </pre>
             *
             * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
             */
            public Builder mergePolicyRuleBasic(policy.Policy.PolicyRuleBasic value) {
                if (policyRuleBasicBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) != 0) && policyRuleBasic_ != null && policyRuleBasic_ != policy.Policy.PolicyRuleBasic.getDefaultInstance()) {
                        getPolicyRuleBasicBuilder().mergeFrom(value);
                    } else {
                        policyRuleBasic_ = value;
                    }
                } else {
                    policyRuleBasicBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Basic policy rule attributes
             * </pre>
             *
             * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
             */
            public Builder clearPolicyRuleBasic() {
                bitField0_ = (bitField0_ & ~0x00000001);
                policyRuleBasic_ = null;
                if (policyRuleBasicBuilder_ != null) {
                    policyRuleBasicBuilder_.dispose();
                    policyRuleBasicBuilder_ = null;
                }
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Basic policy rule attributes
             * </pre>
             *
             * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
             */
            public policy.Policy.PolicyRuleBasic.Builder getPolicyRuleBasicBuilder() {
                bitField0_ |= 0x00000001;
                onChanged();
                return getPolicyRuleBasicFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Basic policy rule attributes
             * </pre>
             *
             * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
             */
            public policy.Policy.PolicyRuleBasicOrBuilder getPolicyRuleBasicOrBuilder() {
                if (policyRuleBasicBuilder_ != null) {
                    return policyRuleBasicBuilder_.getMessageOrBuilder();
                } else {
                    return policyRuleBasic_ == null ? policy.Policy.PolicyRuleBasic.getDefaultInstance() : policyRuleBasic_;
                }
            }

            /**
             * <pre>
             * Basic policy rule attributes
             * </pre>
             *
             * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<policy.Policy.PolicyRuleBasic, policy.Policy.PolicyRuleBasic.Builder, policy.Policy.PolicyRuleBasicOrBuilder> getPolicyRuleBasicFieldBuilder() {
                if (policyRuleBasicBuilder_ == null) {
                    policyRuleBasicBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<policy.Policy.PolicyRuleBasic, policy.Policy.PolicyRuleBasic.Builder, policy.Policy.PolicyRuleBasicOrBuilder>(getPolicyRuleBasic(), getParentForChildren(), isClean());
                    policyRuleBasic_ = null;
                }
                return policyRuleBasicBuilder_;
            }

            private context.ContextOuterClass.ServiceId serviceId_;

            private com.google.protobuf.SingleFieldBuilderV3<context.ContextOuterClass.ServiceId, context.ContextOuterClass.ServiceId.Builder, context.ContextOuterClass.ServiceIdOrBuilder> serviceIdBuilder_;

            /**
             * <pre>
             * Affected service and (some of) its device(s)
             * </pre>
             *
             * <code>.context.ServiceId serviceId = 2;</code>
             * @return Whether the serviceId field is set.
             */
            public boolean hasServiceId() {
                return ((bitField0_ & 0x00000002) != 0);
            }

            /**
             * <pre>
             * Affected service and (some of) its device(s)
             * </pre>
             *
             * <code>.context.ServiceId serviceId = 2;</code>
             * @return The serviceId.
             */
            public context.ContextOuterClass.ServiceId getServiceId() {
                if (serviceIdBuilder_ == null) {
                    return serviceId_ == null ? context.ContextOuterClass.ServiceId.getDefaultInstance() : serviceId_;
                } else {
                    return serviceIdBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Affected service and (some of) its device(s)
             * </pre>
             *
             * <code>.context.ServiceId serviceId = 2;</code>
             */
            public Builder setServiceId(context.ContextOuterClass.ServiceId value) {
                if (serviceIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    serviceId_ = value;
                } else {
                    serviceIdBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Affected service and (some of) its device(s)
             * </pre>
             *
             * <code>.context.ServiceId serviceId = 2;</code>
             */
            public Builder setServiceId(context.ContextOuterClass.ServiceId.Builder builderForValue) {
                if (serviceIdBuilder_ == null) {
                    serviceId_ = builderForValue.build();
                } else {
                    serviceIdBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Affected service and (some of) its device(s)
             * </pre>
             *
             * <code>.context.ServiceId serviceId = 2;</code>
             */
            public Builder mergeServiceId(context.ContextOuterClass.ServiceId value) {
                if (serviceIdBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) != 0) && serviceId_ != null && serviceId_ != context.ContextOuterClass.ServiceId.getDefaultInstance()) {
                        getServiceIdBuilder().mergeFrom(value);
                    } else {
                        serviceId_ = value;
                    }
                } else {
                    serviceIdBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000002;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Affected service and (some of) its device(s)
             * </pre>
             *
             * <code>.context.ServiceId serviceId = 2;</code>
             */
            public Builder clearServiceId() {
                bitField0_ = (bitField0_ & ~0x00000002);
                serviceId_ = null;
                if (serviceIdBuilder_ != null) {
                    serviceIdBuilder_.dispose();
                    serviceIdBuilder_ = null;
                }
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Affected service and (some of) its device(s)
             * </pre>
             *
             * <code>.context.ServiceId serviceId = 2;</code>
             */
            public context.ContextOuterClass.ServiceId.Builder getServiceIdBuilder() {
                bitField0_ |= 0x00000002;
                onChanged();
                return getServiceIdFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Affected service and (some of) its device(s)
             * </pre>
             *
             * <code>.context.ServiceId serviceId = 2;</code>
             */
            public context.ContextOuterClass.ServiceIdOrBuilder getServiceIdOrBuilder() {
                if (serviceIdBuilder_ != null) {
                    return serviceIdBuilder_.getMessageOrBuilder();
                } else {
                    return serviceId_ == null ? context.ContextOuterClass.ServiceId.getDefaultInstance() : serviceId_;
                }
            }

            /**
             * <pre>
             * Affected service and (some of) its device(s)
             * </pre>
             *
             * <code>.context.ServiceId serviceId = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<context.ContextOuterClass.ServiceId, context.ContextOuterClass.ServiceId.Builder, context.ContextOuterClass.ServiceIdOrBuilder> getServiceIdFieldBuilder() {
                if (serviceIdBuilder_ == null) {
                    serviceIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<context.ContextOuterClass.ServiceId, context.ContextOuterClass.ServiceId.Builder, context.ContextOuterClass.ServiceIdOrBuilder>(getServiceId(), getParentForChildren(), isClean());
                    serviceId_ = null;
                }
                return serviceIdBuilder_;
            }

            private java.util.List<context.ContextOuterClass.DeviceId> deviceList_ = java.util.Collections.emptyList();

            private void ensureDeviceListIsMutable() {
                if (!((bitField0_ & 0x00000004) != 0)) {
                    deviceList_ = new java.util.ArrayList<context.ContextOuterClass.DeviceId>(deviceList_);
                    bitField0_ |= 0x00000004;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<context.ContextOuterClass.DeviceId, context.ContextOuterClass.DeviceId.Builder, context.ContextOuterClass.DeviceIdOrBuilder> deviceListBuilder_;

            /**
             * <pre>
             * List of devices this service is traversing (not exhaustive)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 3;</code>
             */
            public java.util.List<context.ContextOuterClass.DeviceId> getDeviceListList() {
                if (deviceListBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(deviceList_);
                } else {
                    return deviceListBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * List of devices this service is traversing (not exhaustive)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 3;</code>
             */
            public int getDeviceListCount() {
                if (deviceListBuilder_ == null) {
                    return deviceList_.size();
                } else {
                    return deviceListBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * List of devices this service is traversing (not exhaustive)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 3;</code>
             */
            public context.ContextOuterClass.DeviceId getDeviceList(int index) {
                if (deviceListBuilder_ == null) {
                    return deviceList_.get(index);
                } else {
                    return deviceListBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * List of devices this service is traversing (not exhaustive)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 3;</code>
             */
            public Builder setDeviceList(int index, context.ContextOuterClass.DeviceId value) {
                if (deviceListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureDeviceListIsMutable();
                    deviceList_.set(index, value);
                    onChanged();
                } else {
                    deviceListBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * List of devices this service is traversing (not exhaustive)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 3;</code>
             */
            public Builder setDeviceList(int index, context.ContextOuterClass.DeviceId.Builder builderForValue) {
                if (deviceListBuilder_ == null) {
                    ensureDeviceListIsMutable();
                    deviceList_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    deviceListBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * List of devices this service is traversing (not exhaustive)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 3;</code>
             */
            public Builder addDeviceList(context.ContextOuterClass.DeviceId value) {
                if (deviceListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureDeviceListIsMutable();
                    deviceList_.add(value);
                    onChanged();
                } else {
                    deviceListBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * List of devices this service is traversing (not exhaustive)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 3;</code>
             */
            public Builder addDeviceList(int index, context.ContextOuterClass.DeviceId value) {
                if (deviceListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureDeviceListIsMutable();
                    deviceList_.add(index, value);
                    onChanged();
                } else {
                    deviceListBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * List of devices this service is traversing (not exhaustive)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 3;</code>
             */
            public Builder addDeviceList(context.ContextOuterClass.DeviceId.Builder builderForValue) {
                if (deviceListBuilder_ == null) {
                    ensureDeviceListIsMutable();
                    deviceList_.add(builderForValue.build());
                    onChanged();
                } else {
                    deviceListBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * List of devices this service is traversing (not exhaustive)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 3;</code>
             */
            public Builder addDeviceList(int index, context.ContextOuterClass.DeviceId.Builder builderForValue) {
                if (deviceListBuilder_ == null) {
                    ensureDeviceListIsMutable();
                    deviceList_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    deviceListBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * List of devices this service is traversing (not exhaustive)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 3;</code>
             */
            public Builder addAllDeviceList(java.lang.Iterable<? extends context.ContextOuterClass.DeviceId> values) {
                if (deviceListBuilder_ == null) {
                    ensureDeviceListIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, deviceList_);
                    onChanged();
                } else {
                    deviceListBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * List of devices this service is traversing (not exhaustive)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 3;</code>
             */
            public Builder clearDeviceList() {
                if (deviceListBuilder_ == null) {
                    deviceList_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                    onChanged();
                } else {
                    deviceListBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * List of devices this service is traversing (not exhaustive)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 3;</code>
             */
            public Builder removeDeviceList(int index) {
                if (deviceListBuilder_ == null) {
                    ensureDeviceListIsMutable();
                    deviceList_.remove(index);
                    onChanged();
                } else {
                    deviceListBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * List of devices this service is traversing (not exhaustive)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 3;</code>
             */
            public context.ContextOuterClass.DeviceId.Builder getDeviceListBuilder(int index) {
                return getDeviceListFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * List of devices this service is traversing (not exhaustive)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 3;</code>
             */
            public context.ContextOuterClass.DeviceIdOrBuilder getDeviceListOrBuilder(int index) {
                if (deviceListBuilder_ == null) {
                    return deviceList_.get(index);
                } else {
                    return deviceListBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * List of devices this service is traversing (not exhaustive)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 3;</code>
             */
            public java.util.List<? extends context.ContextOuterClass.DeviceIdOrBuilder> getDeviceListOrBuilderList() {
                if (deviceListBuilder_ != null) {
                    return deviceListBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(deviceList_);
                }
            }

            /**
             * <pre>
             * List of devices this service is traversing (not exhaustive)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 3;</code>
             */
            public context.ContextOuterClass.DeviceId.Builder addDeviceListBuilder() {
                return getDeviceListFieldBuilder().addBuilder(context.ContextOuterClass.DeviceId.getDefaultInstance());
            }

            /**
             * <pre>
             * List of devices this service is traversing (not exhaustive)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 3;</code>
             */
            public context.ContextOuterClass.DeviceId.Builder addDeviceListBuilder(int index) {
                return getDeviceListFieldBuilder().addBuilder(index, context.ContextOuterClass.DeviceId.getDefaultInstance());
            }

            /**
             * <pre>
             * List of devices this service is traversing (not exhaustive)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 3;</code>
             */
            public java.util.List<context.ContextOuterClass.DeviceId.Builder> getDeviceListBuilderList() {
                return getDeviceListFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<context.ContextOuterClass.DeviceId, context.ContextOuterClass.DeviceId.Builder, context.ContextOuterClass.DeviceIdOrBuilder> getDeviceListFieldBuilder() {
                if (deviceListBuilder_ == null) {
                    deviceListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<context.ContextOuterClass.DeviceId, context.ContextOuterClass.DeviceId.Builder, context.ContextOuterClass.DeviceIdOrBuilder>(deviceList_, ((bitField0_ & 0x00000004) != 0), getParentForChildren(), isClean());
                    deviceList_ = null;
                }
                return deviceListBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }
            // @@protoc_insertion_point(builder_scope:policy.PolicyRuleService)
        }

        // @@protoc_insertion_point(class_scope:policy.PolicyRuleService)
        private static final policy.Policy.PolicyRuleService DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new policy.Policy.PolicyRuleService();
        }

        public static policy.Policy.PolicyRuleService getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<PolicyRuleService> PARSER = new com.google.protobuf.AbstractParser<PolicyRuleService>() {

            @java.lang.Override
            public PolicyRuleService parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                Builder builder = newBuilder();
                try {
                    builder.mergeFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(builder.buildPartial());
                } catch (com.google.protobuf.UninitializedMessageException e) {
                    throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(builder.buildPartial());
                }
                return builder.buildPartial();
            }
        };

        public static com.google.protobuf.Parser<PolicyRuleService> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PolicyRuleService> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public policy.Policy.PolicyRuleService getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface PolicyRuleDeviceOrBuilder extends // @@protoc_insertion_point(interface_extends:policy.PolicyRuleDevice)
    com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Basic policy rule attributes
         * </pre>
         *
         * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
         * @return Whether the policyRuleBasic field is set.
         */
        boolean hasPolicyRuleBasic();

        /**
         * <pre>
         * Basic policy rule attributes
         * </pre>
         *
         * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
         * @return The policyRuleBasic.
         */
        policy.Policy.PolicyRuleBasic getPolicyRuleBasic();

        /**
         * <pre>
         * Basic policy rule attributes
         * </pre>
         *
         * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
         */
        policy.Policy.PolicyRuleBasicOrBuilder getPolicyRuleBasicOrBuilder();

        /**
         * <pre>
         * Affected device(s)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 2;</code>
         */
        java.util.List<context.ContextOuterClass.DeviceId> getDeviceListList();

        /**
         * <pre>
         * Affected device(s)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 2;</code>
         */
        context.ContextOuterClass.DeviceId getDeviceList(int index);

        /**
         * <pre>
         * Affected device(s)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 2;</code>
         */
        int getDeviceListCount();

        /**
         * <pre>
         * Affected device(s)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 2;</code>
         */
        java.util.List<? extends context.ContextOuterClass.DeviceIdOrBuilder> getDeviceListOrBuilderList();

        /**
         * <pre>
         * Affected device(s)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 2;</code>
         */
        context.ContextOuterClass.DeviceIdOrBuilder getDeviceListOrBuilder(int index);
    }

    /**
     * <pre>
     * Device-oriented policy rule
     * </pre>
     *
     * Protobuf type {@code policy.PolicyRuleDevice}
     */
    public static final class PolicyRuleDevice extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:policy.PolicyRuleDevice)
    PolicyRuleDeviceOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use PolicyRuleDevice.newBuilder() to construct.
        private PolicyRuleDevice(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private PolicyRuleDevice() {
            deviceList_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({ "unused" })
        protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
            return new PolicyRuleDevice();
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return policy.Policy.internal_static_policy_PolicyRuleDevice_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return policy.Policy.internal_static_policy_PolicyRuleDevice_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRuleDevice.class, policy.Policy.PolicyRuleDevice.Builder.class);
        }

        public static final int POLICYRULEBASIC_FIELD_NUMBER = 1;

        private policy.Policy.PolicyRuleBasic policyRuleBasic_;

        /**
         * <pre>
         * Basic policy rule attributes
         * </pre>
         *
         * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
         * @return Whether the policyRuleBasic field is set.
         */
        @java.lang.Override
        public boolean hasPolicyRuleBasic() {
            return policyRuleBasic_ != null;
        }

        /**
         * <pre>
         * Basic policy rule attributes
         * </pre>
         *
         * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
         * @return The policyRuleBasic.
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleBasic getPolicyRuleBasic() {
            return policyRuleBasic_ == null ? policy.Policy.PolicyRuleBasic.getDefaultInstance() : policyRuleBasic_;
        }

        /**
         * <pre>
         * Basic policy rule attributes
         * </pre>
         *
         * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleBasicOrBuilder getPolicyRuleBasicOrBuilder() {
            return policyRuleBasic_ == null ? policy.Policy.PolicyRuleBasic.getDefaultInstance() : policyRuleBasic_;
        }

        public static final int DEVICELIST_FIELD_NUMBER = 2;

        @SuppressWarnings("serial")
        private java.util.List<context.ContextOuterClass.DeviceId> deviceList_;

        /**
         * <pre>
         * Affected device(s)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 2;</code>
         */
        @java.lang.Override
        public java.util.List<context.ContextOuterClass.DeviceId> getDeviceListList() {
            return deviceList_;
        }

        /**
         * <pre>
         * Affected device(s)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 2;</code>
         */
        @java.lang.Override
        public java.util.List<? extends context.ContextOuterClass.DeviceIdOrBuilder> getDeviceListOrBuilderList() {
            return deviceList_;
        }

        /**
         * <pre>
         * Affected device(s)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 2;</code>
         */
        @java.lang.Override
        public int getDeviceListCount() {
            return deviceList_.size();
        }

        /**
         * <pre>
         * Affected device(s)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 2;</code>
         */
        @java.lang.Override
        public context.ContextOuterClass.DeviceId getDeviceList(int index) {
            return deviceList_.get(index);
        }

        /**
         * <pre>
         * Affected device(s)
         * </pre>
         *
         * <code>repeated .context.DeviceId deviceList = 2;</code>
         */
        @java.lang.Override
        public context.ContextOuterClass.DeviceIdOrBuilder getDeviceListOrBuilder(int index) {
            return deviceList_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            if (policyRuleBasic_ != null) {
                output.writeMessage(1, getPolicyRuleBasic());
            }
            for (int i = 0; i < deviceList_.size(); i++) {
                output.writeMessage(2, deviceList_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1)
                return size;
            size = 0;
            if (policyRuleBasic_ != null) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, getPolicyRuleBasic());
            }
            for (int i = 0; i < deviceList_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, deviceList_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof policy.Policy.PolicyRuleDevice)) {
                return super.equals(obj);
            }
            policy.Policy.PolicyRuleDevice other = (policy.Policy.PolicyRuleDevice) obj;
            if (hasPolicyRuleBasic() != other.hasPolicyRuleBasic())
                return false;
            if (hasPolicyRuleBasic()) {
                if (!getPolicyRuleBasic().equals(other.getPolicyRuleBasic()))
                    return false;
            }
            if (!getDeviceListList().equals(other.getDeviceListList()))
                return false;
            if (!getUnknownFields().equals(other.getUnknownFields()))
                return false;
            return true;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasPolicyRuleBasic()) {
                hash = (37 * hash) + POLICYRULEBASIC_FIELD_NUMBER;
                hash = (53 * hash) + getPolicyRuleBasic().hashCode();
            }
            if (getDeviceListCount() > 0) {
                hash = (37 * hash) + DEVICELIST_FIELD_NUMBER;
                hash = (53 * hash) + getDeviceListList().hashCode();
            }
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static policy.Policy.PolicyRuleDevice parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleDevice parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleDevice parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleDevice parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleDevice parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleDevice parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleDevice parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleDevice parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleDevice parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleDevice parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleDevice parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleDevice parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(policy.Policy.PolicyRuleDevice prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * Device-oriented policy rule
         * </pre>
         *
         * Protobuf type {@code policy.PolicyRuleDevice}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:policy.PolicyRuleDevice)
        policy.Policy.PolicyRuleDeviceOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return policy.Policy.internal_static_policy_PolicyRuleDevice_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return policy.Policy.internal_static_policy_PolicyRuleDevice_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRuleDevice.class, policy.Policy.PolicyRuleDevice.Builder.class);
            }

            // Construct using policy.Policy.PolicyRuleDevice.newBuilder()
            private Builder() {
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                bitField0_ = 0;
                policyRuleBasic_ = null;
                if (policyRuleBasicBuilder_ != null) {
                    policyRuleBasicBuilder_.dispose();
                    policyRuleBasicBuilder_ = null;
                }
                if (deviceListBuilder_ == null) {
                    deviceList_ = java.util.Collections.emptyList();
                } else {
                    deviceList_ = null;
                    deviceListBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return policy.Policy.internal_static_policy_PolicyRuleDevice_descriptor;
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleDevice getDefaultInstanceForType() {
                return policy.Policy.PolicyRuleDevice.getDefaultInstance();
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleDevice build() {
                policy.Policy.PolicyRuleDevice result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleDevice buildPartial() {
                policy.Policy.PolicyRuleDevice result = new policy.Policy.PolicyRuleDevice(this);
                buildPartialRepeatedFields(result);
                if (bitField0_ != 0) {
                    buildPartial0(result);
                }
                onBuilt();
                return result;
            }

            private void buildPartialRepeatedFields(policy.Policy.PolicyRuleDevice result) {
                if (deviceListBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) != 0)) {
                        deviceList_ = java.util.Collections.unmodifiableList(deviceList_);
                        bitField0_ = (bitField0_ & ~0x00000002);
                    }
                    result.deviceList_ = deviceList_;
                } else {
                    result.deviceList_ = deviceListBuilder_.build();
                }
            }

            private void buildPartial0(policy.Policy.PolicyRuleDevice result) {
                int from_bitField0_ = bitField0_;
                if (((from_bitField0_ & 0x00000001) != 0)) {
                    result.policyRuleBasic_ = policyRuleBasicBuilder_ == null ? policyRuleBasic_ : policyRuleBasicBuilder_.build();
                }
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof policy.Policy.PolicyRuleDevice) {
                    return mergeFrom((policy.Policy.PolicyRuleDevice) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(policy.Policy.PolicyRuleDevice other) {
                if (other == policy.Policy.PolicyRuleDevice.getDefaultInstance())
                    return this;
                if (other.hasPolicyRuleBasic()) {
                    mergePolicyRuleBasic(other.getPolicyRuleBasic());
                }
                if (deviceListBuilder_ == null) {
                    if (!other.deviceList_.isEmpty()) {
                        if (deviceList_.isEmpty()) {
                            deviceList_ = other.deviceList_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                        } else {
                            ensureDeviceListIsMutable();
                            deviceList_.addAll(other.deviceList_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.deviceList_.isEmpty()) {
                        if (deviceListBuilder_.isEmpty()) {
                            deviceListBuilder_.dispose();
                            deviceListBuilder_ = null;
                            deviceList_ = other.deviceList_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                            deviceListBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getDeviceListFieldBuilder() : null;
                        } else {
                            deviceListBuilder_.addAllMessages(other.deviceList_);
                        }
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    input.readMessage(getPolicyRuleBasicFieldBuilder().getBuilder(), extensionRegistry);
                                    bitField0_ |= 0x00000001;
                                    break;
                                }
                            // case 10
                            case 18:
                                {
                                    context.ContextOuterClass.DeviceId m = input.readMessage(context.ContextOuterClass.DeviceId.parser(), extensionRegistry);
                                    if (deviceListBuilder_ == null) {
                                        ensureDeviceListIsMutable();
                                        deviceList_.add(m);
                                    } else {
                                        deviceListBuilder_.addMessage(m);
                                    }
                                    break;
                                }
                            // case 18
                            default:
                                {
                                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                                        // was an endgroup tag
                                        done = true;
                                    }
                                    break;
                                }
                        }
                        // switch (tag)
                    }
                    // while (!done)
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.unwrapIOException();
                } finally {
                    onChanged();
                }
                // finally
                return this;
            }

            private int bitField0_;

            private policy.Policy.PolicyRuleBasic policyRuleBasic_;

            private com.google.protobuf.SingleFieldBuilderV3<policy.Policy.PolicyRuleBasic, policy.Policy.PolicyRuleBasic.Builder, policy.Policy.PolicyRuleBasicOrBuilder> policyRuleBasicBuilder_;

            /**
             * <pre>
             * Basic policy rule attributes
             * </pre>
             *
             * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
             * @return Whether the policyRuleBasic field is set.
             */
            public boolean hasPolicyRuleBasic() {
                return ((bitField0_ & 0x00000001) != 0);
            }

            /**
             * <pre>
             * Basic policy rule attributes
             * </pre>
             *
             * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
             * @return The policyRuleBasic.
             */
            public policy.Policy.PolicyRuleBasic getPolicyRuleBasic() {
                if (policyRuleBasicBuilder_ == null) {
                    return policyRuleBasic_ == null ? policy.Policy.PolicyRuleBasic.getDefaultInstance() : policyRuleBasic_;
                } else {
                    return policyRuleBasicBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Basic policy rule attributes
             * </pre>
             *
             * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
             */
            public Builder setPolicyRuleBasic(policy.Policy.PolicyRuleBasic value) {
                if (policyRuleBasicBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    policyRuleBasic_ = value;
                } else {
                    policyRuleBasicBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Basic policy rule attributes
             * </pre>
             *
             * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
             */
            public Builder setPolicyRuleBasic(policy.Policy.PolicyRuleBasic.Builder builderForValue) {
                if (policyRuleBasicBuilder_ == null) {
                    policyRuleBasic_ = builderForValue.build();
                } else {
                    policyRuleBasicBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Basic policy rule attributes
             * </pre>
             *
             * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
             */
            public Builder mergePolicyRuleBasic(policy.Policy.PolicyRuleBasic value) {
                if (policyRuleBasicBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) != 0) && policyRuleBasic_ != null && policyRuleBasic_ != policy.Policy.PolicyRuleBasic.getDefaultInstance()) {
                        getPolicyRuleBasicBuilder().mergeFrom(value);
                    } else {
                        policyRuleBasic_ = value;
                    }
                } else {
                    policyRuleBasicBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000001;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Basic policy rule attributes
             * </pre>
             *
             * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
             */
            public Builder clearPolicyRuleBasic() {
                bitField0_ = (bitField0_ & ~0x00000001);
                policyRuleBasic_ = null;
                if (policyRuleBasicBuilder_ != null) {
                    policyRuleBasicBuilder_.dispose();
                    policyRuleBasicBuilder_ = null;
                }
                onChanged();
                return this;
            }

            /**
             * <pre>
             * Basic policy rule attributes
             * </pre>
             *
             * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
             */
            public policy.Policy.PolicyRuleBasic.Builder getPolicyRuleBasicBuilder() {
                bitField0_ |= 0x00000001;
                onChanged();
                return getPolicyRuleBasicFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Basic policy rule attributes
             * </pre>
             *
             * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
             */
            public policy.Policy.PolicyRuleBasicOrBuilder getPolicyRuleBasicOrBuilder() {
                if (policyRuleBasicBuilder_ != null) {
                    return policyRuleBasicBuilder_.getMessageOrBuilder();
                } else {
                    return policyRuleBasic_ == null ? policy.Policy.PolicyRuleBasic.getDefaultInstance() : policyRuleBasic_;
                }
            }

            /**
             * <pre>
             * Basic policy rule attributes
             * </pre>
             *
             * <code>.policy.PolicyRuleBasic policyRuleBasic = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<policy.Policy.PolicyRuleBasic, policy.Policy.PolicyRuleBasic.Builder, policy.Policy.PolicyRuleBasicOrBuilder> getPolicyRuleBasicFieldBuilder() {
                if (policyRuleBasicBuilder_ == null) {
                    policyRuleBasicBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<policy.Policy.PolicyRuleBasic, policy.Policy.PolicyRuleBasic.Builder, policy.Policy.PolicyRuleBasicOrBuilder>(getPolicyRuleBasic(), getParentForChildren(), isClean());
                    policyRuleBasic_ = null;
                }
                return policyRuleBasicBuilder_;
            }

            private java.util.List<context.ContextOuterClass.DeviceId> deviceList_ = java.util.Collections.emptyList();

            private void ensureDeviceListIsMutable() {
                if (!((bitField0_ & 0x00000002) != 0)) {
                    deviceList_ = new java.util.ArrayList<context.ContextOuterClass.DeviceId>(deviceList_);
                    bitField0_ |= 0x00000002;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<context.ContextOuterClass.DeviceId, context.ContextOuterClass.DeviceId.Builder, context.ContextOuterClass.DeviceIdOrBuilder> deviceListBuilder_;

            /**
             * <pre>
             * Affected device(s)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 2;</code>
             */
            public java.util.List<context.ContextOuterClass.DeviceId> getDeviceListList() {
                if (deviceListBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(deviceList_);
                } else {
                    return deviceListBuilder_.getMessageList();
                }
            }

            /**
             * <pre>
             * Affected device(s)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 2;</code>
             */
            public int getDeviceListCount() {
                if (deviceListBuilder_ == null) {
                    return deviceList_.size();
                } else {
                    return deviceListBuilder_.getCount();
                }
            }

            /**
             * <pre>
             * Affected device(s)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 2;</code>
             */
            public context.ContextOuterClass.DeviceId getDeviceList(int index) {
                if (deviceListBuilder_ == null) {
                    return deviceList_.get(index);
                } else {
                    return deviceListBuilder_.getMessage(index);
                }
            }

            /**
             * <pre>
             * Affected device(s)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 2;</code>
             */
            public Builder setDeviceList(int index, context.ContextOuterClass.DeviceId value) {
                if (deviceListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureDeviceListIsMutable();
                    deviceList_.set(index, value);
                    onChanged();
                } else {
                    deviceListBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * Affected device(s)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 2;</code>
             */
            public Builder setDeviceList(int index, context.ContextOuterClass.DeviceId.Builder builderForValue) {
                if (deviceListBuilder_ == null) {
                    ensureDeviceListIsMutable();
                    deviceList_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    deviceListBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * Affected device(s)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 2;</code>
             */
            public Builder addDeviceList(context.ContextOuterClass.DeviceId value) {
                if (deviceListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureDeviceListIsMutable();
                    deviceList_.add(value);
                    onChanged();
                } else {
                    deviceListBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <pre>
             * Affected device(s)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 2;</code>
             */
            public Builder addDeviceList(int index, context.ContextOuterClass.DeviceId value) {
                if (deviceListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureDeviceListIsMutable();
                    deviceList_.add(index, value);
                    onChanged();
                } else {
                    deviceListBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <pre>
             * Affected device(s)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 2;</code>
             */
            public Builder addDeviceList(context.ContextOuterClass.DeviceId.Builder builderForValue) {
                if (deviceListBuilder_ == null) {
                    ensureDeviceListIsMutable();
                    deviceList_.add(builderForValue.build());
                    onChanged();
                } else {
                    deviceListBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * Affected device(s)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 2;</code>
             */
            public Builder addDeviceList(int index, context.ContextOuterClass.DeviceId.Builder builderForValue) {
                if (deviceListBuilder_ == null) {
                    ensureDeviceListIsMutable();
                    deviceList_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    deviceListBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <pre>
             * Affected device(s)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 2;</code>
             */
            public Builder addAllDeviceList(java.lang.Iterable<? extends context.ContextOuterClass.DeviceId> values) {
                if (deviceListBuilder_ == null) {
                    ensureDeviceListIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, deviceList_);
                    onChanged();
                } else {
                    deviceListBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <pre>
             * Affected device(s)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 2;</code>
             */
            public Builder clearDeviceList() {
                if (deviceListBuilder_ == null) {
                    deviceList_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                    onChanged();
                } else {
                    deviceListBuilder_.clear();
                }
                return this;
            }

            /**
             * <pre>
             * Affected device(s)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 2;</code>
             */
            public Builder removeDeviceList(int index) {
                if (deviceListBuilder_ == null) {
                    ensureDeviceListIsMutable();
                    deviceList_.remove(index);
                    onChanged();
                } else {
                    deviceListBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <pre>
             * Affected device(s)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 2;</code>
             */
            public context.ContextOuterClass.DeviceId.Builder getDeviceListBuilder(int index) {
                return getDeviceListFieldBuilder().getBuilder(index);
            }

            /**
             * <pre>
             * Affected device(s)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 2;</code>
             */
            public context.ContextOuterClass.DeviceIdOrBuilder getDeviceListOrBuilder(int index) {
                if (deviceListBuilder_ == null) {
                    return deviceList_.get(index);
                } else {
                    return deviceListBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <pre>
             * Affected device(s)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 2;</code>
             */
            public java.util.List<? extends context.ContextOuterClass.DeviceIdOrBuilder> getDeviceListOrBuilderList() {
                if (deviceListBuilder_ != null) {
                    return deviceListBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(deviceList_);
                }
            }

            /**
             * <pre>
             * Affected device(s)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 2;</code>
             */
            public context.ContextOuterClass.DeviceId.Builder addDeviceListBuilder() {
                return getDeviceListFieldBuilder().addBuilder(context.ContextOuterClass.DeviceId.getDefaultInstance());
            }

            /**
             * <pre>
             * Affected device(s)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 2;</code>
             */
            public context.ContextOuterClass.DeviceId.Builder addDeviceListBuilder(int index) {
                return getDeviceListFieldBuilder().addBuilder(index, context.ContextOuterClass.DeviceId.getDefaultInstance());
            }

            /**
             * <pre>
             * Affected device(s)
             * </pre>
             *
             * <code>repeated .context.DeviceId deviceList = 2;</code>
             */
            public java.util.List<context.ContextOuterClass.DeviceId.Builder> getDeviceListBuilderList() {
                return getDeviceListFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<context.ContextOuterClass.DeviceId, context.ContextOuterClass.DeviceId.Builder, context.ContextOuterClass.DeviceIdOrBuilder> getDeviceListFieldBuilder() {
                if (deviceListBuilder_ == null) {
                    deviceListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<context.ContextOuterClass.DeviceId, context.ContextOuterClass.DeviceId.Builder, context.ContextOuterClass.DeviceIdOrBuilder>(deviceList_, ((bitField0_ & 0x00000002) != 0), getParentForChildren(), isClean());
                    deviceList_ = null;
                }
                return deviceListBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }
            // @@protoc_insertion_point(builder_scope:policy.PolicyRuleDevice)
        }

        // @@protoc_insertion_point(class_scope:policy.PolicyRuleDevice)
        private static final policy.Policy.PolicyRuleDevice DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new policy.Policy.PolicyRuleDevice();
        }

        public static policy.Policy.PolicyRuleDevice getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<PolicyRuleDevice> PARSER = new com.google.protobuf.AbstractParser<PolicyRuleDevice>() {

            @java.lang.Override
            public PolicyRuleDevice parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                Builder builder = newBuilder();
                try {
                    builder.mergeFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(builder.buildPartial());
                } catch (com.google.protobuf.UninitializedMessageException e) {
                    throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(builder.buildPartial());
                }
                return builder.buildPartial();
            }
        };

        public static com.google.protobuf.Parser<PolicyRuleDevice> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PolicyRuleDevice> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public policy.Policy.PolicyRuleDevice getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface PolicyRuleOrBuilder extends // @@protoc_insertion_point(interface_extends:policy.PolicyRule)
    com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.policy.PolicyRuleService service = 1;</code>
         * @return Whether the service field is set.
         */
        boolean hasService();

        /**
         * <code>.policy.PolicyRuleService service = 1;</code>
         * @return The service.
         */
        policy.Policy.PolicyRuleService getService();

        /**
         * <code>.policy.PolicyRuleService service = 1;</code>
         */
        policy.Policy.PolicyRuleServiceOrBuilder getServiceOrBuilder();

        /**
         * <code>.policy.PolicyRuleDevice device = 2;</code>
         * @return Whether the device field is set.
         */
        boolean hasDevice();

        /**
         * <code>.policy.PolicyRuleDevice device = 2;</code>
         * @return The device.
         */
        policy.Policy.PolicyRuleDevice getDevice();

        /**
         * <code>.policy.PolicyRuleDevice device = 2;</code>
         */
        policy.Policy.PolicyRuleDeviceOrBuilder getDeviceOrBuilder();

        policy.Policy.PolicyRule.PolicyRuleCase getPolicyRuleCase();
    }

    /**
     * <pre>
     * Wrapper policy rule object
     * </pre>
     *
     * Protobuf type {@code policy.PolicyRule}
     */
    public static final class PolicyRule extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:policy.PolicyRule)
    PolicyRuleOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use PolicyRule.newBuilder() to construct.
        private PolicyRule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private PolicyRule() {
        }

        @java.lang.Override
        @SuppressWarnings({ "unused" })
        protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
            return new PolicyRule();
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return policy.Policy.internal_static_policy_PolicyRule_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return policy.Policy.internal_static_policy_PolicyRule_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRule.class, policy.Policy.PolicyRule.Builder.class);
        }

        private int policyRuleCase_ = 0;

        @SuppressWarnings("serial")
        private java.lang.Object policyRule_;

        public enum PolicyRuleCase implements com.google.protobuf.Internal.EnumLite, com.google.protobuf.AbstractMessage.InternalOneOfEnum {

            SERVICE(1), DEVICE(2), POLICYRULE_NOT_SET(0);

            private final int value;

            private PolicyRuleCase(int value) {
                this.value = value;
            }

            /**
             * @param value The number of the enum to look for.
             * @return The enum associated with the given number.
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static PolicyRuleCase valueOf(int value) {
                return forNumber(value);
            }

            public static PolicyRuleCase forNumber(int value) {
                switch(value) {
                    case 1:
                        return SERVICE;
                    case 2:
                        return DEVICE;
                    case 0:
                        return POLICYRULE_NOT_SET;
                    default:
                        return null;
                }
            }

            public int getNumber() {
                return this.value;
            }
        }

        public PolicyRuleCase getPolicyRuleCase() {
            return PolicyRuleCase.forNumber(policyRuleCase_);
        }

        public static final int SERVICE_FIELD_NUMBER = 1;

        /**
         * <code>.policy.PolicyRuleService service = 1;</code>
         * @return Whether the service field is set.
         */
        @java.lang.Override
        public boolean hasService() {
            return policyRuleCase_ == 1;
        }

        /**
         * <code>.policy.PolicyRuleService service = 1;</code>
         * @return The service.
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleService getService() {
            if (policyRuleCase_ == 1) {
                return (policy.Policy.PolicyRuleService) policyRule_;
            }
            return policy.Policy.PolicyRuleService.getDefaultInstance();
        }

        /**
         * <code>.policy.PolicyRuleService service = 1;</code>
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleServiceOrBuilder getServiceOrBuilder() {
            if (policyRuleCase_ == 1) {
                return (policy.Policy.PolicyRuleService) policyRule_;
            }
            return policy.Policy.PolicyRuleService.getDefaultInstance();
        }

        public static final int DEVICE_FIELD_NUMBER = 2;

        /**
         * <code>.policy.PolicyRuleDevice device = 2;</code>
         * @return Whether the device field is set.
         */
        @java.lang.Override
        public boolean hasDevice() {
            return policyRuleCase_ == 2;
        }

        /**
         * <code>.policy.PolicyRuleDevice device = 2;</code>
         * @return The device.
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleDevice getDevice() {
            if (policyRuleCase_ == 2) {
                return (policy.Policy.PolicyRuleDevice) policyRule_;
            }
            return policy.Policy.PolicyRuleDevice.getDefaultInstance();
        }

        /**
         * <code>.policy.PolicyRuleDevice device = 2;</code>
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleDeviceOrBuilder getDeviceOrBuilder() {
            if (policyRuleCase_ == 2) {
                return (policy.Policy.PolicyRuleDevice) policyRule_;
            }
            return policy.Policy.PolicyRuleDevice.getDefaultInstance();
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            if (policyRuleCase_ == 1) {
                output.writeMessage(1, (policy.Policy.PolicyRuleService) policyRule_);
            }
            if (policyRuleCase_ == 2) {
                output.writeMessage(2, (policy.Policy.PolicyRuleDevice) policyRule_);
            }
            getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1)
                return size;
            size = 0;
            if (policyRuleCase_ == 1) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, (policy.Policy.PolicyRuleService) policyRule_);
            }
            if (policyRuleCase_ == 2) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, (policy.Policy.PolicyRuleDevice) policyRule_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof policy.Policy.PolicyRule)) {
                return super.equals(obj);
            }
            policy.Policy.PolicyRule other = (policy.Policy.PolicyRule) obj;
            if (!getPolicyRuleCase().equals(other.getPolicyRuleCase()))
                return false;
            switch(policyRuleCase_) {
                case 1:
                    if (!getService().equals(other.getService()))
                        return false;
                    break;
                case 2:
                    if (!getDevice().equals(other.getDevice()))
                        return false;
                    break;
                case 0:
                default:
            }
            if (!getUnknownFields().equals(other.getUnknownFields()))
                return false;
            return true;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            switch(policyRuleCase_) {
                case 1:
                    hash = (37 * hash) + SERVICE_FIELD_NUMBER;
                    hash = (53 * hash) + getService().hashCode();
                    break;
                case 2:
                    hash = (37 * hash) + DEVICE_FIELD_NUMBER;
                    hash = (53 * hash) + getDevice().hashCode();
                    break;
                case 0:
                default:
            }
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static policy.Policy.PolicyRule parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRule parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRule parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRule parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRule parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRule parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRule parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRule parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRule parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRule parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRule parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRule parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(policy.Policy.PolicyRule prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * Wrapper policy rule object
         * </pre>
         *
         * Protobuf type {@code policy.PolicyRule}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:policy.PolicyRule)
        policy.Policy.PolicyRuleOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return policy.Policy.internal_static_policy_PolicyRule_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return policy.Policy.internal_static_policy_PolicyRule_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRule.class, policy.Policy.PolicyRule.Builder.class);
            }

            // Construct using policy.Policy.PolicyRule.newBuilder()
            private Builder() {
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                bitField0_ = 0;
                if (serviceBuilder_ != null) {
                    serviceBuilder_.clear();
                }
                if (deviceBuilder_ != null) {
                    deviceBuilder_.clear();
                }
                policyRuleCase_ = 0;
                policyRule_ = null;
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return policy.Policy.internal_static_policy_PolicyRule_descriptor;
            }

            @java.lang.Override
            public policy.Policy.PolicyRule getDefaultInstanceForType() {
                return policy.Policy.PolicyRule.getDefaultInstance();
            }

            @java.lang.Override
            public policy.Policy.PolicyRule build() {
                policy.Policy.PolicyRule result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public policy.Policy.PolicyRule buildPartial() {
                policy.Policy.PolicyRule result = new policy.Policy.PolicyRule(this);
                if (bitField0_ != 0) {
                    buildPartial0(result);
                }
                buildPartialOneofs(result);
                onBuilt();
                return result;
            }

            private void buildPartial0(policy.Policy.PolicyRule result) {
                int from_bitField0_ = bitField0_;
            }

            private void buildPartialOneofs(policy.Policy.PolicyRule result) {
                result.policyRuleCase_ = policyRuleCase_;
                result.policyRule_ = this.policyRule_;
                if (policyRuleCase_ == 1 && serviceBuilder_ != null) {
                    result.policyRule_ = serviceBuilder_.build();
                }
                if (policyRuleCase_ == 2 && deviceBuilder_ != null) {
                    result.policyRule_ = deviceBuilder_.build();
                }
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof policy.Policy.PolicyRule) {
                    return mergeFrom((policy.Policy.PolicyRule) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(policy.Policy.PolicyRule other) {
                if (other == policy.Policy.PolicyRule.getDefaultInstance())
                    return this;
                switch(other.getPolicyRuleCase()) {
                    case SERVICE:
                        {
                            mergeService(other.getService());
                            break;
                        }
                    case DEVICE:
                        {
                            mergeDevice(other.getDevice());
                            break;
                        }
                    case POLICYRULE_NOT_SET:
                        {
                            break;
                        }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    input.readMessage(getServiceFieldBuilder().getBuilder(), extensionRegistry);
                                    policyRuleCase_ = 1;
                                    break;
                                }
                            // case 10
                            case 18:
                                {
                                    input.readMessage(getDeviceFieldBuilder().getBuilder(), extensionRegistry);
                                    policyRuleCase_ = 2;
                                    break;
                                }
                            // case 18
                            default:
                                {
                                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                                        // was an endgroup tag
                                        done = true;
                                    }
                                    break;
                                }
                        }
                        // switch (tag)
                    }
                    // while (!done)
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.unwrapIOException();
                } finally {
                    onChanged();
                }
                // finally
                return this;
            }

            private int policyRuleCase_ = 0;

            private java.lang.Object policyRule_;

            public PolicyRuleCase getPolicyRuleCase() {
                return PolicyRuleCase.forNumber(policyRuleCase_);
            }

            public Builder clearPolicyRule() {
                policyRuleCase_ = 0;
                policyRule_ = null;
                onChanged();
                return this;
            }

            private int bitField0_;

            private com.google.protobuf.SingleFieldBuilderV3<policy.Policy.PolicyRuleService, policy.Policy.PolicyRuleService.Builder, policy.Policy.PolicyRuleServiceOrBuilder> serviceBuilder_;

            /**
             * <code>.policy.PolicyRuleService service = 1;</code>
             * @return Whether the service field is set.
             */
            @java.lang.Override
            public boolean hasService() {
                return policyRuleCase_ == 1;
            }

            /**
             * <code>.policy.PolicyRuleService service = 1;</code>
             * @return The service.
             */
            @java.lang.Override
            public policy.Policy.PolicyRuleService getService() {
                if (serviceBuilder_ == null) {
                    if (policyRuleCase_ == 1) {
                        return (policy.Policy.PolicyRuleService) policyRule_;
                    }
                    return policy.Policy.PolicyRuleService.getDefaultInstance();
                } else {
                    if (policyRuleCase_ == 1) {
                        return serviceBuilder_.getMessage();
                    }
                    return policy.Policy.PolicyRuleService.getDefaultInstance();
                }
            }

            /**
             * <code>.policy.PolicyRuleService service = 1;</code>
             */
            public Builder setService(policy.Policy.PolicyRuleService value) {
                if (serviceBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    policyRule_ = value;
                    onChanged();
                } else {
                    serviceBuilder_.setMessage(value);
                }
                policyRuleCase_ = 1;
                return this;
            }

            /**
             * <code>.policy.PolicyRuleService service = 1;</code>
             */
            public Builder setService(policy.Policy.PolicyRuleService.Builder builderForValue) {
                if (serviceBuilder_ == null) {
                    policyRule_ = builderForValue.build();
                    onChanged();
                } else {
                    serviceBuilder_.setMessage(builderForValue.build());
                }
                policyRuleCase_ = 1;
                return this;
            }

            /**
             * <code>.policy.PolicyRuleService service = 1;</code>
             */
            public Builder mergeService(policy.Policy.PolicyRuleService value) {
                if (serviceBuilder_ == null) {
                    if (policyRuleCase_ == 1 && policyRule_ != policy.Policy.PolicyRuleService.getDefaultInstance()) {
                        policyRule_ = policy.Policy.PolicyRuleService.newBuilder((policy.Policy.PolicyRuleService) policyRule_).mergeFrom(value).buildPartial();
                    } else {
                        policyRule_ = value;
                    }
                    onChanged();
                } else {
                    if (policyRuleCase_ == 1) {
                        serviceBuilder_.mergeFrom(value);
                    } else {
                        serviceBuilder_.setMessage(value);
                    }
                }
                policyRuleCase_ = 1;
                return this;
            }

            /**
             * <code>.policy.PolicyRuleService service = 1;</code>
             */
            public Builder clearService() {
                if (serviceBuilder_ == null) {
                    if (policyRuleCase_ == 1) {
                        policyRuleCase_ = 0;
                        policyRule_ = null;
                        onChanged();
                    }
                } else {
                    if (policyRuleCase_ == 1) {
                        policyRuleCase_ = 0;
                        policyRule_ = null;
                    }
                    serviceBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>.policy.PolicyRuleService service = 1;</code>
             */
            public policy.Policy.PolicyRuleService.Builder getServiceBuilder() {
                return getServiceFieldBuilder().getBuilder();
            }

            /**
             * <code>.policy.PolicyRuleService service = 1;</code>
             */
            @java.lang.Override
            public policy.Policy.PolicyRuleServiceOrBuilder getServiceOrBuilder() {
                if ((policyRuleCase_ == 1) && (serviceBuilder_ != null)) {
                    return serviceBuilder_.getMessageOrBuilder();
                } else {
                    if (policyRuleCase_ == 1) {
                        return (policy.Policy.PolicyRuleService) policyRule_;
                    }
                    return policy.Policy.PolicyRuleService.getDefaultInstance();
                }
            }

            /**
             * <code>.policy.PolicyRuleService service = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<policy.Policy.PolicyRuleService, policy.Policy.PolicyRuleService.Builder, policy.Policy.PolicyRuleServiceOrBuilder> getServiceFieldBuilder() {
                if (serviceBuilder_ == null) {
                    if (!(policyRuleCase_ == 1)) {
                        policyRule_ = policy.Policy.PolicyRuleService.getDefaultInstance();
                    }
                    serviceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<policy.Policy.PolicyRuleService, policy.Policy.PolicyRuleService.Builder, policy.Policy.PolicyRuleServiceOrBuilder>((policy.Policy.PolicyRuleService) policyRule_, getParentForChildren(), isClean());
                    policyRule_ = null;
                }
                policyRuleCase_ = 1;
                onChanged();
                return serviceBuilder_;
            }

            private com.google.protobuf.SingleFieldBuilderV3<policy.Policy.PolicyRuleDevice, policy.Policy.PolicyRuleDevice.Builder, policy.Policy.PolicyRuleDeviceOrBuilder> deviceBuilder_;

            /**
             * <code>.policy.PolicyRuleDevice device = 2;</code>
             * @return Whether the device field is set.
             */
            @java.lang.Override
            public boolean hasDevice() {
                return policyRuleCase_ == 2;
            }

            /**
             * <code>.policy.PolicyRuleDevice device = 2;</code>
             * @return The device.
             */
            @java.lang.Override
            public policy.Policy.PolicyRuleDevice getDevice() {
                if (deviceBuilder_ == null) {
                    if (policyRuleCase_ == 2) {
                        return (policy.Policy.PolicyRuleDevice) policyRule_;
                    }
                    return policy.Policy.PolicyRuleDevice.getDefaultInstance();
                } else {
                    if (policyRuleCase_ == 2) {
                        return deviceBuilder_.getMessage();
                    }
                    return policy.Policy.PolicyRuleDevice.getDefaultInstance();
                }
            }

            /**
             * <code>.policy.PolicyRuleDevice device = 2;</code>
             */
            public Builder setDevice(policy.Policy.PolicyRuleDevice value) {
                if (deviceBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    policyRule_ = value;
                    onChanged();
                } else {
                    deviceBuilder_.setMessage(value);
                }
                policyRuleCase_ = 2;
                return this;
            }

            /**
             * <code>.policy.PolicyRuleDevice device = 2;</code>
             */
            public Builder setDevice(policy.Policy.PolicyRuleDevice.Builder builderForValue) {
                if (deviceBuilder_ == null) {
                    policyRule_ = builderForValue.build();
                    onChanged();
                } else {
                    deviceBuilder_.setMessage(builderForValue.build());
                }
                policyRuleCase_ = 2;
                return this;
            }

            /**
             * <code>.policy.PolicyRuleDevice device = 2;</code>
             */
            public Builder mergeDevice(policy.Policy.PolicyRuleDevice value) {
                if (deviceBuilder_ == null) {
                    if (policyRuleCase_ == 2 && policyRule_ != policy.Policy.PolicyRuleDevice.getDefaultInstance()) {
                        policyRule_ = policy.Policy.PolicyRuleDevice.newBuilder((policy.Policy.PolicyRuleDevice) policyRule_).mergeFrom(value).buildPartial();
                    } else {
                        policyRule_ = value;
                    }
                    onChanged();
                } else {
                    if (policyRuleCase_ == 2) {
                        deviceBuilder_.mergeFrom(value);
                    } else {
                        deviceBuilder_.setMessage(value);
                    }
                }
                policyRuleCase_ = 2;
                return this;
            }

            /**
             * <code>.policy.PolicyRuleDevice device = 2;</code>
             */
            public Builder clearDevice() {
                if (deviceBuilder_ == null) {
                    if (policyRuleCase_ == 2) {
                        policyRuleCase_ = 0;
                        policyRule_ = null;
                        onChanged();
                    }
                } else {
                    if (policyRuleCase_ == 2) {
                        policyRuleCase_ = 0;
                        policyRule_ = null;
                    }
                    deviceBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>.policy.PolicyRuleDevice device = 2;</code>
             */
            public policy.Policy.PolicyRuleDevice.Builder getDeviceBuilder() {
                return getDeviceFieldBuilder().getBuilder();
            }

            /**
             * <code>.policy.PolicyRuleDevice device = 2;</code>
             */
            @java.lang.Override
            public policy.Policy.PolicyRuleDeviceOrBuilder getDeviceOrBuilder() {
                if ((policyRuleCase_ == 2) && (deviceBuilder_ != null)) {
                    return deviceBuilder_.getMessageOrBuilder();
                } else {
                    if (policyRuleCase_ == 2) {
                        return (policy.Policy.PolicyRuleDevice) policyRule_;
                    }
                    return policy.Policy.PolicyRuleDevice.getDefaultInstance();
                }
            }

            /**
             * <code>.policy.PolicyRuleDevice device = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<policy.Policy.PolicyRuleDevice, policy.Policy.PolicyRuleDevice.Builder, policy.Policy.PolicyRuleDeviceOrBuilder> getDeviceFieldBuilder() {
                if (deviceBuilder_ == null) {
                    if (!(policyRuleCase_ == 2)) {
                        policyRule_ = policy.Policy.PolicyRuleDevice.getDefaultInstance();
                    }
                    deviceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<policy.Policy.PolicyRuleDevice, policy.Policy.PolicyRuleDevice.Builder, policy.Policy.PolicyRuleDeviceOrBuilder>((policy.Policy.PolicyRuleDevice) policyRule_, getParentForChildren(), isClean());
                    policyRule_ = null;
                }
                policyRuleCase_ = 2;
                onChanged();
                return deviceBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }
            // @@protoc_insertion_point(builder_scope:policy.PolicyRule)
        }

        // @@protoc_insertion_point(class_scope:policy.PolicyRule)
        private static final policy.Policy.PolicyRule DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new policy.Policy.PolicyRule();
        }

        public static policy.Policy.PolicyRule getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<PolicyRule> PARSER = new com.google.protobuf.AbstractParser<PolicyRule>() {

            @java.lang.Override
            public PolicyRule parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                Builder builder = newBuilder();
                try {
                    builder.mergeFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(builder.buildPartial());
                } catch (com.google.protobuf.UninitializedMessageException e) {
                    throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(builder.buildPartial());
                }
                return builder.buildPartial();
            }
        };

        public static com.google.protobuf.Parser<PolicyRule> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PolicyRule> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public policy.Policy.PolicyRule getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface PolicyRuleIdListOrBuilder extends // @@protoc_insertion_point(interface_extends:policy.PolicyRuleIdList)
    com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
         */
        java.util.List<policy.Policy.PolicyRuleId> getPolicyRuleIdListList();

        /**
         * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
         */
        policy.Policy.PolicyRuleId getPolicyRuleIdList(int index);

        /**
         * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
         */
        int getPolicyRuleIdListCount();

        /**
         * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
         */
        java.util.List<? extends policy.Policy.PolicyRuleIdOrBuilder> getPolicyRuleIdListOrBuilderList();

        /**
         * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
         */
        policy.Policy.PolicyRuleIdOrBuilder getPolicyRuleIdListOrBuilder(int index);
    }

    /**
     * <pre>
     * A list of policy rule IDs
     * </pre>
     *
     * Protobuf type {@code policy.PolicyRuleIdList}
     */
    public static final class PolicyRuleIdList extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:policy.PolicyRuleIdList)
    PolicyRuleIdListOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use PolicyRuleIdList.newBuilder() to construct.
        private PolicyRuleIdList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private PolicyRuleIdList() {
            policyRuleIdList_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({ "unused" })
        protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
            return new PolicyRuleIdList();
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return policy.Policy.internal_static_policy_PolicyRuleIdList_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return policy.Policy.internal_static_policy_PolicyRuleIdList_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRuleIdList.class, policy.Policy.PolicyRuleIdList.Builder.class);
        }

        public static final int POLICYRULEIDLIST_FIELD_NUMBER = 1;

        @SuppressWarnings("serial")
        private java.util.List<policy.Policy.PolicyRuleId> policyRuleIdList_;

        /**
         * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
         */
        @java.lang.Override
        public java.util.List<policy.Policy.PolicyRuleId> getPolicyRuleIdListList() {
            return policyRuleIdList_;
        }

        /**
         * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
         */
        @java.lang.Override
        public java.util.List<? extends policy.Policy.PolicyRuleIdOrBuilder> getPolicyRuleIdListOrBuilderList() {
            return policyRuleIdList_;
        }

        /**
         * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
         */
        @java.lang.Override
        public int getPolicyRuleIdListCount() {
            return policyRuleIdList_.size();
        }

        /**
         * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleId getPolicyRuleIdList(int index) {
            return policyRuleIdList_.get(index);
        }

        /**
         * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleIdOrBuilder getPolicyRuleIdListOrBuilder(int index) {
            return policyRuleIdList_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            for (int i = 0; i < policyRuleIdList_.size(); i++) {
                output.writeMessage(1, policyRuleIdList_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1)
                return size;
            size = 0;
            for (int i = 0; i < policyRuleIdList_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, policyRuleIdList_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof policy.Policy.PolicyRuleIdList)) {
                return super.equals(obj);
            }
            policy.Policy.PolicyRuleIdList other = (policy.Policy.PolicyRuleIdList) obj;
            if (!getPolicyRuleIdListList().equals(other.getPolicyRuleIdListList()))
                return false;
            if (!getUnknownFields().equals(other.getUnknownFields()))
                return false;
            return true;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getPolicyRuleIdListCount() > 0) {
                hash = (37 * hash) + POLICYRULEIDLIST_FIELD_NUMBER;
                hash = (53 * hash) + getPolicyRuleIdListList().hashCode();
            }
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static policy.Policy.PolicyRuleIdList parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleIdList parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleIdList parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleIdList parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleIdList parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleIdList parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleIdList parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleIdList parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleIdList parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleIdList parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleIdList parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleIdList parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(policy.Policy.PolicyRuleIdList prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * A list of policy rule IDs
         * </pre>
         *
         * Protobuf type {@code policy.PolicyRuleIdList}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:policy.PolicyRuleIdList)
        policy.Policy.PolicyRuleIdListOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return policy.Policy.internal_static_policy_PolicyRuleIdList_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return policy.Policy.internal_static_policy_PolicyRuleIdList_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRuleIdList.class, policy.Policy.PolicyRuleIdList.Builder.class);
            }

            // Construct using policy.Policy.PolicyRuleIdList.newBuilder()
            private Builder() {
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                bitField0_ = 0;
                if (policyRuleIdListBuilder_ == null) {
                    policyRuleIdList_ = java.util.Collections.emptyList();
                } else {
                    policyRuleIdList_ = null;
                    policyRuleIdListBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return policy.Policy.internal_static_policy_PolicyRuleIdList_descriptor;
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleIdList getDefaultInstanceForType() {
                return policy.Policy.PolicyRuleIdList.getDefaultInstance();
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleIdList build() {
                policy.Policy.PolicyRuleIdList result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleIdList buildPartial() {
                policy.Policy.PolicyRuleIdList result = new policy.Policy.PolicyRuleIdList(this);
                buildPartialRepeatedFields(result);
                if (bitField0_ != 0) {
                    buildPartial0(result);
                }
                onBuilt();
                return result;
            }

            private void buildPartialRepeatedFields(policy.Policy.PolicyRuleIdList result) {
                if (policyRuleIdListBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) != 0)) {
                        policyRuleIdList_ = java.util.Collections.unmodifiableList(policyRuleIdList_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.policyRuleIdList_ = policyRuleIdList_;
                } else {
                    result.policyRuleIdList_ = policyRuleIdListBuilder_.build();
                }
            }

            private void buildPartial0(policy.Policy.PolicyRuleIdList result) {
                int from_bitField0_ = bitField0_;
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof policy.Policy.PolicyRuleIdList) {
                    return mergeFrom((policy.Policy.PolicyRuleIdList) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(policy.Policy.PolicyRuleIdList other) {
                if (other == policy.Policy.PolicyRuleIdList.getDefaultInstance())
                    return this;
                if (policyRuleIdListBuilder_ == null) {
                    if (!other.policyRuleIdList_.isEmpty()) {
                        if (policyRuleIdList_.isEmpty()) {
                            policyRuleIdList_ = other.policyRuleIdList_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensurePolicyRuleIdListIsMutable();
                            policyRuleIdList_.addAll(other.policyRuleIdList_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.policyRuleIdList_.isEmpty()) {
                        if (policyRuleIdListBuilder_.isEmpty()) {
                            policyRuleIdListBuilder_.dispose();
                            policyRuleIdListBuilder_ = null;
                            policyRuleIdList_ = other.policyRuleIdList_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            policyRuleIdListBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getPolicyRuleIdListFieldBuilder() : null;
                        } else {
                            policyRuleIdListBuilder_.addAllMessages(other.policyRuleIdList_);
                        }
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    policy.Policy.PolicyRuleId m = input.readMessage(policy.Policy.PolicyRuleId.parser(), extensionRegistry);
                                    if (policyRuleIdListBuilder_ == null) {
                                        ensurePolicyRuleIdListIsMutable();
                                        policyRuleIdList_.add(m);
                                    } else {
                                        policyRuleIdListBuilder_.addMessage(m);
                                    }
                                    break;
                                }
                            // case 10
                            default:
                                {
                                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                                        // was an endgroup tag
                                        done = true;
                                    }
                                    break;
                                }
                        }
                        // switch (tag)
                    }
                    // while (!done)
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.unwrapIOException();
                } finally {
                    onChanged();
                }
                // finally
                return this;
            }

            private int bitField0_;

            private java.util.List<policy.Policy.PolicyRuleId> policyRuleIdList_ = java.util.Collections.emptyList();

            private void ensurePolicyRuleIdListIsMutable() {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    policyRuleIdList_ = new java.util.ArrayList<policy.Policy.PolicyRuleId>(policyRuleIdList_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<policy.Policy.PolicyRuleId, policy.Policy.PolicyRuleId.Builder, policy.Policy.PolicyRuleIdOrBuilder> policyRuleIdListBuilder_;

            /**
             * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
             */
            public java.util.List<policy.Policy.PolicyRuleId> getPolicyRuleIdListList() {
                if (policyRuleIdListBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(policyRuleIdList_);
                } else {
                    return policyRuleIdListBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
             */
            public int getPolicyRuleIdListCount() {
                if (policyRuleIdListBuilder_ == null) {
                    return policyRuleIdList_.size();
                } else {
                    return policyRuleIdListBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
             */
            public policy.Policy.PolicyRuleId getPolicyRuleIdList(int index) {
                if (policyRuleIdListBuilder_ == null) {
                    return policyRuleIdList_.get(index);
                } else {
                    return policyRuleIdListBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
             */
            public Builder setPolicyRuleIdList(int index, policy.Policy.PolicyRuleId value) {
                if (policyRuleIdListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePolicyRuleIdListIsMutable();
                    policyRuleIdList_.set(index, value);
                    onChanged();
                } else {
                    policyRuleIdListBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
             */
            public Builder setPolicyRuleIdList(int index, policy.Policy.PolicyRuleId.Builder builderForValue) {
                if (policyRuleIdListBuilder_ == null) {
                    ensurePolicyRuleIdListIsMutable();
                    policyRuleIdList_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    policyRuleIdListBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
             */
            public Builder addPolicyRuleIdList(policy.Policy.PolicyRuleId value) {
                if (policyRuleIdListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePolicyRuleIdListIsMutable();
                    policyRuleIdList_.add(value);
                    onChanged();
                } else {
                    policyRuleIdListBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
             */
            public Builder addPolicyRuleIdList(int index, policy.Policy.PolicyRuleId value) {
                if (policyRuleIdListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePolicyRuleIdListIsMutable();
                    policyRuleIdList_.add(index, value);
                    onChanged();
                } else {
                    policyRuleIdListBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
             */
            public Builder addPolicyRuleIdList(policy.Policy.PolicyRuleId.Builder builderForValue) {
                if (policyRuleIdListBuilder_ == null) {
                    ensurePolicyRuleIdListIsMutable();
                    policyRuleIdList_.add(builderForValue.build());
                    onChanged();
                } else {
                    policyRuleIdListBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
             */
            public Builder addPolicyRuleIdList(int index, policy.Policy.PolicyRuleId.Builder builderForValue) {
                if (policyRuleIdListBuilder_ == null) {
                    ensurePolicyRuleIdListIsMutable();
                    policyRuleIdList_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    policyRuleIdListBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
             */
            public Builder addAllPolicyRuleIdList(java.lang.Iterable<? extends policy.Policy.PolicyRuleId> values) {
                if (policyRuleIdListBuilder_ == null) {
                    ensurePolicyRuleIdListIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, policyRuleIdList_);
                    onChanged();
                } else {
                    policyRuleIdListBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
             */
            public Builder clearPolicyRuleIdList() {
                if (policyRuleIdListBuilder_ == null) {
                    policyRuleIdList_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    policyRuleIdListBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
             */
            public Builder removePolicyRuleIdList(int index) {
                if (policyRuleIdListBuilder_ == null) {
                    ensurePolicyRuleIdListIsMutable();
                    policyRuleIdList_.remove(index);
                    onChanged();
                } else {
                    policyRuleIdListBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
             */
            public policy.Policy.PolicyRuleId.Builder getPolicyRuleIdListBuilder(int index) {
                return getPolicyRuleIdListFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
             */
            public policy.Policy.PolicyRuleIdOrBuilder getPolicyRuleIdListOrBuilder(int index) {
                if (policyRuleIdListBuilder_ == null) {
                    return policyRuleIdList_.get(index);
                } else {
                    return policyRuleIdListBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
             */
            public java.util.List<? extends policy.Policy.PolicyRuleIdOrBuilder> getPolicyRuleIdListOrBuilderList() {
                if (policyRuleIdListBuilder_ != null) {
                    return policyRuleIdListBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(policyRuleIdList_);
                }
            }

            /**
             * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
             */
            public policy.Policy.PolicyRuleId.Builder addPolicyRuleIdListBuilder() {
                return getPolicyRuleIdListFieldBuilder().addBuilder(policy.Policy.PolicyRuleId.getDefaultInstance());
            }

            /**
             * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
             */
            public policy.Policy.PolicyRuleId.Builder addPolicyRuleIdListBuilder(int index) {
                return getPolicyRuleIdListFieldBuilder().addBuilder(index, policy.Policy.PolicyRuleId.getDefaultInstance());
            }

            /**
             * <code>repeated .policy.PolicyRuleId policyRuleIdList = 1;</code>
             */
            public java.util.List<policy.Policy.PolicyRuleId.Builder> getPolicyRuleIdListBuilderList() {
                return getPolicyRuleIdListFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<policy.Policy.PolicyRuleId, policy.Policy.PolicyRuleId.Builder, policy.Policy.PolicyRuleIdOrBuilder> getPolicyRuleIdListFieldBuilder() {
                if (policyRuleIdListBuilder_ == null) {
                    policyRuleIdListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<policy.Policy.PolicyRuleId, policy.Policy.PolicyRuleId.Builder, policy.Policy.PolicyRuleIdOrBuilder>(policyRuleIdList_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
                    policyRuleIdList_ = null;
                }
                return policyRuleIdListBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }
            // @@protoc_insertion_point(builder_scope:policy.PolicyRuleIdList)
        }

        // @@protoc_insertion_point(class_scope:policy.PolicyRuleIdList)
        private static final policy.Policy.PolicyRuleIdList DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new policy.Policy.PolicyRuleIdList();
        }

        public static policy.Policy.PolicyRuleIdList getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<PolicyRuleIdList> PARSER = new com.google.protobuf.AbstractParser<PolicyRuleIdList>() {

            @java.lang.Override
            public PolicyRuleIdList parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                Builder builder = newBuilder();
                try {
                    builder.mergeFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(builder.buildPartial());
                } catch (com.google.protobuf.UninitializedMessageException e) {
                    throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(builder.buildPartial());
                }
                return builder.buildPartial();
            }
        };

        public static com.google.protobuf.Parser<PolicyRuleIdList> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PolicyRuleIdList> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public policy.Policy.PolicyRuleIdList getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface PolicyRuleServiceListOrBuilder extends // @@protoc_insertion_point(interface_extends:policy.PolicyRuleServiceList)
    com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
         */
        java.util.List<policy.Policy.PolicyRuleService> getPolicyRuleServiceListList();

        /**
         * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
         */
        policy.Policy.PolicyRuleService getPolicyRuleServiceList(int index);

        /**
         * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
         */
        int getPolicyRuleServiceListCount();

        /**
         * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
         */
        java.util.List<? extends policy.Policy.PolicyRuleServiceOrBuilder> getPolicyRuleServiceListOrBuilderList();

        /**
         * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
         */
        policy.Policy.PolicyRuleServiceOrBuilder getPolicyRuleServiceListOrBuilder(int index);
    }

    /**
     * <pre>
     * A list of service-oriented policy rules
     * </pre>
     *
     * Protobuf type {@code policy.PolicyRuleServiceList}
     */
    public static final class PolicyRuleServiceList extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:policy.PolicyRuleServiceList)
    PolicyRuleServiceListOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use PolicyRuleServiceList.newBuilder() to construct.
        private PolicyRuleServiceList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private PolicyRuleServiceList() {
            policyRuleServiceList_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({ "unused" })
        protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
            return new PolicyRuleServiceList();
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return policy.Policy.internal_static_policy_PolicyRuleServiceList_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return policy.Policy.internal_static_policy_PolicyRuleServiceList_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRuleServiceList.class, policy.Policy.PolicyRuleServiceList.Builder.class);
        }

        public static final int POLICYRULESERVICELIST_FIELD_NUMBER = 1;

        @SuppressWarnings("serial")
        private java.util.List<policy.Policy.PolicyRuleService> policyRuleServiceList_;

        /**
         * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
         */
        @java.lang.Override
        public java.util.List<policy.Policy.PolicyRuleService> getPolicyRuleServiceListList() {
            return policyRuleServiceList_;
        }

        /**
         * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
         */
        @java.lang.Override
        public java.util.List<? extends policy.Policy.PolicyRuleServiceOrBuilder> getPolicyRuleServiceListOrBuilderList() {
            return policyRuleServiceList_;
        }

        /**
         * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
         */
        @java.lang.Override
        public int getPolicyRuleServiceListCount() {
            return policyRuleServiceList_.size();
        }

        /**
         * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleService getPolicyRuleServiceList(int index) {
            return policyRuleServiceList_.get(index);
        }

        /**
         * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleServiceOrBuilder getPolicyRuleServiceListOrBuilder(int index) {
            return policyRuleServiceList_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            for (int i = 0; i < policyRuleServiceList_.size(); i++) {
                output.writeMessage(1, policyRuleServiceList_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1)
                return size;
            size = 0;
            for (int i = 0; i < policyRuleServiceList_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, policyRuleServiceList_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof policy.Policy.PolicyRuleServiceList)) {
                return super.equals(obj);
            }
            policy.Policy.PolicyRuleServiceList other = (policy.Policy.PolicyRuleServiceList) obj;
            if (!getPolicyRuleServiceListList().equals(other.getPolicyRuleServiceListList()))
                return false;
            if (!getUnknownFields().equals(other.getUnknownFields()))
                return false;
            return true;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getPolicyRuleServiceListCount() > 0) {
                hash = (37 * hash) + POLICYRULESERVICELIST_FIELD_NUMBER;
                hash = (53 * hash) + getPolicyRuleServiceListList().hashCode();
            }
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static policy.Policy.PolicyRuleServiceList parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleServiceList parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleServiceList parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleServiceList parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleServiceList parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleServiceList parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleServiceList parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleServiceList parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleServiceList parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleServiceList parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleServiceList parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleServiceList parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(policy.Policy.PolicyRuleServiceList prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * A list of service-oriented policy rules
         * </pre>
         *
         * Protobuf type {@code policy.PolicyRuleServiceList}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:policy.PolicyRuleServiceList)
        policy.Policy.PolicyRuleServiceListOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return policy.Policy.internal_static_policy_PolicyRuleServiceList_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return policy.Policy.internal_static_policy_PolicyRuleServiceList_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRuleServiceList.class, policy.Policy.PolicyRuleServiceList.Builder.class);
            }

            // Construct using policy.Policy.PolicyRuleServiceList.newBuilder()
            private Builder() {
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                bitField0_ = 0;
                if (policyRuleServiceListBuilder_ == null) {
                    policyRuleServiceList_ = java.util.Collections.emptyList();
                } else {
                    policyRuleServiceList_ = null;
                    policyRuleServiceListBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return policy.Policy.internal_static_policy_PolicyRuleServiceList_descriptor;
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleServiceList getDefaultInstanceForType() {
                return policy.Policy.PolicyRuleServiceList.getDefaultInstance();
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleServiceList build() {
                policy.Policy.PolicyRuleServiceList result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleServiceList buildPartial() {
                policy.Policy.PolicyRuleServiceList result = new policy.Policy.PolicyRuleServiceList(this);
                buildPartialRepeatedFields(result);
                if (bitField0_ != 0) {
                    buildPartial0(result);
                }
                onBuilt();
                return result;
            }

            private void buildPartialRepeatedFields(policy.Policy.PolicyRuleServiceList result) {
                if (policyRuleServiceListBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) != 0)) {
                        policyRuleServiceList_ = java.util.Collections.unmodifiableList(policyRuleServiceList_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.policyRuleServiceList_ = policyRuleServiceList_;
                } else {
                    result.policyRuleServiceList_ = policyRuleServiceListBuilder_.build();
                }
            }

            private void buildPartial0(policy.Policy.PolicyRuleServiceList result) {
                int from_bitField0_ = bitField0_;
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof policy.Policy.PolicyRuleServiceList) {
                    return mergeFrom((policy.Policy.PolicyRuleServiceList) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(policy.Policy.PolicyRuleServiceList other) {
                if (other == policy.Policy.PolicyRuleServiceList.getDefaultInstance())
                    return this;
                if (policyRuleServiceListBuilder_ == null) {
                    if (!other.policyRuleServiceList_.isEmpty()) {
                        if (policyRuleServiceList_.isEmpty()) {
                            policyRuleServiceList_ = other.policyRuleServiceList_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensurePolicyRuleServiceListIsMutable();
                            policyRuleServiceList_.addAll(other.policyRuleServiceList_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.policyRuleServiceList_.isEmpty()) {
                        if (policyRuleServiceListBuilder_.isEmpty()) {
                            policyRuleServiceListBuilder_.dispose();
                            policyRuleServiceListBuilder_ = null;
                            policyRuleServiceList_ = other.policyRuleServiceList_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            policyRuleServiceListBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getPolicyRuleServiceListFieldBuilder() : null;
                        } else {
                            policyRuleServiceListBuilder_.addAllMessages(other.policyRuleServiceList_);
                        }
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    policy.Policy.PolicyRuleService m = input.readMessage(policy.Policy.PolicyRuleService.parser(), extensionRegistry);
                                    if (policyRuleServiceListBuilder_ == null) {
                                        ensurePolicyRuleServiceListIsMutable();
                                        policyRuleServiceList_.add(m);
                                    } else {
                                        policyRuleServiceListBuilder_.addMessage(m);
                                    }
                                    break;
                                }
                            // case 10
                            default:
                                {
                                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                                        // was an endgroup tag
                                        done = true;
                                    }
                                    break;
                                }
                        }
                        // switch (tag)
                    }
                    // while (!done)
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.unwrapIOException();
                } finally {
                    onChanged();
                }
                // finally
                return this;
            }

            private int bitField0_;

            private java.util.List<policy.Policy.PolicyRuleService> policyRuleServiceList_ = java.util.Collections.emptyList();

            private void ensurePolicyRuleServiceListIsMutable() {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    policyRuleServiceList_ = new java.util.ArrayList<policy.Policy.PolicyRuleService>(policyRuleServiceList_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<policy.Policy.PolicyRuleService, policy.Policy.PolicyRuleService.Builder, policy.Policy.PolicyRuleServiceOrBuilder> policyRuleServiceListBuilder_;

            /**
             * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
             */
            public java.util.List<policy.Policy.PolicyRuleService> getPolicyRuleServiceListList() {
                if (policyRuleServiceListBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(policyRuleServiceList_);
                } else {
                    return policyRuleServiceListBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
             */
            public int getPolicyRuleServiceListCount() {
                if (policyRuleServiceListBuilder_ == null) {
                    return policyRuleServiceList_.size();
                } else {
                    return policyRuleServiceListBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
             */
            public policy.Policy.PolicyRuleService getPolicyRuleServiceList(int index) {
                if (policyRuleServiceListBuilder_ == null) {
                    return policyRuleServiceList_.get(index);
                } else {
                    return policyRuleServiceListBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
             */
            public Builder setPolicyRuleServiceList(int index, policy.Policy.PolicyRuleService value) {
                if (policyRuleServiceListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePolicyRuleServiceListIsMutable();
                    policyRuleServiceList_.set(index, value);
                    onChanged();
                } else {
                    policyRuleServiceListBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
             */
            public Builder setPolicyRuleServiceList(int index, policy.Policy.PolicyRuleService.Builder builderForValue) {
                if (policyRuleServiceListBuilder_ == null) {
                    ensurePolicyRuleServiceListIsMutable();
                    policyRuleServiceList_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    policyRuleServiceListBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
             */
            public Builder addPolicyRuleServiceList(policy.Policy.PolicyRuleService value) {
                if (policyRuleServiceListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePolicyRuleServiceListIsMutable();
                    policyRuleServiceList_.add(value);
                    onChanged();
                } else {
                    policyRuleServiceListBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
             */
            public Builder addPolicyRuleServiceList(int index, policy.Policy.PolicyRuleService value) {
                if (policyRuleServiceListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePolicyRuleServiceListIsMutable();
                    policyRuleServiceList_.add(index, value);
                    onChanged();
                } else {
                    policyRuleServiceListBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
             */
            public Builder addPolicyRuleServiceList(policy.Policy.PolicyRuleService.Builder builderForValue) {
                if (policyRuleServiceListBuilder_ == null) {
                    ensurePolicyRuleServiceListIsMutable();
                    policyRuleServiceList_.add(builderForValue.build());
                    onChanged();
                } else {
                    policyRuleServiceListBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
             */
            public Builder addPolicyRuleServiceList(int index, policy.Policy.PolicyRuleService.Builder builderForValue) {
                if (policyRuleServiceListBuilder_ == null) {
                    ensurePolicyRuleServiceListIsMutable();
                    policyRuleServiceList_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    policyRuleServiceListBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
             */
            public Builder addAllPolicyRuleServiceList(java.lang.Iterable<? extends policy.Policy.PolicyRuleService> values) {
                if (policyRuleServiceListBuilder_ == null) {
                    ensurePolicyRuleServiceListIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, policyRuleServiceList_);
                    onChanged();
                } else {
                    policyRuleServiceListBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
             */
            public Builder clearPolicyRuleServiceList() {
                if (policyRuleServiceListBuilder_ == null) {
                    policyRuleServiceList_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    policyRuleServiceListBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
             */
            public Builder removePolicyRuleServiceList(int index) {
                if (policyRuleServiceListBuilder_ == null) {
                    ensurePolicyRuleServiceListIsMutable();
                    policyRuleServiceList_.remove(index);
                    onChanged();
                } else {
                    policyRuleServiceListBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
             */
            public policy.Policy.PolicyRuleService.Builder getPolicyRuleServiceListBuilder(int index) {
                return getPolicyRuleServiceListFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
             */
            public policy.Policy.PolicyRuleServiceOrBuilder getPolicyRuleServiceListOrBuilder(int index) {
                if (policyRuleServiceListBuilder_ == null) {
                    return policyRuleServiceList_.get(index);
                } else {
                    return policyRuleServiceListBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
             */
            public java.util.List<? extends policy.Policy.PolicyRuleServiceOrBuilder> getPolicyRuleServiceListOrBuilderList() {
                if (policyRuleServiceListBuilder_ != null) {
                    return policyRuleServiceListBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(policyRuleServiceList_);
                }
            }

            /**
             * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
             */
            public policy.Policy.PolicyRuleService.Builder addPolicyRuleServiceListBuilder() {
                return getPolicyRuleServiceListFieldBuilder().addBuilder(policy.Policy.PolicyRuleService.getDefaultInstance());
            }

            /**
             * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
             */
            public policy.Policy.PolicyRuleService.Builder addPolicyRuleServiceListBuilder(int index) {
                return getPolicyRuleServiceListFieldBuilder().addBuilder(index, policy.Policy.PolicyRuleService.getDefaultInstance());
            }

            /**
             * <code>repeated .policy.PolicyRuleService policyRuleServiceList = 1;</code>
             */
            public java.util.List<policy.Policy.PolicyRuleService.Builder> getPolicyRuleServiceListBuilderList() {
                return getPolicyRuleServiceListFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<policy.Policy.PolicyRuleService, policy.Policy.PolicyRuleService.Builder, policy.Policy.PolicyRuleServiceOrBuilder> getPolicyRuleServiceListFieldBuilder() {
                if (policyRuleServiceListBuilder_ == null) {
                    policyRuleServiceListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<policy.Policy.PolicyRuleService, policy.Policy.PolicyRuleService.Builder, policy.Policy.PolicyRuleServiceOrBuilder>(policyRuleServiceList_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
                    policyRuleServiceList_ = null;
                }
                return policyRuleServiceListBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }
            // @@protoc_insertion_point(builder_scope:policy.PolicyRuleServiceList)
        }

        // @@protoc_insertion_point(class_scope:policy.PolicyRuleServiceList)
        private static final policy.Policy.PolicyRuleServiceList DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new policy.Policy.PolicyRuleServiceList();
        }

        public static policy.Policy.PolicyRuleServiceList getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<PolicyRuleServiceList> PARSER = new com.google.protobuf.AbstractParser<PolicyRuleServiceList>() {

            @java.lang.Override
            public PolicyRuleServiceList parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                Builder builder = newBuilder();
                try {
                    builder.mergeFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(builder.buildPartial());
                } catch (com.google.protobuf.UninitializedMessageException e) {
                    throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(builder.buildPartial());
                }
                return builder.buildPartial();
            }
        };

        public static com.google.protobuf.Parser<PolicyRuleServiceList> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PolicyRuleServiceList> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public policy.Policy.PolicyRuleServiceList getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface PolicyRuleDeviceListOrBuilder extends // @@protoc_insertion_point(interface_extends:policy.PolicyRuleDeviceList)
    com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
         */
        java.util.List<policy.Policy.PolicyRuleDevice> getPolicyRuleDeviceListList();

        /**
         * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
         */
        policy.Policy.PolicyRuleDevice getPolicyRuleDeviceList(int index);

        /**
         * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
         */
        int getPolicyRuleDeviceListCount();

        /**
         * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
         */
        java.util.List<? extends policy.Policy.PolicyRuleDeviceOrBuilder> getPolicyRuleDeviceListOrBuilderList();

        /**
         * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
         */
        policy.Policy.PolicyRuleDeviceOrBuilder getPolicyRuleDeviceListOrBuilder(int index);
    }

    /**
     * <pre>
     * A list of device-oriented policy rules
     * </pre>
     *
     * Protobuf type {@code policy.PolicyRuleDeviceList}
     */
    public static final class PolicyRuleDeviceList extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:policy.PolicyRuleDeviceList)
    PolicyRuleDeviceListOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use PolicyRuleDeviceList.newBuilder() to construct.
        private PolicyRuleDeviceList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private PolicyRuleDeviceList() {
            policyRuleDeviceList_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({ "unused" })
        protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
            return new PolicyRuleDeviceList();
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return policy.Policy.internal_static_policy_PolicyRuleDeviceList_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return policy.Policy.internal_static_policy_PolicyRuleDeviceList_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRuleDeviceList.class, policy.Policy.PolicyRuleDeviceList.Builder.class);
        }

        public static final int POLICYRULEDEVICELIST_FIELD_NUMBER = 1;

        @SuppressWarnings("serial")
        private java.util.List<policy.Policy.PolicyRuleDevice> policyRuleDeviceList_;

        /**
         * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
         */
        @java.lang.Override
        public java.util.List<policy.Policy.PolicyRuleDevice> getPolicyRuleDeviceListList() {
            return policyRuleDeviceList_;
        }

        /**
         * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
         */
        @java.lang.Override
        public java.util.List<? extends policy.Policy.PolicyRuleDeviceOrBuilder> getPolicyRuleDeviceListOrBuilderList() {
            return policyRuleDeviceList_;
        }

        /**
         * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
         */
        @java.lang.Override
        public int getPolicyRuleDeviceListCount() {
            return policyRuleDeviceList_.size();
        }

        /**
         * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleDevice getPolicyRuleDeviceList(int index) {
            return policyRuleDeviceList_.get(index);
        }

        /**
         * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleDeviceOrBuilder getPolicyRuleDeviceListOrBuilder(int index) {
            return policyRuleDeviceList_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            for (int i = 0; i < policyRuleDeviceList_.size(); i++) {
                output.writeMessage(1, policyRuleDeviceList_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1)
                return size;
            size = 0;
            for (int i = 0; i < policyRuleDeviceList_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, policyRuleDeviceList_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof policy.Policy.PolicyRuleDeviceList)) {
                return super.equals(obj);
            }
            policy.Policy.PolicyRuleDeviceList other = (policy.Policy.PolicyRuleDeviceList) obj;
            if (!getPolicyRuleDeviceListList().equals(other.getPolicyRuleDeviceListList()))
                return false;
            if (!getUnknownFields().equals(other.getUnknownFields()))
                return false;
            return true;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getPolicyRuleDeviceListCount() > 0) {
                hash = (37 * hash) + POLICYRULEDEVICELIST_FIELD_NUMBER;
                hash = (53 * hash) + getPolicyRuleDeviceListList().hashCode();
            }
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static policy.Policy.PolicyRuleDeviceList parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleDeviceList parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleDeviceList parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleDeviceList parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleDeviceList parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleDeviceList parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleDeviceList parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleDeviceList parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleDeviceList parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleDeviceList parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleDeviceList parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleDeviceList parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(policy.Policy.PolicyRuleDeviceList prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * A list of device-oriented policy rules
         * </pre>
         *
         * Protobuf type {@code policy.PolicyRuleDeviceList}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:policy.PolicyRuleDeviceList)
        policy.Policy.PolicyRuleDeviceListOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return policy.Policy.internal_static_policy_PolicyRuleDeviceList_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return policy.Policy.internal_static_policy_PolicyRuleDeviceList_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRuleDeviceList.class, policy.Policy.PolicyRuleDeviceList.Builder.class);
            }

            // Construct using policy.Policy.PolicyRuleDeviceList.newBuilder()
            private Builder() {
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                bitField0_ = 0;
                if (policyRuleDeviceListBuilder_ == null) {
                    policyRuleDeviceList_ = java.util.Collections.emptyList();
                } else {
                    policyRuleDeviceList_ = null;
                    policyRuleDeviceListBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return policy.Policy.internal_static_policy_PolicyRuleDeviceList_descriptor;
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleDeviceList getDefaultInstanceForType() {
                return policy.Policy.PolicyRuleDeviceList.getDefaultInstance();
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleDeviceList build() {
                policy.Policy.PolicyRuleDeviceList result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleDeviceList buildPartial() {
                policy.Policy.PolicyRuleDeviceList result = new policy.Policy.PolicyRuleDeviceList(this);
                buildPartialRepeatedFields(result);
                if (bitField0_ != 0) {
                    buildPartial0(result);
                }
                onBuilt();
                return result;
            }

            private void buildPartialRepeatedFields(policy.Policy.PolicyRuleDeviceList result) {
                if (policyRuleDeviceListBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) != 0)) {
                        policyRuleDeviceList_ = java.util.Collections.unmodifiableList(policyRuleDeviceList_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.policyRuleDeviceList_ = policyRuleDeviceList_;
                } else {
                    result.policyRuleDeviceList_ = policyRuleDeviceListBuilder_.build();
                }
            }

            private void buildPartial0(policy.Policy.PolicyRuleDeviceList result) {
                int from_bitField0_ = bitField0_;
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof policy.Policy.PolicyRuleDeviceList) {
                    return mergeFrom((policy.Policy.PolicyRuleDeviceList) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(policy.Policy.PolicyRuleDeviceList other) {
                if (other == policy.Policy.PolicyRuleDeviceList.getDefaultInstance())
                    return this;
                if (policyRuleDeviceListBuilder_ == null) {
                    if (!other.policyRuleDeviceList_.isEmpty()) {
                        if (policyRuleDeviceList_.isEmpty()) {
                            policyRuleDeviceList_ = other.policyRuleDeviceList_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensurePolicyRuleDeviceListIsMutable();
                            policyRuleDeviceList_.addAll(other.policyRuleDeviceList_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.policyRuleDeviceList_.isEmpty()) {
                        if (policyRuleDeviceListBuilder_.isEmpty()) {
                            policyRuleDeviceListBuilder_.dispose();
                            policyRuleDeviceListBuilder_ = null;
                            policyRuleDeviceList_ = other.policyRuleDeviceList_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            policyRuleDeviceListBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getPolicyRuleDeviceListFieldBuilder() : null;
                        } else {
                            policyRuleDeviceListBuilder_.addAllMessages(other.policyRuleDeviceList_);
                        }
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    policy.Policy.PolicyRuleDevice m = input.readMessage(policy.Policy.PolicyRuleDevice.parser(), extensionRegistry);
                                    if (policyRuleDeviceListBuilder_ == null) {
                                        ensurePolicyRuleDeviceListIsMutable();
                                        policyRuleDeviceList_.add(m);
                                    } else {
                                        policyRuleDeviceListBuilder_.addMessage(m);
                                    }
                                    break;
                                }
                            // case 10
                            default:
                                {
                                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                                        // was an endgroup tag
                                        done = true;
                                    }
                                    break;
                                }
                        }
                        // switch (tag)
                    }
                    // while (!done)
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.unwrapIOException();
                } finally {
                    onChanged();
                }
                // finally
                return this;
            }

            private int bitField0_;

            private java.util.List<policy.Policy.PolicyRuleDevice> policyRuleDeviceList_ = java.util.Collections.emptyList();

            private void ensurePolicyRuleDeviceListIsMutable() {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    policyRuleDeviceList_ = new java.util.ArrayList<policy.Policy.PolicyRuleDevice>(policyRuleDeviceList_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<policy.Policy.PolicyRuleDevice, policy.Policy.PolicyRuleDevice.Builder, policy.Policy.PolicyRuleDeviceOrBuilder> policyRuleDeviceListBuilder_;

            /**
             * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
             */
            public java.util.List<policy.Policy.PolicyRuleDevice> getPolicyRuleDeviceListList() {
                if (policyRuleDeviceListBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(policyRuleDeviceList_);
                } else {
                    return policyRuleDeviceListBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
             */
            public int getPolicyRuleDeviceListCount() {
                if (policyRuleDeviceListBuilder_ == null) {
                    return policyRuleDeviceList_.size();
                } else {
                    return policyRuleDeviceListBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
             */
            public policy.Policy.PolicyRuleDevice getPolicyRuleDeviceList(int index) {
                if (policyRuleDeviceListBuilder_ == null) {
                    return policyRuleDeviceList_.get(index);
                } else {
                    return policyRuleDeviceListBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
             */
            public Builder setPolicyRuleDeviceList(int index, policy.Policy.PolicyRuleDevice value) {
                if (policyRuleDeviceListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePolicyRuleDeviceListIsMutable();
                    policyRuleDeviceList_.set(index, value);
                    onChanged();
                } else {
                    policyRuleDeviceListBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
             */
            public Builder setPolicyRuleDeviceList(int index, policy.Policy.PolicyRuleDevice.Builder builderForValue) {
                if (policyRuleDeviceListBuilder_ == null) {
                    ensurePolicyRuleDeviceListIsMutable();
                    policyRuleDeviceList_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    policyRuleDeviceListBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
             */
            public Builder addPolicyRuleDeviceList(policy.Policy.PolicyRuleDevice value) {
                if (policyRuleDeviceListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePolicyRuleDeviceListIsMutable();
                    policyRuleDeviceList_.add(value);
                    onChanged();
                } else {
                    policyRuleDeviceListBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
             */
            public Builder addPolicyRuleDeviceList(int index, policy.Policy.PolicyRuleDevice value) {
                if (policyRuleDeviceListBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePolicyRuleDeviceListIsMutable();
                    policyRuleDeviceList_.add(index, value);
                    onChanged();
                } else {
                    policyRuleDeviceListBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
             */
            public Builder addPolicyRuleDeviceList(policy.Policy.PolicyRuleDevice.Builder builderForValue) {
                if (policyRuleDeviceListBuilder_ == null) {
                    ensurePolicyRuleDeviceListIsMutable();
                    policyRuleDeviceList_.add(builderForValue.build());
                    onChanged();
                } else {
                    policyRuleDeviceListBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
             */
            public Builder addPolicyRuleDeviceList(int index, policy.Policy.PolicyRuleDevice.Builder builderForValue) {
                if (policyRuleDeviceListBuilder_ == null) {
                    ensurePolicyRuleDeviceListIsMutable();
                    policyRuleDeviceList_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    policyRuleDeviceListBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
             */
            public Builder addAllPolicyRuleDeviceList(java.lang.Iterable<? extends policy.Policy.PolicyRuleDevice> values) {
                if (policyRuleDeviceListBuilder_ == null) {
                    ensurePolicyRuleDeviceListIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, policyRuleDeviceList_);
                    onChanged();
                } else {
                    policyRuleDeviceListBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
             */
            public Builder clearPolicyRuleDeviceList() {
                if (policyRuleDeviceListBuilder_ == null) {
                    policyRuleDeviceList_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    policyRuleDeviceListBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
             */
            public Builder removePolicyRuleDeviceList(int index) {
                if (policyRuleDeviceListBuilder_ == null) {
                    ensurePolicyRuleDeviceListIsMutable();
                    policyRuleDeviceList_.remove(index);
                    onChanged();
                } else {
                    policyRuleDeviceListBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
             */
            public policy.Policy.PolicyRuleDevice.Builder getPolicyRuleDeviceListBuilder(int index) {
                return getPolicyRuleDeviceListFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
             */
            public policy.Policy.PolicyRuleDeviceOrBuilder getPolicyRuleDeviceListOrBuilder(int index) {
                if (policyRuleDeviceListBuilder_ == null) {
                    return policyRuleDeviceList_.get(index);
                } else {
                    return policyRuleDeviceListBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
             */
            public java.util.List<? extends policy.Policy.PolicyRuleDeviceOrBuilder> getPolicyRuleDeviceListOrBuilderList() {
                if (policyRuleDeviceListBuilder_ != null) {
                    return policyRuleDeviceListBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(policyRuleDeviceList_);
                }
            }

            /**
             * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
             */
            public policy.Policy.PolicyRuleDevice.Builder addPolicyRuleDeviceListBuilder() {
                return getPolicyRuleDeviceListFieldBuilder().addBuilder(policy.Policy.PolicyRuleDevice.getDefaultInstance());
            }

            /**
             * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
             */
            public policy.Policy.PolicyRuleDevice.Builder addPolicyRuleDeviceListBuilder(int index) {
                return getPolicyRuleDeviceListFieldBuilder().addBuilder(index, policy.Policy.PolicyRuleDevice.getDefaultInstance());
            }

            /**
             * <code>repeated .policy.PolicyRuleDevice policyRuleDeviceList = 1;</code>
             */
            public java.util.List<policy.Policy.PolicyRuleDevice.Builder> getPolicyRuleDeviceListBuilderList() {
                return getPolicyRuleDeviceListFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<policy.Policy.PolicyRuleDevice, policy.Policy.PolicyRuleDevice.Builder, policy.Policy.PolicyRuleDeviceOrBuilder> getPolicyRuleDeviceListFieldBuilder() {
                if (policyRuleDeviceListBuilder_ == null) {
                    policyRuleDeviceListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<policy.Policy.PolicyRuleDevice, policy.Policy.PolicyRuleDevice.Builder, policy.Policy.PolicyRuleDeviceOrBuilder>(policyRuleDeviceList_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
                    policyRuleDeviceList_ = null;
                }
                return policyRuleDeviceListBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }
            // @@protoc_insertion_point(builder_scope:policy.PolicyRuleDeviceList)
        }

        // @@protoc_insertion_point(class_scope:policy.PolicyRuleDeviceList)
        private static final policy.Policy.PolicyRuleDeviceList DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new policy.Policy.PolicyRuleDeviceList();
        }

        public static policy.Policy.PolicyRuleDeviceList getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<PolicyRuleDeviceList> PARSER = new com.google.protobuf.AbstractParser<PolicyRuleDeviceList>() {

            @java.lang.Override
            public PolicyRuleDeviceList parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                Builder builder = newBuilder();
                try {
                    builder.mergeFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(builder.buildPartial());
                } catch (com.google.protobuf.UninitializedMessageException e) {
                    throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(builder.buildPartial());
                }
                return builder.buildPartial();
            }
        };

        public static com.google.protobuf.Parser<PolicyRuleDeviceList> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PolicyRuleDeviceList> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public policy.Policy.PolicyRuleDeviceList getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    public interface PolicyRuleListOrBuilder extends // @@protoc_insertion_point(interface_extends:policy.PolicyRuleList)
    com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated .policy.PolicyRule policyRules = 1;</code>
         */
        java.util.List<policy.Policy.PolicyRule> getPolicyRulesList();

        /**
         * <code>repeated .policy.PolicyRule policyRules = 1;</code>
         */
        policy.Policy.PolicyRule getPolicyRules(int index);

        /**
         * <code>repeated .policy.PolicyRule policyRules = 1;</code>
         */
        int getPolicyRulesCount();

        /**
         * <code>repeated .policy.PolicyRule policyRules = 1;</code>
         */
        java.util.List<? extends policy.Policy.PolicyRuleOrBuilder> getPolicyRulesOrBuilderList();

        /**
         * <code>repeated .policy.PolicyRule policyRules = 1;</code>
         */
        policy.Policy.PolicyRuleOrBuilder getPolicyRulesOrBuilder(int index);
    }

    /**
     * <pre>
     * A list of policy rules
     * </pre>
     *
     * Protobuf type {@code policy.PolicyRuleList}
     */
    public static final class PolicyRuleList extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:policy.PolicyRuleList)
    PolicyRuleListOrBuilder {

        private static final long serialVersionUID = 0L;

        // Use PolicyRuleList.newBuilder() to construct.
        private PolicyRuleList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private PolicyRuleList() {
            policyRules_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({ "unused" })
        protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
            return new PolicyRuleList();
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return policy.Policy.internal_static_policy_PolicyRuleList_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return policy.Policy.internal_static_policy_PolicyRuleList_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRuleList.class, policy.Policy.PolicyRuleList.Builder.class);
        }

        public static final int POLICYRULES_FIELD_NUMBER = 1;

        @SuppressWarnings("serial")
        private java.util.List<policy.Policy.PolicyRule> policyRules_;

        /**
         * <code>repeated .policy.PolicyRule policyRules = 1;</code>
         */
        @java.lang.Override
        public java.util.List<policy.Policy.PolicyRule> getPolicyRulesList() {
            return policyRules_;
        }

        /**
         * <code>repeated .policy.PolicyRule policyRules = 1;</code>
         */
        @java.lang.Override
        public java.util.List<? extends policy.Policy.PolicyRuleOrBuilder> getPolicyRulesOrBuilderList() {
            return policyRules_;
        }

        /**
         * <code>repeated .policy.PolicyRule policyRules = 1;</code>
         */
        @java.lang.Override
        public int getPolicyRulesCount() {
            return policyRules_.size();
        }

        /**
         * <code>repeated .policy.PolicyRule policyRules = 1;</code>
         */
        @java.lang.Override
        public policy.Policy.PolicyRule getPolicyRules(int index) {
            return policyRules_.get(index);
        }

        /**
         * <code>repeated .policy.PolicyRule policyRules = 1;</code>
         */
        @java.lang.Override
        public policy.Policy.PolicyRuleOrBuilder getPolicyRulesOrBuilder(int index) {
            return policyRules_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;
            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            for (int i = 0; i < policyRules_.size(); i++) {
                output.writeMessage(1, policyRules_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1)
                return size;
            size = 0;
            for (int i = 0; i < policyRules_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, policyRules_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof policy.Policy.PolicyRuleList)) {
                return super.equals(obj);
            }
            policy.Policy.PolicyRuleList other = (policy.Policy.PolicyRuleList) obj;
            if (!getPolicyRulesList().equals(other.getPolicyRulesList()))
                return false;
            if (!getUnknownFields().equals(other.getUnknownFields()))
                return false;
            return true;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getPolicyRulesCount() > 0) {
                hash = (37 * hash) + POLICYRULES_FIELD_NUMBER;
                hash = (53 * hash) + getPolicyRulesList().hashCode();
            }
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static policy.Policy.PolicyRuleList parseFrom(java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleList parseFrom(java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleList parseFrom(com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleList parseFrom(com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleList parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static policy.Policy.PolicyRuleList parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleList parseFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleList parseFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleList parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleList parseDelimitedFrom(java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static policy.Policy.PolicyRuleList parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
        }

        public static policy.Policy.PolicyRuleList parseFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(policy.Policy.PolicyRuleList prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * A list of policy rules
         * </pre>
         *
         * Protobuf type {@code policy.PolicyRuleList}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:policy.PolicyRuleList)
        policy.Policy.PolicyRuleListOrBuilder {

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return policy.Policy.internal_static_policy_PolicyRuleList_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return policy.Policy.internal_static_policy_PolicyRuleList_fieldAccessorTable.ensureFieldAccessorsInitialized(policy.Policy.PolicyRuleList.class, policy.Policy.PolicyRuleList.Builder.class);
            }

            // Construct using policy.Policy.PolicyRuleList.newBuilder()
            private Builder() {
            }

            private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                bitField0_ = 0;
                if (policyRulesBuilder_ == null) {
                    policyRules_ = java.util.Collections.emptyList();
                } else {
                    policyRules_ = null;
                    policyRulesBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return policy.Policy.internal_static_policy_PolicyRuleList_descriptor;
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleList getDefaultInstanceForType() {
                return policy.Policy.PolicyRuleList.getDefaultInstance();
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleList build() {
                policy.Policy.PolicyRuleList result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public policy.Policy.PolicyRuleList buildPartial() {
                policy.Policy.PolicyRuleList result = new policy.Policy.PolicyRuleList(this);
                buildPartialRepeatedFields(result);
                if (bitField0_ != 0) {
                    buildPartial0(result);
                }
                onBuilt();
                return result;
            }

            private void buildPartialRepeatedFields(policy.Policy.PolicyRuleList result) {
                if (policyRulesBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) != 0)) {
                        policyRules_ = java.util.Collections.unmodifiableList(policyRules_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.policyRules_ = policyRules_;
                } else {
                    result.policyRules_ = policyRulesBuilder_.build();
                }
            }

            private void buildPartial0(policy.Policy.PolicyRuleList result) {
                int from_bitField0_ = bitField0_;
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof policy.Policy.PolicyRuleList) {
                    return mergeFrom((policy.Policy.PolicyRuleList) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(policy.Policy.PolicyRuleList other) {
                if (other == policy.Policy.PolicyRuleList.getDefaultInstance())
                    return this;
                if (policyRulesBuilder_ == null) {
                    if (!other.policyRules_.isEmpty()) {
                        if (policyRules_.isEmpty()) {
                            policyRules_ = other.policyRules_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensurePolicyRulesIsMutable();
                            policyRules_.addAll(other.policyRules_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.policyRules_.isEmpty()) {
                        if (policyRulesBuilder_.isEmpty()) {
                            policyRulesBuilder_.dispose();
                            policyRulesBuilder_ = null;
                            policyRules_ = other.policyRules_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            policyRulesBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ? getPolicyRulesFieldBuilder() : null;
                        } else {
                            policyRulesBuilder_.addAllMessages(other.policyRules_);
                        }
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch(tag) {
                            case 0:
                                done = true;
                                break;
                            case 10:
                                {
                                    policy.Policy.PolicyRule m = input.readMessage(policy.Policy.PolicyRule.parser(), extensionRegistry);
                                    if (policyRulesBuilder_ == null) {
                                        ensurePolicyRulesIsMutable();
                                        policyRules_.add(m);
                                    } else {
                                        policyRulesBuilder_.addMessage(m);
                                    }
                                    break;
                                }
                            // case 10
                            default:
                                {
                                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                                        // was an endgroup tag
                                        done = true;
                                    }
                                    break;
                                }
                        }
                        // switch (tag)
                    }
                    // while (!done)
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.unwrapIOException();
                } finally {
                    onChanged();
                }
                // finally
                return this;
            }

            private int bitField0_;

            private java.util.List<policy.Policy.PolicyRule> policyRules_ = java.util.Collections.emptyList();

            private void ensurePolicyRulesIsMutable() {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    policyRules_ = new java.util.ArrayList<policy.Policy.PolicyRule>(policyRules_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<policy.Policy.PolicyRule, policy.Policy.PolicyRule.Builder, policy.Policy.PolicyRuleOrBuilder> policyRulesBuilder_;

            /**
             * <code>repeated .policy.PolicyRule policyRules = 1;</code>
             */
            public java.util.List<policy.Policy.PolicyRule> getPolicyRulesList() {
                if (policyRulesBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(policyRules_);
                } else {
                    return policyRulesBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .policy.PolicyRule policyRules = 1;</code>
             */
            public int getPolicyRulesCount() {
                if (policyRulesBuilder_ == null) {
                    return policyRules_.size();
                } else {
                    return policyRulesBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .policy.PolicyRule policyRules = 1;</code>
             */
            public policy.Policy.PolicyRule getPolicyRules(int index) {
                if (policyRulesBuilder_ == null) {
                    return policyRules_.get(index);
                } else {
                    return policyRulesBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .policy.PolicyRule policyRules = 1;</code>
             */
            public Builder setPolicyRules(int index, policy.Policy.PolicyRule value) {
                if (policyRulesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePolicyRulesIsMutable();
                    policyRules_.set(index, value);
                    onChanged();
                } else {
                    policyRulesBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRule policyRules = 1;</code>
             */
            public Builder setPolicyRules(int index, policy.Policy.PolicyRule.Builder builderForValue) {
                if (policyRulesBuilder_ == null) {
                    ensurePolicyRulesIsMutable();
                    policyRules_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    policyRulesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRule policyRules = 1;</code>
             */
            public Builder addPolicyRules(policy.Policy.PolicyRule value) {
                if (policyRulesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePolicyRulesIsMutable();
                    policyRules_.add(value);
                    onChanged();
                } else {
                    policyRulesBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRule policyRules = 1;</code>
             */
            public Builder addPolicyRules(int index, policy.Policy.PolicyRule value) {
                if (policyRulesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePolicyRulesIsMutable();
                    policyRules_.add(index, value);
                    onChanged();
                } else {
                    policyRulesBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRule policyRules = 1;</code>
             */
            public Builder addPolicyRules(policy.Policy.PolicyRule.Builder builderForValue) {
                if (policyRulesBuilder_ == null) {
                    ensurePolicyRulesIsMutable();
                    policyRules_.add(builderForValue.build());
                    onChanged();
                } else {
                    policyRulesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRule policyRules = 1;</code>
             */
            public Builder addPolicyRules(int index, policy.Policy.PolicyRule.Builder builderForValue) {
                if (policyRulesBuilder_ == null) {
                    ensurePolicyRulesIsMutable();
                    policyRules_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    policyRulesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRule policyRules = 1;</code>
             */
            public Builder addAllPolicyRules(java.lang.Iterable<? extends policy.Policy.PolicyRule> values) {
                if (policyRulesBuilder_ == null) {
                    ensurePolicyRulesIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, policyRules_);
                    onChanged();
                } else {
                    policyRulesBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRule policyRules = 1;</code>
             */
            public Builder clearPolicyRules() {
                if (policyRulesBuilder_ == null) {
                    policyRules_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    policyRulesBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRule policyRules = 1;</code>
             */
            public Builder removePolicyRules(int index) {
                if (policyRulesBuilder_ == null) {
                    ensurePolicyRulesIsMutable();
                    policyRules_.remove(index);
                    onChanged();
                } else {
                    policyRulesBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .policy.PolicyRule policyRules = 1;</code>
             */
            public policy.Policy.PolicyRule.Builder getPolicyRulesBuilder(int index) {
                return getPolicyRulesFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .policy.PolicyRule policyRules = 1;</code>
             */
            public policy.Policy.PolicyRuleOrBuilder getPolicyRulesOrBuilder(int index) {
                if (policyRulesBuilder_ == null) {
                    return policyRules_.get(index);
                } else {
                    return policyRulesBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .policy.PolicyRule policyRules = 1;</code>
             */
            public java.util.List<? extends policy.Policy.PolicyRuleOrBuilder> getPolicyRulesOrBuilderList() {
                if (policyRulesBuilder_ != null) {
                    return policyRulesBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(policyRules_);
                }
            }

            /**
             * <code>repeated .policy.PolicyRule policyRules = 1;</code>
             */
            public policy.Policy.PolicyRule.Builder addPolicyRulesBuilder() {
                return getPolicyRulesFieldBuilder().addBuilder(policy.Policy.PolicyRule.getDefaultInstance());
            }

            /**
             * <code>repeated .policy.PolicyRule policyRules = 1;</code>
             */
            public policy.Policy.PolicyRule.Builder addPolicyRulesBuilder(int index) {
                return getPolicyRulesFieldBuilder().addBuilder(index, policy.Policy.PolicyRule.getDefaultInstance());
            }

            /**
             * <code>repeated .policy.PolicyRule policyRules = 1;</code>
             */
            public java.util.List<policy.Policy.PolicyRule.Builder> getPolicyRulesBuilderList() {
                return getPolicyRulesFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<policy.Policy.PolicyRule, policy.Policy.PolicyRule.Builder, policy.Policy.PolicyRuleOrBuilder> getPolicyRulesFieldBuilder() {
                if (policyRulesBuilder_ == null) {
                    policyRulesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<policy.Policy.PolicyRule, policy.Policy.PolicyRule.Builder, policy.Policy.PolicyRuleOrBuilder>(policyRules_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
                    policyRules_ = null;
                }
                return policyRulesBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }
            // @@protoc_insertion_point(builder_scope:policy.PolicyRuleList)
        }

        // @@protoc_insertion_point(class_scope:policy.PolicyRuleList)
        private static final policy.Policy.PolicyRuleList DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new policy.Policy.PolicyRuleList();
        }

        public static policy.Policy.PolicyRuleList getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<PolicyRuleList> PARSER = new com.google.protobuf.AbstractParser<PolicyRuleList>() {

            @java.lang.Override
            public PolicyRuleList parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                Builder builder = newBuilder();
                try {
                    builder.mergeFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(builder.buildPartial());
                } catch (com.google.protobuf.UninitializedMessageException e) {
                    throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(builder.buildPartial());
                }
                return builder.buildPartial();
            }
        };

        public static com.google.protobuf.Parser<PolicyRuleList> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PolicyRuleList> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public policy.Policy.PolicyRuleList getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }
    }

    private static final com.google.protobuf.Descriptors.Descriptor internal_static_policy_PolicyRuleId_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_policy_PolicyRuleId_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.Descriptor internal_static_policy_PolicyRuleState_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_policy_PolicyRuleState_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.Descriptor internal_static_policy_PolicyRuleBasic_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_policy_PolicyRuleBasic_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.Descriptor internal_static_policy_PolicyRuleService_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_policy_PolicyRuleService_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.Descriptor internal_static_policy_PolicyRuleDevice_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_policy_PolicyRuleDevice_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.Descriptor internal_static_policy_PolicyRule_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_policy_PolicyRule_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.Descriptor internal_static_policy_PolicyRuleIdList_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_policy_PolicyRuleIdList_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.Descriptor internal_static_policy_PolicyRuleServiceList_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_policy_PolicyRuleServiceList_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.Descriptor internal_static_policy_PolicyRuleDeviceList_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_policy_PolicyRuleDeviceList_fieldAccessorTable;

    private static final com.google.protobuf.Descriptors.Descriptor internal_static_policy_PolicyRuleList_descriptor;

    private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_policy_PolicyRuleList_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

    static {
        java.lang.String[] descriptorData = { "\n\014policy.proto\022\006policy\032\rcontext.proto\032\026p" + "olicy_condition.proto\032\023policy_action.pro" + "to\"+\n\014PolicyRuleId\022\033\n\004uuid\030\001 \001(\0132\r.conte" + "xt.Uuid\"g\n\017PolicyRuleState\0224\n\017policyRule" + "State\030\001 \001(\0162\033.policy.PolicyRuleStateEnum" + "\022\036\n\026policyRuleStateMessage\030\002 \001(\t\"\225\002\n\017Pol" + "icyRuleBasic\022*\n\014policyRuleId\030\001 \001(\0132\024.pol" + "icy.PolicyRuleId\0220\n\017policyRuleState\030\002 \001(" + "\0132\027.policy.PolicyRuleState\022\020\n\010priority\030\003" + " \001(\r\0222\n\rconditionList\030\004 \003(\0132\033.policy.Pol" + "icyRuleCondition\0220\n\017booleanOperator\030\005 \001(" + "\0162\027.policy.BooleanOperator\022,\n\nactionList" + "\030\006 \003(\0132\030.policy.PolicyRuleAction\"\223\001\n\021Pol" + "icyRuleService\0220\n\017policyRuleBasic\030\001 \001(\0132" + "\027.policy.PolicyRuleBasic\022%\n\tserviceId\030\002 " + "\001(\0132\022.context.ServiceId\022%\n\ndeviceList\030\003 " + "\003(\0132\021.context.DeviceId\"k\n\020PolicyRuleDevi" + "ce\0220\n\017policyRuleBasic\030\001 \001(\0132\027.policy.Pol" + "icyRuleBasic\022%\n\ndeviceList\030\002 \003(\0132\021.conte" + "xt.DeviceId\"u\n\nPolicyRule\022,\n\007service\030\001 \001" + "(\0132\031.policy.PolicyRuleServiceH\000\022*\n\006devic" + "e\030\002 \001(\0132\030.policy.PolicyRuleDeviceH\000B\r\n\013p" + "olicy_rule\"B\n\020PolicyRuleIdList\022.\n\020policy" + "RuleIdList\030\001 \003(\0132\024.policy.PolicyRuleId\"Q" + "\n\025PolicyRuleServiceList\0228\n\025policyRuleSer" + "viceList\030\001 \003(\0132\031.policy.PolicyRuleServic" + "e\"N\n\024PolicyRuleDeviceList\0226\n\024policyRuleD" + "eviceList\030\001 \003(\0132\030.policy.PolicyRuleDevic" + "e\"9\n\016PolicyRuleList\022\'\n\013policyRules\030\001 \003(\013" + "2\022.policy.PolicyRule*\377\001\n\023PolicyRuleState" + "Enum\022\024\n\020POLICY_UNDEFINED\020\000\022\021\n\rPOLICY_FAI" + "LED\020\001\022\023\n\017POLICY_INSERTED\020\002\022\024\n\020POLICY_VAL" + "IDATED\020\003\022\026\n\022POLICY_PROVISIONED\020\004\022\021\n\rPOLI" + "CY_ACTIVE\020\005\022\023\n\017POLICY_ENFORCED\020\006\022\026\n\022POLI" + "CY_INEFFECTIVE\020\007\022\024\n\020POLICY_EFFECTIVE\020\010\022\022" + "\n\016POLICY_UPDATED\020\t\022\022\n\016POLICY_REMOVED\020\n2\323" + "\004\n\rPolicyService\022H\n\020PolicyAddService\022\031.p" + "olicy.PolicyRuleService\032\027.policy.PolicyR" + "uleState\"\000\022F\n\017PolicyAddDevice\022\030.policy.P" + "olicyRuleDevice\032\027.policy.PolicyRuleState" + "\"\000\022K\n\023PolicyUpdateService\022\031.policy.Polic" + "yRuleService\032\027.policy.PolicyRuleState\"\000\022" + "I\n\022PolicyUpdateDevice\022\030.policy.PolicyRul" + "eDevice\032\027.policy.PolicyRuleState\"\000\022?\n\014Po" + "licyDelete\022\024.policy.PolicyRuleId\032\027.polic" + "y.PolicyRuleState\"\000\022E\n\020GetPolicyService\022" + "\024.policy.PolicyRuleId\032\031.policy.PolicyRul" + "eService\"\000\022C\n\017GetPolicyDevice\022\024.policy.P" + "olicyRuleId\032\030.policy.PolicyRuleDevice\"\000\022" + "K\n\024GetPolicyByServiceId\022\022.context.Servic" + "eId\032\035.policy.PolicyRuleServiceList\"\000b\006pr" + "oto3" };
        descriptor = com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, new com.google.protobuf.Descriptors.FileDescriptor[] { context.ContextOuterClass.getDescriptor(), policy.PolicyCondition.getDescriptor(), policy.PolicyAction.getDescriptor() });
        internal_static_policy_PolicyRuleId_descriptor = getDescriptor().getMessageTypes().get(0);
        internal_static_policy_PolicyRuleId_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_policy_PolicyRuleId_descriptor, new java.lang.String[] { "Uuid" });
        internal_static_policy_PolicyRuleState_descriptor = getDescriptor().getMessageTypes().get(1);
        internal_static_policy_PolicyRuleState_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_policy_PolicyRuleState_descriptor, new java.lang.String[] { "PolicyRuleState", "PolicyRuleStateMessage" });
        internal_static_policy_PolicyRuleBasic_descriptor = getDescriptor().getMessageTypes().get(2);
        internal_static_policy_PolicyRuleBasic_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_policy_PolicyRuleBasic_descriptor, new java.lang.String[] { "PolicyRuleId", "PolicyRuleState", "Priority", "ConditionList", "BooleanOperator", "ActionList" });
        internal_static_policy_PolicyRuleService_descriptor = getDescriptor().getMessageTypes().get(3);
        internal_static_policy_PolicyRuleService_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_policy_PolicyRuleService_descriptor, new java.lang.String[] { "PolicyRuleBasic", "ServiceId", "DeviceList" });
        internal_static_policy_PolicyRuleDevice_descriptor = getDescriptor().getMessageTypes().get(4);
        internal_static_policy_PolicyRuleDevice_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_policy_PolicyRuleDevice_descriptor, new java.lang.String[] { "PolicyRuleBasic", "DeviceList" });
        internal_static_policy_PolicyRule_descriptor = getDescriptor().getMessageTypes().get(5);
        internal_static_policy_PolicyRule_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_policy_PolicyRule_descriptor, new java.lang.String[] { "Service", "Device", "PolicyRule" });
        internal_static_policy_PolicyRuleIdList_descriptor = getDescriptor().getMessageTypes().get(6);
        internal_static_policy_PolicyRuleIdList_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_policy_PolicyRuleIdList_descriptor, new java.lang.String[] { "PolicyRuleIdList" });
        internal_static_policy_PolicyRuleServiceList_descriptor = getDescriptor().getMessageTypes().get(7);
        internal_static_policy_PolicyRuleServiceList_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_policy_PolicyRuleServiceList_descriptor, new java.lang.String[] { "PolicyRuleServiceList" });
        internal_static_policy_PolicyRuleDeviceList_descriptor = getDescriptor().getMessageTypes().get(8);
        internal_static_policy_PolicyRuleDeviceList_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_policy_PolicyRuleDeviceList_descriptor, new java.lang.String[] { "PolicyRuleDeviceList" });
        internal_static_policy_PolicyRuleList_descriptor = getDescriptor().getMessageTypes().get(9);
        internal_static_policy_PolicyRuleList_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(internal_static_policy_PolicyRuleList_descriptor, new java.lang.String[] { "PolicyRules" });
        context.ContextOuterClass.getDescriptor();
        policy.PolicyCondition.getDescriptor();
        policy.PolicyAction.getDescriptor();
    }
    // @@protoc_insertion_point(outer_class_scope)
}
