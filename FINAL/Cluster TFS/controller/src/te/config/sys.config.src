% Copyright 2022-2024 ETSI SDG TeraFlowSDN (TFS) (https://tfs.etsi.org/)
%
% Licensed under the Apache License, Version 2.0 (the "License");
% you may not use this file except in compliance with the License.
% You may obtain a copy of the License at
%
%      http://www.apache.org/licenses/LICENSE-2.0
%
% Unless required by applicable law or agreed to in writing, software
% distributed under the License is distributed on an "AS IS" BASIS,
% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
% See the License for the specific language governing permissions and
% limitations under the License.

[

    {tfte, [
        {context, <<"admin">>},
        {topology, <<"admin">>},
        {services, [
            {te, [
                {http, {env, "TESERVICE_SERVICE_HOST"}, {env, "TESERVICE_SERVICE_PORT_GRPC"}, []}
            ], #{}},
            {service, [
                {http, {env, "SERVICESERVICE_SERVICE_HOST"}, {env, "SERVICESERVICE_SERVICE_PORT_GRPC"}, []}
            ], #{}},
            {monitoring, [
                {http, {env, "MONITORINGSERVICE_SERVICE_HOST"}, {env, "MONITORINGSERVICE_SERVICE_PORT_GRPC"}, []}
            ], #{}},
            {nbi, [
                {http, {env, "NBISERVICE_SERVICE_HOST"}, {env, "NBISERVICE_SERVICE_PORT_GRPC"}, []}
            ], #{}},
            {device, [
                {http, {env, "DEVICESERVICE_SERVICE_HOST"}, {env, "DEVICESERVICE_SERVICE_PORT_GRPC"}, []}
            ], #{}},
            {context, [
                {http, {env, "CONTEXTSERVICE_SERVICE_HOST"}, {env, "CONTEXTSERVICE_SERVICE_PORT_GRPC"}, []}
            ], #{}},
            {ztp, [
                {http, {env, "ZTPSERVICE_SERVICE_HOST"}, {env, "ZTPSERVICE_SERVICE_PORT_GRPC"}, []}
            ], #{}}
        ]}
    ]},

    {pcep_server, [
        {handler, {epce_pcep_server_handler, []}}
    ]},

	{epce, [
	]},

    {grpcbox, [
        {servers, [#{
            grpc_opts => #{
                service_protos => [te_pb, grpcbox_health_pb, grpcbox_reflection_pb],
                %client_cert_dir => "",
                services => #{
                    'te.TEService' => tfte_te_service,
                    'grpc.health.v1.Health' => grpcbox_health_service,
                    'grpc.reflection.v1alpha.ServerReflection' => grpcbox_reflection_service
                }
            },
            transport_opts => #{
                ssl => false
                %keyfile => "",
                %certfile => "",
                %cacertfile => ""
            },
            listen_opts => #{
                port => 10030,
                ip => {0,0,0,0}
            },
            pool_opts => #{
                size => 10
            },
            server_opts => #{
                header_table_size => 4096,
                enable_push => 1,
                max_concurrent_streams => unlimited,
                initial_window_size => 65535,
                max_frame_size => 16384,
                max_header_list_size => unlimited
            }
        }]}
    ]},

    {kernel, [
        {logger_level, ${ERLANG_LOGGER_LEVEL}},
        {logger, [
            {handler, default, logger_std_h, #{
                level => ${ERLANG_LOGGER_LEVEL},
                filter_default => log,
                config => #{type => standard_io},
                formatter => {logger_formatter, #{
                    legacy_header => false,
                    single_line => true
                }}
            }}
        ]}
    ]}
].
