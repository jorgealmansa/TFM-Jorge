// Copyright 2022-2024 ETSI SDG TeraFlowSDN (TFS) (https://tfs.etsi.org/)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package dlt;

import "context.proto";

service DltConnectorService {
  rpc RecordAll        (context.TopologyId) returns (context.Empty) {}
  
  rpc RecordAllDevices (context.TopologyId) returns (context.Empty) {}
  rpc RecordDevice     (DltDeviceId       ) returns (context.Empty) {}

  rpc RecordAllLinks   (context.TopologyId) returns (context.Empty) {}
  rpc RecordLink       (DltLinkId         ) returns (context.Empty) {}

  rpc RecordAllServices(context.TopologyId) returns (context.Empty) {}
  rpc RecordService    (DltServiceId      ) returns (context.Empty) {}

  rpc RecordAllSlices  (context.TopologyId) returns (context.Empty) {}
  rpc RecordSlice      (DltSliceId        ) returns (context.Empty) {}
}

message DltDeviceId {
  context.TopologyId  topology_id = 1;
  context.DeviceId    device_id   = 2;
  bool                delete      = 3;
}

message DltLinkId {
  context.TopologyId  topology_id = 1;
  context.LinkId      link_id     = 2;
  bool                delete      = 3;
}

message DltServiceId {
  context.TopologyId  topology_id = 1;
  context.ServiceId   service_id  = 2;
  bool                delete      = 3;
}

message DltSliceId {
  context.TopologyId  topology_id = 1;
  context.SliceId     slice_id    = 2;
  bool                delete      = 3;
}
